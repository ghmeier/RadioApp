# 1 "C:\\Users\\David\\git\\RadioApp\\UCCSRadio\\streamerExtension\\source\\generic\\audioStreamer.cpp"
# 1 "<command-line>"
# 1 "./temp_defines_release.h" 1
# 1 "<command-line>" 2
# 1 "C:\\Users\\David\\git\\RadioApp\\UCCSRadio\\streamerExtension\\source\\generic\\audioStreamer.cpp"
# 1 "c:/marmalade/7.3/s3e/h/s3e.h" 1
# 19 "c:/marmalade/7.3/s3e/h/s3e.h"
# 1 "c:/marmalade/7.3/s3e/h/s3eAccelerometer.h" 1
# 15 "c:/marmalade/7.3/s3e/h/s3eAccelerometer.h"
# 1 "c:/marmalade/7.3/s3e/h/s3eTypes.h" 1
# 35 "c:/marmalade/7.3/s3e/h/s3eTypes.h"
typedef unsigned char s3e_uint8_t;
typedef signed char s3e_int8_t;
typedef unsigned short int s3e_uint16_t;
typedef signed short int s3e_int16_t;
typedef unsigned int s3e_uint32_t;
typedef signed int s3e_int32_t;
# 49 "c:/marmalade/7.3/s3e/h/s3eTypes.h"
  typedef signed long long s3e_int64_t;
  typedef unsigned long long s3e_uint64_t;
# 62 "c:/marmalade/7.3/s3e/h/s3eTypes.h"
typedef s3e_uint64_t uint64_t;
typedef s3e_int64_t int64_t;
typedef s3e_uint32_t uint32_t;
typedef s3e_int32_t int32_t;
typedef s3e_uint16_t uint16_t;
typedef s3e_int16_t int16_t;
typedef s3e_uint8_t uint8_t;
typedef s3e_int8_t int8_t;
# 84 "c:/marmalade/7.3/s3e/h/s3eTypes.h"
    typedef int intptr_t;
    typedef unsigned int uintptr_t;
# 96 "c:/marmalade/7.3/s3e/h/s3eTypes.h"
typedef unsigned int uint;
typedef unsigned short int ushort;
typedef unsigned long int ulong;
typedef unsigned char uint8;
typedef signed char int8;


typedef int64_t int64;
typedef uint64_t uint64;




typedef unsigned int uint32;






typedef signed int int32;






typedef uint16_t uint16;




typedef int16_t int16;
# 207 "c:/marmalade/7.3/s3e/h/s3eTypes.h"
typedef enum s3eResult
{
    S3E_RESULT_SUCCESS = 0,
    S3E_RESULT_ERROR = 1
} s3eResult;




typedef uint8 s3eBool;
# 227 "c:/marmalade/7.3/s3e/h/s3eTypes.h"
typedef unsigned short s3eWChar;
# 237 "c:/marmalade/7.3/s3e/h/s3eTypes.h"
typedef int32 (*s3eCallback) (void* systemData, void* userData);
# 16 "c:/marmalade/7.3/s3e/h/s3eAccelerometer.h" 2
# 90 "c:/marmalade/7.3/s3e/h/s3eAccelerometer.h"
typedef enum s3eAccelerometerError
{
    S3E_ACCELEROMETER_ERR_NONE = 0,
    S3E_ACCELEROMETER_ERR_PARAM = 1,
    S3E_ACCELEROMETER_ERR_UNAVAIL = 5
} s3eAccelerometerError;







extern "C" s3eAccelerometerError s3eAccelerometerGetError();
# 112 "c:/marmalade/7.3/s3e/h/s3eAccelerometer.h"
extern "C" const char* s3eAccelerometerGetErrorString();
# 128 "c:/marmalade/7.3/s3e/h/s3eAccelerometer.h"
typedef enum s3eAccelerometerAccuracy
{
    S3E_ACCELEROMETER_ACCURACY_UNKNOWN = 0,
    S3E_ACCELEROMETER_ACCURACY_UNRELIABLE = 1,
    S3E_ACCELEROMETER_ACCURACY_APPROXIMATE = 2,
    S3E_ACCELEROMETER_ACCURACY_HIGH = 3
} s3eAccelerometerAccuracy;






typedef enum s3eAccelerometerProperty
{
    S3E_ACCELEROMETER_AVAILABLE = 0,







    S3E_ACCELEROMETER_ACCURACY = 1
} s3eAccelerometerProperty;

extern "C" int32 s3eAccelerometerGetInt(s3eAccelerometerProperty property);
# 172 "c:/marmalade/7.3/s3e/h/s3eAccelerometer.h"
extern "C" s3eResult s3eAccelerometerStart();







extern "C" void s3eAccelerometerStop();







extern "C" int32 s3eAccelerometerGetX();







extern "C" int32 s3eAccelerometerGetY();







extern "C" int32 s3eAccelerometerGetZ();
# 20 "c:/marmalade/7.3/s3e/h/s3e.h" 2
# 1 "c:/marmalade/7.3/s3e/h/s3eAudio.h" 1
# 102 "c:/marmalade/7.3/s3e/h/s3eAudio.h"
typedef enum s3eAudioCodec
{
    S3E_AUDIO_CODEC_MIDI = 1,
    S3E_AUDIO_CODEC_MP3 = 2,
    S3E_AUDIO_CODEC_AAC = 3,
    S3E_AUDIO_CODEC_AACPLUS = 4,
    S3E_AUDIO_CODEC_QCP = 5,
    S3E_AUDIO_CODEC_PCM = 6,
    S3E_AUDIO_CODEC_SPF = 7,
    S3E_AUDIO_CODEC_AMR = 8,
    S3E_AUDIO_CODEC_MP4 = 9
} s3eAudioCodec;






typedef enum s3eAudioStatus
{





    S3E_AUDIO_STOPPED = 0,




    S3E_AUDIO_PLAYING = 1,




    S3E_AUDIO_PAUSED = 2,
# 146 "c:/marmalade/7.3/s3e/h/s3eAudio.h"
    S3E_AUDIO_FAILED = 3
} s3eAudioStatus;
# 156 "c:/marmalade/7.3/s3e/h/s3eAudio.h"
typedef enum s3eAudioProperty
{





    S3E_AUDIO_VOLUME = 0,





    S3E_AUDIO_STATUS = 1,





    S3E_AUDIO_POSITION = 2,
# 188 "c:/marmalade/7.3/s3e/h/s3eAudio.h"
    S3E_AUDIO_VOLUME_DEFAULT = 3,





    S3E_AUDIO_CHANNEL = 4,





    S3E_AUDIO_NUM_CHANNELS = 5,

    S3E_AUDIO_AVAILABLE = 6,







    S3E_AUDIO_MUTES_S3ESOUND = 7,






    S3E_AUDIO_DURATION = 8,






    S3E_AUDIO_PLAYBACK_FROM_HTTP_AVAILABLE = 9
} s3eAudioProperty;
# 242 "c:/marmalade/7.3/s3e/h/s3eAudio.h"
extern "C" int32 s3eAudioGetInt(s3eAudioProperty property);
# 262 "c:/marmalade/7.3/s3e/h/s3eAudio.h"
extern "C" s3eResult s3eAudioSetInt(s3eAudioProperty property, int32 value);
# 272 "c:/marmalade/7.3/s3e/h/s3eAudio.h"
typedef enum s3eAudioCallback
{
# 289 "c:/marmalade/7.3/s3e/h/s3eAudio.h"
    S3E_AUDIO_STOP = 2,

    S3E_AUDIO_CALLBACK_MAX
} s3eAudioCallback;






typedef struct s3eAudioCallbackData
{

    uint32 m_ChannelID;
} s3eAudioCallbackData;
# 324 "c:/marmalade/7.3/s3e/h/s3eAudio.h"
extern "C" s3eResult s3eAudioRegister(s3eAudioCallback cbid, s3eCallback fn, void* userData);
# 340 "c:/marmalade/7.3/s3e/h/s3eAudio.h"
extern "C" s3eResult s3eAudioUnRegister(s3eAudioCallback cbid, s3eCallback fn);
# 349 "c:/marmalade/7.3/s3e/h/s3eAudio.h"
typedef enum s3eAudioError
{
    S3E_AUDIO_ERR_NONE = 0,
    S3E_AUDIO_ERR_PARAM = 1,
    S3E_AUDIO_ERR_TOO_MANY = 2,
    S3E_AUDIO_ERR_ALREADY_REG = 3,
    S3E_AUDIO_ERR_NOT_FOUND = 4,
    S3E_AUDIO_ERR_UNAVAIL = 5,
    S3E_AUDIO_ERR_DEVICE = 6,
    S3E_AUDIO_ERR_UNSUPPORTED = 7,
    S3E_AUDIO_ERR_MEM = 8,
    S3E_AUDIO_ERR_INVALID_DRIVE = 10,
    S3E_AUDIO_ERR_INVALID_PATH = 11,
    S3E_AUDIO_ERR_FILEFORMAT = 1000,
    S3E_AUDIO_ERR_WRONG_STATE = 1001
} s3eAudioError;
# 378 "c:/marmalade/7.3/s3e/h/s3eAudio.h"
extern "C" s3eAudioError s3eAudioGetError();
# 392 "c:/marmalade/7.3/s3e/h/s3eAudio.h"
extern "C" const char* s3eAudioGetErrorString();
# 466 "c:/marmalade/7.3/s3e/h/s3eAudio.h"
extern "C" s3eResult s3eAudioPlay(const char* filename, uint32 repeatCount =1);
# 537 "c:/marmalade/7.3/s3e/h/s3eAudio.h"
extern "C" s3eResult s3eAudioPlayFromBuffer(void* buffer, uint32 bufferLen, uint32 repeatCount =0);
# 562 "c:/marmalade/7.3/s3e/h/s3eAudio.h"
extern "C" s3eResult s3eAudioPause();
# 581 "c:/marmalade/7.3/s3e/h/s3eAudio.h"
extern "C" s3eResult s3eAudioResume();
# 595 "c:/marmalade/7.3/s3e/h/s3eAudio.h"
extern "C" void s3eAudioStop();
# 606 "c:/marmalade/7.3/s3e/h/s3eAudio.h"
extern "C" s3eBool s3eAudioIsPlaying();
# 620 "c:/marmalade/7.3/s3e/h/s3eAudio.h"
extern "C" s3eBool s3eAudioIsCodecSupported(s3eAudioCodec codec);
# 21 "c:/marmalade/7.3/s3e/h/s3e.h" 2
# 1 "c:/marmalade/7.3/s3e/h/s3eCompression.h" 1
# 49 "c:/marmalade/7.3/s3e/h/s3eCompression.h"
typedef enum s3eCompressionAlgorithms
{
    S3E_COMPRESSION_ALG_AUTO = 0,
    S3E_COMPRESSION_ALG_NONE = 1,







    S3E_COMPRESSION_ALG_ZLIB = 2,







    S3E_COMPRESSION_ALG_GZIP = 3,





    S3E_COMPRESSION_ALG_LZMA = 4,

    S3E_COMPRESSION_ALG_MAX
} s3eCompressionAlgorithms;






typedef enum s3eCompressionError
{
    S3E_COMPRESSION_ERR_NONE = 0,
    S3E_COMPRESSION_ERR_PARAM = 1,
    S3E_COMPRESSION_ERR_TOO_MANY = 2,
    S3E_COMPRESSION_ERR_DEVICE = 6,
    S3E_COMPRESSION_ERR_MEM = 8,

    S3E_COMPRESSION_ERR_BAD_DATA = 1000,
    S3E_COMPRESSION_ERR_INSUFF = 1002
} s3eCompressionError;





typedef struct s3eDecompressionHandle s3eDecompressionHandle;
# 111 "c:/marmalade/7.3/s3e/h/s3eCompression.h"
typedef struct s3eDecompressionInput
{

    void* m_Data;

    int32 m_Size;
} s3eDecompressionInput;
# 153 "c:/marmalade/7.3/s3e/h/s3eCompression.h"
extern "C" s3eDecompressionHandle* s3eCompressionDecompInit(s3eCompressionAlgorithms alg, s3eCallback inputFn, void* userData);
# 206 "c:/marmalade/7.3/s3e/h/s3eCompression.h"
extern "C" s3eResult s3eCompressionDecompRead(s3eDecompressionHandle* handle, void* bufferOut, uint32* lenOut);
# 226 "c:/marmalade/7.3/s3e/h/s3eCompression.h"
extern "C" s3eResult s3eCompressionDecompFinal(s3eDecompressionHandle* handle);
# 276 "c:/marmalade/7.3/s3e/h/s3eCompression.h"
extern "C" s3eResult s3eCompressionDecomp(void* bufferIn, uint32 lenIn, void** bufferOut, uint32 *lenOut, s3eCompressionAlgorithms algorithm);
# 289 "c:/marmalade/7.3/s3e/h/s3eCompression.h"
extern "C" s3eCompressionError s3eCompressionGetError();
# 302 "c:/marmalade/7.3/s3e/h/s3eCompression.h"
extern "C" const char* s3eCompressionGetErrorString();
# 22 "c:/marmalade/7.3/s3e/h/s3e.h" 2
# 1 "c:/marmalade/7.3/s3e/h/s3eConfig.h" 1
# 16 "c:/marmalade/7.3/s3e/h/s3eConfig.h"
# 1 "c:/marmalade/7.3/s3e/h/s3eFile.h" 1
# 49 "c:/marmalade/7.3/s3e/h/s3eFile.h"
typedef struct s3eFile s3eFile;
# 82 "c:/marmalade/7.3/s3e/h/s3eFile.h"
typedef enum s3eFileSeekOrigin
{
    S3E_FILESEEK_SET = 0,
    S3E_FILESEEK_CUR = 1,
    S3E_FILESEEK_END = 2
} s3eFileSeekOrigin;




typedef struct s3eFileList s3eFileList;
# 113 "c:/marmalade/7.3/s3e/h/s3eFile.h"
typedef enum s3eFileProperty
{






    S3E_FILE_ROM_EXISTS = 1,





    S3E_FILE_BYTES_TOTAL = 2,




    S3E_FILE_BYTES_FREE = 3
} s3eFileProperty;
# 143 "c:/marmalade/7.3/s3e/h/s3eFile.h"
typedef enum s3eFileStats
{







    S3E_FILE_ISFILE = 0,







    S3E_FILE_ISDIR = 1,






    S3E_FILE_ISUSER = 2,
# 180 "c:/marmalade/7.3/s3e/h/s3eFile.h"
    S3E_FILE_ISWRITABLE = 3,





    S3E_FILE_SIZE = 4,
# 196 "c:/marmalade/7.3/s3e/h/s3eFile.h"
    S3E_FILE_MODIFIED_DATE = 5,
# 208 "c:/marmalade/7.3/s3e/h/s3eFile.h"
    S3E_FILE_DRIVE_BYTES_FREE = 6,
# 217 "c:/marmalade/7.3/s3e/h/s3eFile.h"
    S3E_FILE_DRIVE = 7,
# 226 "c:/marmalade/7.3/s3e/h/s3eFile.h"
    S3E_FILE_DRIVE_BYTES_TOTAL = 8,






    S3E_FILE_REAL_PATH = 9,
} s3eFileStats;
# 252 "c:/marmalade/7.3/s3e/h/s3eFile.h"
extern "C" int32 s3eFileGetInt(s3eFileProperty property);
# 277 "c:/marmalade/7.3/s3e/h/s3eFile.h"
extern "C" int64 s3eFileGetFileInt(const char* filename, s3eFileStats stat);
# 302 "c:/marmalade/7.3/s3e/h/s3eFile.h"
extern "C" char* s3eFileGetFileString(const char* filename, s3eFileStats stat, char* str, int len);
# 311 "c:/marmalade/7.3/s3e/h/s3eFile.h"
typedef enum s3eFileError
{
    S3E_FILE_ERR_NONE = 0,
    S3E_FILE_ERR_PARAM = 1,
    S3E_FILE_ERR_TOO_MANY = 2,
    S3E_FILE_ERR_ALREADY_REG = 3,
    S3E_FILE_ERR_NOT_FOUND = 4,
    S3E_FILE_ERR_UNAVAIL = 5,
    S3E_FILE_ERR_DEVICE = 6,
    S3E_FILE_ERR_UNSUPPORTED = 7,
    S3E_FILE_ERR_MEM = 8,
    S3E_FILE_ERR_GENERIC = 9,
    S3E_FILE_ERR_INVALID_DRIVE = 10,
    S3E_FILE_ERR_INVALID_PATH = 11,
    S3E_FILE_ERR_DATA = 12,

    S3E_FILE_ERR_INVALID_MODE = 1000,
    S3E_FILE_ERR_EXISTS = 1001,
    S3E_FILE_ERR_NOT_EMPTY = 1002,
    S3E_FILE_ERR_ACCESS = 1003,
    S3E_FILE_ERR_NO_MORE = 1004,
    S3E_FILE_ERR_EOF = 1005
} s3eFileError;
# 346 "c:/marmalade/7.3/s3e/h/s3eFile.h"
extern "C" s3eFileError s3eFileGetError();
# 360 "c:/marmalade/7.3/s3e/h/s3eFile.h"
extern "C" const char* s3eFileGetErrorString();
# 411 "c:/marmalade/7.3/s3e/h/s3eFile.h"
extern "C" s3eFile* s3eFileOpen(const char* filename, const char* mode);
# 430 "c:/marmalade/7.3/s3e/h/s3eFile.h"
extern "C" s3eFile* s3eFileOpenFromMemory(void* buffer, uint32 bufferLen);
# 447 "c:/marmalade/7.3/s3e/h/s3eFile.h"
extern "C" s3eResult s3eFileClose(s3eFile* file);
# 468 "c:/marmalade/7.3/s3e/h/s3eFile.h"
extern "C" s3eResult s3eFileFlush(s3eFile* file);
# 499 "c:/marmalade/7.3/s3e/h/s3eFile.h"
extern "C" uint32 s3eFileRead(void* buffer, uint32 elemSize, uint32 noElems, s3eFile* file);
# 526 "c:/marmalade/7.3/s3e/h/s3eFile.h"
extern "C" uint32 s3eFileWrite(const void* buffer, uint32 elemSize, uint32 noElems, s3eFile* file);
# 540 "c:/marmalade/7.3/s3e/h/s3eFile.h"
extern "C" int s3eFilePrintf(s3eFile* f, const char *fmt, ...);
# 560 "c:/marmalade/7.3/s3e/h/s3eFile.h"
extern "C" int32 s3eFileGetChar(s3eFile* file);
# 583 "c:/marmalade/7.3/s3e/h/s3eFile.h"
extern "C" int32 s3eFilePutChar(char c, s3eFile* file);
# 621 "c:/marmalade/7.3/s3e/h/s3eFile.h"
extern "C" char* s3eFileReadString(char* string, uint32 maxLen, s3eFile* file);
# 644 "c:/marmalade/7.3/s3e/h/s3eFile.h"
extern "C" s3eBool s3eFileEOF(s3eFile* file);
# 679 "c:/marmalade/7.3/s3e/h/s3eFile.h"
extern "C" s3eResult s3eFileSeek(s3eFile* file, int32 offset, s3eFileSeekOrigin origin);
# 695 "c:/marmalade/7.3/s3e/h/s3eFile.h"
extern "C" int32 s3eFileTell(s3eFile* file);
# 712 "c:/marmalade/7.3/s3e/h/s3eFile.h"
extern "C" int32 s3eFileGetSize(s3eFile* file);
# 738 "c:/marmalade/7.3/s3e/h/s3eFile.h"
extern "C" s3eResult s3eFileMakeDirectory(const char* dirName);
# 763 "c:/marmalade/7.3/s3e/h/s3eFile.h"
extern "C" s3eResult s3eFileDeleteDirectory(const char* dirName);
# 779 "c:/marmalade/7.3/s3e/h/s3eFile.h"
extern "C" s3eBool s3eFileCheckExists(const char* filename);
# 813 "c:/marmalade/7.3/s3e/h/s3eFile.h"
extern "C" s3eResult s3eFileRename(const char* src, const char* dest);
# 838 "c:/marmalade/7.3/s3e/h/s3eFile.h"
extern "C" s3eResult s3eFileDelete(const char* filename);
# 866 "c:/marmalade/7.3/s3e/h/s3eFile.h"
extern "C" s3eResult s3eFileTruncate(const char* filename, uint32 length);
# 876 "c:/marmalade/7.3/s3e/h/s3eFile.h"
extern "C" uint64 s3eFileGetLastWriteTime(const char* filename);
# 905 "c:/marmalade/7.3/s3e/h/s3eFile.h"
extern "C" s3eFileList* s3eFileListDirectory(const char* dirName);
# 927 "c:/marmalade/7.3/s3e/h/s3eFile.h"
extern "C" s3eResult s3eFileListNext(s3eFileList* handle, char* filename, int filenameLen);
# 942 "c:/marmalade/7.3/s3e/h/s3eFile.h"
extern "C" s3eResult s3eFileListClose(s3eFileList* handle);







typedef struct s3eUsrFile s3eUsrFile;
# 960 "c:/marmalade/7.3/s3e/h/s3eFile.h"
typedef s3eUsrFile*(*s3eUserOpenFn)(const char* filename, const char *mode);
# 972 "c:/marmalade/7.3/s3e/h/s3eFile.h"
typedef uint32 (*s3eUserReadFn)(void* buffer, uint32 elemLen, uint32 noElems, s3eUsrFile *file);
# 984 "c:/marmalade/7.3/s3e/h/s3eFile.h"
typedef uint32 (*s3eUserWriteFn)(const void* buffer, uint32 elemLen, uint32 noElems, s3eUsrFile *file);
# 993 "c:/marmalade/7.3/s3e/h/s3eFile.h"
typedef s3eBool (*s3eUserEOFFn)(s3eUsrFile* file);
# 1004 "c:/marmalade/7.3/s3e/h/s3eFile.h"
typedef s3eResult (*s3eUserSeekFn)(s3eUsrFile* file, int32 offset, s3eFileSeekOrigin origin);
# 1013 "c:/marmalade/7.3/s3e/h/s3eFile.h"
typedef int32 (*s3eUserTellFn)(s3eUsrFile* file);
# 1022 "c:/marmalade/7.3/s3e/h/s3eFile.h"
typedef s3eResult (*s3eUserCloseFn)(s3eUsrFile* file);




typedef struct s3eUsrFileList s3eUsrFileList;
# 1037 "c:/marmalade/7.3/s3e/h/s3eFile.h"
typedef s3eUsrFileList* (*s3eUserListDirFn)(const char* path);
# 1051 "c:/marmalade/7.3/s3e/h/s3eFile.h"
typedef s3eResult (*s3eUserListNextFn)(s3eUsrFileList* handle, char* filename, int filenameLen);
# 1061 "c:/marmalade/7.3/s3e/h/s3eFile.h"
typedef s3eResult (*s3eUserListCloseFn)(s3eUsrFileList* handle);
# 1071 "c:/marmalade/7.3/s3e/h/s3eFile.h"
typedef s3eResult (*s3eUserDeleteFn)(const char* filename);
# 1108 "c:/marmalade/7.3/s3e/h/s3eFile.h"
typedef struct
{
    s3eUserOpenFn m_Open;
    s3eUserReadFn m_Read;
    s3eUserEOFFn m_EOF;
    s3eUserSeekFn m_Seek;
    s3eUserTellFn m_Tell;
    s3eUserCloseFn m_Close;

    s3eUserListDirFn m_ListDir;
    s3eUserListNextFn m_ListNext;
    s3eUserListCloseFn m_ListClose;

    s3eUserWriteFn m_Write;
    s3eUserDeleteFn m_Delete;

    void* m_Reserved[5];
} s3eFileUserCallbacks;
# 1138 "c:/marmalade/7.3/s3e/h/s3eFile.h"
extern "C" s3eResult s3eFileAddUserFileSys(s3eFileUserCallbacks* callbacks);
# 1148 "c:/marmalade/7.3/s3e/h/s3eFile.h"
extern "C" s3eResult s3eFileRemoveUserFileSys(s3eFileUserCallbacks* callbacks);
# 17 "c:/marmalade/7.3/s3e/h/s3eConfig.h" 2
# 55 "c:/marmalade/7.3/s3e/h/s3eConfig.h"
typedef enum s3eConfigError
{
    S3E_CONFIG_ERR_NONE = 0,
    S3E_CONFIG_ERR_PARAM = 1,

    S3E_CONFIG_ERR_NOT_FOUND = 4,

    S3E_CONFIG_ERR_PARSE = 6
} s3eConfigError;
# 83 "c:/marmalade/7.3/s3e/h/s3eConfig.h"
extern "C" s3eConfigError s3eConfigGetError();
# 97 "c:/marmalade/7.3/s3e/h/s3eConfig.h"
extern "C" const char* s3eConfigGetErrorString();
# 120 "c:/marmalade/7.3/s3e/h/s3eConfig.h"
extern "C" s3eResult s3eConfigGetString(const char* group, const char* name, char* value);

extern "C" s3eResult s3eConfigGetStringHash(uint32 hash, char* value);
# 149 "c:/marmalade/7.3/s3e/h/s3eConfig.h"
extern "C" s3eResult s3eConfigGetInt(const char* group, const char* name, int* value);

extern "C" s3eResult s3eConfigGetIntHash(uint32 hash, int* value);
# 23 "c:/marmalade/7.3/s3e/h/s3e.h" 2
# 1 "c:/marmalade/7.3/s3e/h/s3eCrypto.h" 1
# 49 "c:/marmalade/7.3/s3e/h/s3eCrypto.h"
typedef struct s3eSHA1 s3eSHA1;
# 58 "c:/marmalade/7.3/s3e/h/s3eCrypto.h"
typedef enum s3eCryptoError
{
    S3E_CRYPTO_ERR_NONE = 0,
    S3E_CRYPTO_ERR_PARAM = 1,
    S3E_CRYPTO_ERR_TOO_MANY = 2,
    S3E_CRYPTO_ERR_DEVICE = 6,


    S3E_CRYPTO_ERR_INVALID_SIG = 1000,
    S3E_CRYPTO_ERR_SIG_CHECK = 1001
} s3eCryptoError;
# 84 "c:/marmalade/7.3/s3e/h/s3eCrypto.h"
extern "C" uint32 s3eCryptoRand();
# 100 "c:/marmalade/7.3/s3e/h/s3eCrypto.h"
extern "C" s3eResult s3eCryptoSha1(const uint8* data, uint32 dataLen, uint8* hash);
# 116 "c:/marmalade/7.3/s3e/h/s3eCrypto.h"
extern "C" s3eSHA1* s3eCryptoSha1Init();
# 133 "c:/marmalade/7.3/s3e/h/s3eCrypto.h"
extern "C" s3eResult s3eCryptoSha1Update(s3eSHA1* ctx, const uint8* data, uint32 dataLen);
# 149 "c:/marmalade/7.3/s3e/h/s3eCrypto.h"
extern "C" s3eResult s3eCryptoSha1Final(s3eSHA1* ctx, uint8* hash);
# 166 "c:/marmalade/7.3/s3e/h/s3eCrypto.h"
extern "C" s3eResult s3eCryptoVerifyRsa(uint8* sig, int sigLen,
                                     uint8* hash, int hashLen,
                                     uint8* mod, int modLen,
                                     uint8* exp, int expLen);
# 182 "c:/marmalade/7.3/s3e/h/s3eCrypto.h"
extern "C" s3eCryptoError s3eCryptoGetError();
# 196 "c:/marmalade/7.3/s3e/h/s3eCrypto.h"
extern "C" const char* s3eCryptoGetErrorString();
# 24 "c:/marmalade/7.3/s3e/h/s3e.h" 2
# 1 "c:/marmalade/7.3/s3e/h/s3eDebug.h" 1
# 54 "c:/marmalade/7.3/s3e/h/s3eDebug.h"
typedef enum s3eDebugProperty
{



    S3E_DEBUG_TRACE_ENABLED = 0,





    S3E_DEBUG_TRACE_TO_FILE = 1,




    S3E_DEBUG_ASSERT_ENABLED = 2,





    S3E_DEBUG_AVAILABLE = 3,




    S3E_DEBUG_FONT_SCALE = 4,




    S3E_DEBUG_FONT_WIDTH = 5,




    S3E_DEBUG_FONT_HEIGHT = 6

} s3eDebugProperty;
# 111 "c:/marmalade/7.3/s3e/h/s3eDebug.h"
extern "C" int32 s3eDebugGetInt(s3eDebugProperty property);
# 129 "c:/marmalade/7.3/s3e/h/s3eDebug.h"
extern "C" s3eResult s3eDebugSetInt(s3eDebugProperty property, int32 value);







typedef enum s3eDebugCallback
{
# 153 "c:/marmalade/7.3/s3e/h/s3eDebug.h"
    S3E_DEBUG_ASSERT = 0,
# 168 "c:/marmalade/7.3/s3e/h/s3eDebug.h"
    S3E_DEBUG_ERROR = 1,

    S3E_DEBUG_CALLBACK_MAX
} s3eDebugCallback;
# 196 "c:/marmalade/7.3/s3e/h/s3eDebug.h"
extern "C" s3eResult s3eDebugRegister(s3eDebugCallback cbid, s3eCallback fn, void* userData);
# 213 "c:/marmalade/7.3/s3e/h/s3eDebug.h"
extern "C" s3eResult s3eDebugUnRegister(s3eDebugCallback cbid, s3eCallback fn);
# 222 "c:/marmalade/7.3/s3e/h/s3eDebug.h"
typedef enum s3eDebugError
{
    S3E_DEBUG_ERR_NONE = 0,
    S3E_DEBUG_ERR_PARAM = 1,
    S3E_DEBUG_ERR_TOO_MANY = 2,
    S3E_DEBUG_ERR_ALREADY_REG = 3,
    S3E_DEBUG_ERR_NOT_FOUND = 4
} s3eDebugError;
# 242 "c:/marmalade/7.3/s3e/h/s3eDebug.h"
extern "C" s3eDebugError s3eDebugGetError();
# 255 "c:/marmalade/7.3/s3e/h/s3eDebug.h"
extern "C" const char* s3eDebugGetErrorString();

typedef enum s3eErrorShowResult
{

    S3E_ERROR_SHOW_CONTINUE = 0,

    S3E_ERROR_SHOW_STOP = 1,

    S3E_ERROR_SHOW_IGNORE = 2,





    S3E_ERROR_SHOW_AGAIN = 3
} s3eErrorShowResult;




typedef enum s3eMessageType
{





    S3E_MESSAGE_CONTINUE = 0,





    S3E_MESSAGE_CONTINUE_STOP = 1,






    S3E_MESSAGE_CONTINUE_STOP_IGNORE = 2
} s3eMessageType;







extern "C" s3eBool s3eDebugIsDebuggerPresent();
# 321 "c:/marmalade/7.3/s3e/h/s3eDebug.h"
extern "C" void s3eDebugOutputString(const char* pStr);
# 333 "c:/marmalade/7.3/s3e/h/s3eDebug.h"
extern "C" s3eErrorShowResult s3eDebugErrorShow(s3eMessageType type, const char* string);






extern "C" s3eErrorShowResult s3eDebugErrorPrintf(const char* fmt, ...)

__attribute__((format(printf, 1, 2)))

;
# 358 "c:/marmalade/7.3/s3e/h/s3eDebug.h"
extern "C" s3eErrorShowResult s3eDebugAssertShow(s3eMessageType type, const char* string);
# 371 "c:/marmalade/7.3/s3e/h/s3eDebug.h"
extern "C" void s3eDebugTraceLine(const char* string);






extern "C" int s3eDebugTracePrintf(const char* fmt, ...)

__attribute__((format(printf, 1, 2)))

;






extern "C" void s3eDebugTraceClearFile();
# 398 "c:/marmalade/7.3/s3e/h/s3eDebug.h"
extern "C" void s3eDebugTraceFlush();
# 423 "c:/marmalade/7.3/s3e/h/s3eDebug.h"
extern "C" void s3eDebugPrint(int x, int y, const char* string, s3eBool wrap);






extern "C" void s3eDebugPrintf(int x, int y, s3eBool wrap, const char* fmt, ...)

__attribute__((format(printf, 4, 5)))

;







extern "C" s3eBool s3eDebugTraceChannelSwitch(const char* channel, s3eBool new_state);
# 25 "c:/marmalade/7.3/s3e/h/s3e.h" 2
# 1 "c:/marmalade/7.3/s3e/h/s3eDevice.h" 1
# 55 "c:/marmalade/7.3/s3e/h/s3eDevice.h"
typedef enum s3eDeviceError
{
    S3E_DEVICE_ERR_NONE = 0,
    S3E_DEVICE_ERR_PARAM = 1,
    S3E_DEVICE_ERR_TOO_MANY = 2,
    S3E_DEVICE_ERR_ALREADY_REG = 3,
    S3E_DEVICE_ERR_NOT_FOUND = 4,
    S3E_DEVICE_ERR_UNAVAIL = 5,
    S3E_DEVICE_ERR_DEVICE = 6,
    S3E_DEVICE_ERR_UNSUPPORTED = 7,
    S3E_DEVICE_ERR_MEM = 8,
    S3E_DEVICE_ERR_GENERIC = 9,
    S3E_DEVICE_ERR_INVALID_DRIVE = 10,
    S3E_DEVICE_ERR_INVALID_PATH = 11
} s3eDeviceError;
# 82 "c:/marmalade/7.3/s3e/h/s3eDevice.h"
extern "C" s3eDeviceError s3eDeviceGetError();
# 96 "c:/marmalade/7.3/s3e/h/s3eDevice.h"
extern "C" const char* s3eDeviceGetErrorString();
# 105 "c:/marmalade/7.3/s3e/h/s3eDevice.h"
typedef enum s3eDeviceFPUType
{
    S3E_DEVICE_FPU_NONE = 0,
    S3E_DEVICE_FPU_VFP = 1,
    S3E_DEVICE_FPU_VFPV3 = 2,
    S3E_DEVICE_FPU_NEON = 3
} s3eDeviceFPUType;






typedef enum s3eDeviceProperty
{







    S3E_DEVICE_OS = 0,





    S3E_DEVICE_CLASS = 1,
# 149 "c:/marmalade/7.3/s3e/h/s3eDevice.h"
    S3E_DEVICE_ID = 2,
# 163 "c:/marmalade/7.3/s3e/h/s3eDevice.h"
    S3E_DEVICE_PHONE_NUMBER = 3,





    S3E_DEVICE_LANGUAGE = 4,






    S3E_DEVICE_STATE = 5,
# 185 "c:/marmalade/7.3/s3e/h/s3eDevice.h"
    S3E_DEVICE_FREE_RAM = 6,
# 194 "c:/marmalade/7.3/s3e/h/s3eDevice.h"
    S3E_DEVICE_TOTAL_RAM = 7,
# 208 "c:/marmalade/7.3/s3e/h/s3eDevice.h"
    S3E_DEVICE_ARCHITECTURE = 8,
# 225 "c:/marmalade/7.3/s3e/h/s3eDevice.h"
    S3E_DEVICE_S3E_VERSION = 9,
# 235 "c:/marmalade/7.3/s3e/h/s3eDevice.h"
    S3E_DEVICE_BATTERY_LEVEL = 10,






    S3E_DEVICE_LEFT_SOFTKEY_IS_BACK = 11,
# 253 "c:/marmalade/7.3/s3e/h/s3eDevice.h"
    S3E_DEVICE_MAINS_POWER = 12,
# 262 "c:/marmalade/7.3/s3e/h/s3eDevice.h"
    S3E_DEVICE_OS_VERSION = 13,
# 275 "c:/marmalade/7.3/s3e/h/s3eDevice.h"
    S3E_DEVICE_CHIPSET = 14,
# 284 "c:/marmalade/7.3/s3e/h/s3eDevice.h"
    S3E_DEVICE_EXIT_CODE = 15,
# 297 "c:/marmalade/7.3/s3e/h/s3eDevice.h"
    S3E_DEVICE_FPU = 16,





    S3E_DEVICE_BACK_SOFTKEY_POSITION = 17,





    S3E_DEVICE_ADVANCE_SOFTKEY_POSITION = 18,
# 320 "c:/marmalade/7.3/s3e/h/s3eDevice.h"
    S3E_DEVICE_SDK_VERSION = 19,
# 329 "c:/marmalade/7.3/s3e/h/s3eDevice.h"
    S3E_DEVICE_LOCALE = 20,





    S3E_DEVICE_NAME = 21,







    S3E_DEVICE_SUPPORTS_SIGNAL_HANDLING = 22,







    S3E_DEVICE_EXIT_SIGNAL = 23,
# 366 "c:/marmalade/7.3/s3e/h/s3eDevice.h"
    S3E_DEVICE_PROXIMITY = 24,
# 398 "c:/marmalade/7.3/s3e/h/s3eDevice.h"
    S3E_DEVICE_UNIQUE_ID = 25,
# 416 "c:/marmalade/7.3/s3e/h/s3eDevice.h"
    S3E_DEVICE_IMSI = 26,
# 427 "c:/marmalade/7.3/s3e/h/s3eDevice.h"
    S3E_DEVICE_SILENT_MODE = 27,




    S3E_DEVICE_NUM_CPU_CORES = 28,
# 442 "c:/marmalade/7.3/s3e/h/s3eDevice.h"
    S3E_DEVICE_MEM_TOTAL = 29,
# 462 "c:/marmalade/7.3/s3e/h/s3eDevice.h"
    S3E_DEVICE_MEM_FREE = 30,





    S3E_DEVICE_TIMEZONE = 31,
# 481 "c:/marmalade/7.3/s3e/h/s3eDevice.h"
    S3E_DEVICE_3D_MODE = 32,
# 491 "c:/marmalade/7.3/s3e/h/s3eDevice.h"
    S3E_DEVICE_PROCESS_ID = 33,





    S3E_DEVICE_SUPPORTS_SUSPEND_RESUME = 34,





    S3E_DEVICE_DX_FEATURE_LEVEL = 35
} s3eDeviceProperty;
# 513 "c:/marmalade/7.3/s3e/h/s3eDevice.h"
typedef enum s3eDeviceLicPlatID
{
    S3E_LICPLAT_ID_NONE = 0x0000,


    S3E_LICPLAT_ID_WINDOWS = 0x0001,

    S3E_LICPLAT_LINUX = 0x0002,

    S3E_LICPLAT_OSX = 0x0004,


    S3E_LICPLAT_IPHONE = 0x0008,

    S3E_LICPLAT_ANDROID = 0x0010,

    S3E_LICPLAT_QNX = 0x0020,

    S3E_LICPLAT_ROKU = 0x0040,

    S3E_LICPLAT_WP8 = 0x0080,

    S3E_LICPLAT_TIZEN = 0x0100,

    S3E_LICPLAT_WS8 = 0x0200,

    S3E_LICPLAT_WS81 = 0x0400,

    S3E_LICPLAT_UNSET = 0x10000000,
    S3E_LICPLAT_ALL = 0x7FFFFFFF
} s3eDeviceLicPlatID;







typedef enum s3eDeviceOSID
{
    S3E_OS_ID_NONE = 0,

    S3E_OS_ID_WINDOWS = 3,

    S3E_OS_ID_LINUX = 5,

    S3E_OS_ID_ARM_SEMIH = 8,

    S3E_OS_ID_OSX = 13,

    S3E_OS_ID_IPHONE = 14,

    S3E_OS_ID_ANDROID = 19,

    S3E_OS_ID_QNX = 24,

    S3E_OS_ID_ROKU = 25,

    S3E_OS_ID_WP8 = 26,

    S3E_OS_ID_TIZEN = 27,

    S3E_OS_ID_WS8 = 28,

    S3E_OS_ID_WS81 = 29,

    S3E_OS_ID_LAST = 31,







    S3E_OS_ID_SYMBIAN = 1,

    S3E_OS_ID_BREW = 2,

    S3E_OS_ID_WINMOBILE = 4,

    S3E_OS_ID_WIPI = 6,

    S3E_OS_ID_NDS = 7,

    S3E_OS_ID_NUCLEUS = 9,

    S3E_OS_ID_NGI = 10,

    S3E_OS_ID_WINCE = 11,

    S3E_OS_ID_SHARPEMP = 12,

    S3E_OS_ID_UIQ = 15,

    S3E_OS_ID_PS3 = 16,

    S3E_OS_ID_X360 = 17,

    S3E_OS_ID_WEBOS = 20,

    S3E_OS_ID_PSP = 21,

    S3E_OS_ID_WII = 22,

    S3E_OS_ID_MEEGO = 23,

} s3eDeviceOSID;







typedef enum s3eDeviceClassID
{
    S3E_DEVICE_CLASS_UNKNOWN = 0,

    S3E_DEVICE_CLASS_WINDOWS_GENERIC = 3000,
    S3E_DEVICE_CLASS_WINDOWS_PHONE = 3010,
    S3E_DEVICE_CLASS_WINDOWS_STORE = 3020,
    S3E_DEVICE_CLASS_LINUX_GENERIC = 5000,
    S3E_DEVICE_CLASS_LINUX_DESKTOP = 5001,
    S3E_DEVICE_CLASS_LINUX_EMBED = 5002,
    S3E_DEVICE_CLASS_ARM_SEMIH_GENERIC = 8000,
    S3E_DEVICE_CLASS_OSX_DESKTOP = 11000,
    S3E_DEVICE_CLASS_IPHONE = 12000,
    S3E_DEVICE_CLASS_ANDROID_GENERIC = 16000,
    S3E_DEVICE_CLASS_QNX = 19000,
    S3E_DEVICE_CLASS_TIZEN_GENERIC = 20000,

    S3E_DEVICE_CLASS_SYMBIAN_GENERIC = 1000,
    S3E_DEVICE_CLASS_SYMBIAN_SERIES60 = 1001,
    S3E_DEVICE_CLASS_SYMBIAN_SERIES60_EMULATOR = 1002,
    S3E_DEVICE_CLASS_SYMBIAN_UIQ = 1003,
    S3E_DEVICE_CLASS_SYMBIAN_UIQ_EMULATOR = 1004,
    S3E_DEVICE_CLASS_BREW_GENERIC = 2000,
    S3E_DEVICE_CLASS_BREW_QCIF_3G = 2001,
    S3E_DEVICE_CLASS_BREW_QCIF_25G = 2002,
    S3E_DEVICE_CLASS_BREW_SQCIF_25G = 2003,
    S3E_DEVICE_CLASS_BREW_QVGA_3G = 2004,
    S3E_DEVICE_CLASS_WINCE_GENERIC = 4000,
    S3E_DEVICE_CLASS_WINMOBILE_SP = 4001,
    S3E_DEVICE_CLASS_WINMOBILE_PPC = 4002,
    S3E_DEVICE_CLASS_WIPI_GENERIC = 6000,
    S3E_DEVICE_CLASS_NDS_GENERIC = 7000,
    S3E_DEVICE_CLASS_NDS_NDSI = 7001,
    S3E_DEVICE_CLASS_NUCLEUS_GENERIC = 9000,
    S3E_DEVICE_CLASS_NGI_GENERIC = 10000,
    S3E_DEVICE_CLASS_PS3 = 13000,
    S3E_DEVICE_CLASS_X360 = 14000,
    S3E_DEVICE_CLASS_BADA_GENERIC = 15000,
    S3E_DEVICE_CLASS_PSP = 17000,
    S3E_DEVICE_CLASS_WII = 18000

} s3eDeviceClassID;




typedef enum s3eDeviceLanguage
{
    S3E_DEVICE_LANGUAGE_UNKNOWN = 0,
    S3E_DEVICE_LANGUAGE_ENGLISH = 1,
    S3E_DEVICE_LANGUAGE_FRENCH = 2,
    S3E_DEVICE_LANGUAGE_GERMAN = 3,
    S3E_DEVICE_LANGUAGE_SPANISH = 4,
    S3E_DEVICE_LANGUAGE_ITALIAN = 5,
    S3E_DEVICE_LANGUAGE_PORTUGUESE = 6,
    S3E_DEVICE_LANGUAGE_DUTCH = 7,
    S3E_DEVICE_LANGUAGE_TURKISH = 8,
    S3E_DEVICE_LANGUAGE_CROATIAN = 9,
    S3E_DEVICE_LANGUAGE_CZECH = 10,
    S3E_DEVICE_LANGUAGE_DANISH = 11,
    S3E_DEVICE_LANGUAGE_FINNISH = 12,
    S3E_DEVICE_LANGUAGE_HUNGARIAN = 13,
    S3E_DEVICE_LANGUAGE_NORWEGIAN = 14,
    S3E_DEVICE_LANGUAGE_POLISH = 15,
    S3E_DEVICE_LANGUAGE_RUSSIAN = 16,
    S3E_DEVICE_LANGUAGE_SERBIAN = 17,
    S3E_DEVICE_LANGUAGE_SLOVAK = 18,
    S3E_DEVICE_LANGUAGE_SLOVENIAN = 19,
    S3E_DEVICE_LANGUAGE_SWEDISH = 20,
    S3E_DEVICE_LANGUAGE_UKRAINIAN = 21,
    S3E_DEVICE_LANGUAGE_GREEK = 22,
    S3E_DEVICE_LANGUAGE_JAPANESE = 23,
    S3E_DEVICE_LANGUAGE_SIMPL_CHINESE = 24,
    S3E_DEVICE_LANGUAGE_TRAD_CHINESE = 25,
    S3E_DEVICE_LANGUAGE_KOREAN = 26,
    S3E_DEVICE_LANGUAGE_ICELANDIC = 27,
    S3E_DEVICE_LANGUAGE_FLEMISH = 28,
    S3E_DEVICE_LANGUAGE_THAI = 29,
    S3E_DEVICE_LANGUAGE_AFRIKAANS = 30,
    S3E_DEVICE_LANGUAGE_ALBANIAN = 31,
    S3E_DEVICE_LANGUAGE_AMHARIC = 32,
    S3E_DEVICE_LANGUAGE_ARABIC = 33,
    S3E_DEVICE_LANGUAGE_ARMENIAN = 34,
    S3E_DEVICE_LANGUAGE_AZERBAIJANI = 35,
    S3E_DEVICE_LANGUAGE_TAGALOG = 36,
    S3E_DEVICE_LANGUAGE_BELARUSSIAN = 37,
    S3E_DEVICE_LANGUAGE_BENGALI = 38,
    S3E_DEVICE_LANGUAGE_BULGARIAN = 39,
    S3E_DEVICE_LANGUAGE_BURMESE = 40,
    S3E_DEVICE_LANGUAGE_CATALAN = 41,
    S3E_DEVICE_LANGUAGE_ESTONIAN = 42,
    S3E_DEVICE_LANGUAGE_FARSI = 43,
    S3E_DEVICE_LANGUAGE_GAELIC = 44,
    S3E_DEVICE_LANGUAGE_GEORGIAN = 45,
    S3E_DEVICE_LANGUAGE_GUJARATI = 46,
    S3E_DEVICE_LANGUAGE_HEBREW = 47,
    S3E_DEVICE_LANGUAGE_HINDI = 48,
    S3E_DEVICE_LANGUAGE_INDONESIAN = 49,
    S3E_DEVICE_LANGUAGE_IRISH = 50,
    S3E_DEVICE_LANGUAGE_KANNADA = 51,
    S3E_DEVICE_LANGUAGE_KAZAKH = 52,
    S3E_DEVICE_LANGUAGE_KHMER = 53,
    S3E_DEVICE_LANGUAGE_LAO = 54,
    S3E_DEVICE_LANGUAGE_LATVIAN = 55,
    S3E_DEVICE_LANGUAGE_LITHUANIAN = 56,
    S3E_DEVICE_LANGUAGE_MACEDONIAN = 57,
    S3E_DEVICE_LANGUAGE_MALAY = 58,
    S3E_DEVICE_LANGUAGE_MALAYALAM = 59,
    S3E_DEVICE_LANGUAGE_MARATHI = 60,
    S3E_DEVICE_LANGUAGE_MOLDOVIAN = 61,
    S3E_DEVICE_LANGUAGE_MONGOLIAN = 62,
    S3E_DEVICE_LANGUAGE_PUNJABI = 63,
    S3E_DEVICE_LANGUAGE_ROMANIAN = 64,
    S3E_DEVICE_LANGUAGE_SINHALESE = 65,
    S3E_DEVICE_LANGUAGE_SOMALI = 66,
    S3E_DEVICE_LANGUAGE_SWAHILI = 67,
    S3E_DEVICE_LANGUAGE_TAJIK = 68,
    S3E_DEVICE_LANGUAGE_TAMIL = 69,
    S3E_DEVICE_LANGUAGE_TELUGU = 70,
    S3E_DEVICE_LANGUAGE_TIBETAN = 71,
    S3E_DEVICE_LANGUAGE_TIGRINYA = 72,
    S3E_DEVICE_LANGUAGE_TURKMEN = 73,
    S3E_DEVICE_LANGUAGE_URDU = 74,
    S3E_DEVICE_LANGUAGE_UZBEK = 75,
    S3E_DEVICE_LANGUAGE_VIETNAMESE = 76,
    S3E_DEVICE_LANGUAGE_WELSH = 77,
    S3E_DEVICE_LANGUAGE_ZULU = 78
} s3eDeviceLanguage;
# 767 "c:/marmalade/7.3/s3e/h/s3eDevice.h"
typedef enum s3eDeviceArchitecture
{
    S3E_DEVICE_ARCHITECTURE_ARM4T = 0,
    S3E_DEVICE_ARCHITECTURE_ARM4 = 1,
    S3E_DEVICE_ARCHITECTURE_ARM5T = 2,
    S3E_DEVICE_ARCHITECTURE_ARM5TE = 3,
    S3E_DEVICE_ARCHITECTURE_ARM5TEJ = 4,
    S3E_DEVICE_ARCHITECTURE_ARM6 = 5,
    S3E_DEVICE_ARCHITECTURE_ARM6K = 6,
    S3E_DEVICE_ARCHITECTURE_ARM6T2 = 7,
    S3E_DEVICE_ARCHITECTURE_ARM6Z = 8,
    S3E_DEVICE_ARCHITECTURE_ARM7A = 12,
    S3E_DEVICE_ARCHITECTURE_X86 = 9,
    S3E_DEVICE_ARCHITECTURE_PPC = 10,
    S3E_DEVICE_ARCHITECTURE_AMD64 = 11,
    S3E_DEVICE_ARCHITECTURE_MIPS = 13,
    S3E_DEVICE_ARCHITECTURE_MAX = 14
} s3eDeviceArchitecture;
# 793 "c:/marmalade/7.3/s3e/h/s3eDevice.h"
typedef enum s3eDeviceSoftKeyPosition
{
    S3E_DEVICE_SOFTKEY_BOTTOM_LEFT = 0,
    S3E_DEVICE_SOFTKEY_BOTTOM_RIGHT = 1,
    S3E_DEVICE_SOFTKEY_TOP_RIGHT = 2,
    S3E_DEVICE_SOFTKEY_TOP_LEFT = 3
} s3eDeviceSoftKeyPosition;
# 834 "c:/marmalade/7.3/s3e/h/s3eDevice.h"
extern "C" const char* s3eDeviceGetString(s3eDeviceProperty property);
# 869 "c:/marmalade/7.3/s3e/h/s3eDevice.h"
extern "C" int32 s3eDeviceGetInt(s3eDeviceProperty property);
# 889 "c:/marmalade/7.3/s3e/h/s3eDevice.h"
extern "C" s3eResult s3eDeviceSetInt(s3eDeviceProperty property, int32 value);
# 917 "c:/marmalade/7.3/s3e/h/s3eDevice.h"
extern "C" int64 s3eDeviceYield(int32 ms =0);
# 939 "c:/marmalade/7.3/s3e/h/s3eDevice.h"
extern "C" void s3eDeviceUnYield();
# 967 "c:/marmalade/7.3/s3e/h/s3eDevice.h"
extern "C" void s3eDeviceYieldUntilEvent(int32 ms =0x7fffffffL);
# 1002 "c:/marmalade/7.3/s3e/h/s3eDevice.h"
extern "C" s3eResult s3eDeviceExecPushNext(const char* filename, const char* config_prepend =__null, const char* config_append =__null);
# 1018 "c:/marmalade/7.3/s3e/h/s3eDevice.h"
extern "C" void s3eDeviceExit(int code =0) __attribute__ ((noreturn));






typedef enum s3eDeviceState
{




    S3E_DEVICE_STATE_PAUSED = 3,





    S3E_DEVICE_STATE_EXITING = 4,




    S3E_DEVICE_STATE_RUNNING = 5
} s3eDeviceState;
# 1055 "c:/marmalade/7.3/s3e/h/s3eDevice.h"
typedef enum s3eDeviceCallback
{
# 1068 "c:/marmalade/7.3/s3e/h/s3eDevice.h"
    S3E_DEVICE_PAUSE = 0,
# 1080 "c:/marmalade/7.3/s3e/h/s3eDevice.h"
    S3E_DEVICE_UNPAUSE = 1,
# 1092 "c:/marmalade/7.3/s3e/h/s3eDevice.h"
    S3E_DEVICE_EXIT = 2,
# 1108 "c:/marmalade/7.3/s3e/h/s3eDevice.h"
    S3E_DEVICE_VOL_UP = 17,
# 1124 "c:/marmalade/7.3/s3e/h/s3eDevice.h"
    S3E_DEVICE_VOL_DOWN = 18,
# 1142 "c:/marmalade/7.3/s3e/h/s3eDevice.h"
    S3E_DEVICE_MAINS_POWER_CHANGED = 20,
# 1154 "c:/marmalade/7.3/s3e/h/s3eDevice.h"
    S3E_DEVICE_BACKGROUND = 22,
# 1166 "c:/marmalade/7.3/s3e/h/s3eDevice.h"
    S3E_DEVICE_FOREGROUND = 23,
# 1183 "c:/marmalade/7.3/s3e/h/s3eDevice.h"
    S3E_DEVICE_NETWORK_ONLINE = 24,
# 1200 "c:/marmalade/7.3/s3e/h/s3eDevice.h"
    S3E_DEVICE_NETWORK_OFFLINE = 25,
# 1216 "c:/marmalade/7.3/s3e/h/s3eDevice.h"
    S3E_DEVICE_SIMULATOR_RESTART = 26,
# 1233 "c:/marmalade/7.3/s3e/h/s3eDevice.h"
    S3E_DEVICE_APPLICATION_ACTIVE = 27,
# 1250 "c:/marmalade/7.3/s3e/h/s3eDevice.h"
    S3E_DEVICE_APPLICATION_INACTIVE = 28,
# 1267 "c:/marmalade/7.3/s3e/h/s3eDevice.h"
    S3E_DEVICE_APPLICATION_FULLSCREEN = 29,
# 1284 "c:/marmalade/7.3/s3e/h/s3eDevice.h"
    S3E_DEVICE_APPLICATION_THUMBNAIL = 30,
# 1301 "c:/marmalade/7.3/s3e/h/s3eDevice.h"
    S3E_DEVICE_APPLICATION_INVISIBLE = 31,

    S3E_DEVICE_CALLBACK_MAX
} s3eDeviceCallback;
# 1322 "c:/marmalade/7.3/s3e/h/s3eDevice.h"
typedef struct s3eDeviceVolChangeInfo
{





    s3eBool m_VolUp;
# 1347 "c:/marmalade/7.3/s3e/h/s3eDevice.h"
    s3eBool m_OverrideDefaultBehaviour;
} s3eDeviceVolChangeInfo;





typedef struct s3eDeviceStateChangeInfo
{



    int32 m_State;
} s3eDeviceStateChangeInfo;
# 1382 "c:/marmalade/7.3/s3e/h/s3eDevice.h"
extern "C" s3eResult s3eDeviceRegister(s3eDeviceCallback cbid, s3eCallback fn, void* userdata);
# 1402 "c:/marmalade/7.3/s3e/h/s3eDevice.h"
extern "C" s3eResult s3eDeviceUnRegister(s3eDeviceCallback cbid, s3eCallback fn);







extern "C" void s3eDeviceRequestQuit();
# 1421 "c:/marmalade/7.3/s3e/h/s3eDevice.h"
extern "C" s3eBool s3eDeviceCheckQuitRequest();
# 1431 "c:/marmalade/7.3/s3e/h/s3eDevice.h"
extern "C" s3eBool s3eDeviceCheckPauseRequest();
# 1445 "c:/marmalade/7.3/s3e/h/s3eDevice.h"
extern "C" void s3eDeviceBacklightOn();


extern "C" s3eBool s3eDeviceNetworkCheckStart();


extern "C" s3eBool s3eDeviceNetworkCheckStop();


extern "C" void s3eDeviceLoaderCallStart(s3eBool lock, void* function);


extern "C" void s3eDeviceLoaderCallDone(s3eBool lock, void* function);
# 26 "c:/marmalade/7.3/s3e/h/s3e.h" 2
# 1 "c:/marmalade/7.3/s3e/h/s3eExt.h" 1
# 40 "c:/marmalade/7.3/s3e/h/s3eExt.h"
typedef enum s3eExtError
{
    S3E_EXT_ERR_NONE = 0,
    S3E_EXT_ERR_PARAM = 1,
    S3E_EXT_ERR_NOT_FOUND = 4
} s3eExtError;
# 58 "c:/marmalade/7.3/s3e/h/s3eExt.h"
extern "C" s3eExtError s3eExtGetError();
# 72 "c:/marmalade/7.3/s3e/h/s3eExt.h"
extern "C" const char* s3eExtGetErrorString();
# 105 "c:/marmalade/7.3/s3e/h/s3eExt.h"
extern "C" s3eResult s3eExtGet(const char* extension, void* functions, uint32 functionsLen);
# 115 "c:/marmalade/7.3/s3e/h/s3eExt.h"
extern "C" s3eResult s3eExtGetHash(uint32 hash, void* functions, uint32 functionsLen);

static inline s3eBool s3eExtAvailable(const char* extension, int32 len =0)
{
    if (s3eExtGet(extension, __null, len) == S3E_RESULT_SUCCESS)
        return (1);
    else
        return (0);
}
# 27 "c:/marmalade/7.3/s3e/h/s3e.h" 2

# 1 "c:/marmalade/7.3/s3e/h/s3eKeyboard.h" 1
# 62 "c:/marmalade/7.3/s3e/h/s3eKeyboard.h"
typedef enum s3eKey
{
    s3eKeyFirst = 0,

    s3eKeyEsc = 1,
    s3eKeyTab = 2,
    s3eKeyBackspace = 3,
    s3eKeyEnter = 4,
    s3eKeyLeftShift = 5,
    s3eKeyLeftControl = 6,
    s3eKeyReserved = 7,
    s3eKeySpace = 8,
    s3eKeyLeft = 9,
    s3eKeyUp = 10,
    s3eKeyRight = 11,
    s3eKeyDown = 12,
    s3eKey0 = 13,
    s3eKey1 = 14,
    s3eKey2 = 15,
    s3eKey3 = 16,
    s3eKey4 = 17,
    s3eKey5 = 18,
    s3eKey6 = 19,
    s3eKey7 = 20,
    s3eKey8 = 21,
    s3eKey9 = 22,
    s3eKeyA = 23,
    s3eKeyB = 24,
    s3eKeyC = 25,
    s3eKeyD = 26,
    s3eKeyE = 27,
    s3eKeyF = 28,
    s3eKeyG = 29,
    s3eKeyH = 30,
    s3eKeyI = 31,
    s3eKeyJ = 32,
    s3eKeyK = 33,
    s3eKeyL = 34,
    s3eKeyM = 35,
    s3eKeyN = 36,
    s3eKeyO = 37,
    s3eKeyP = 38,
    s3eKeyQ = 39,
    s3eKeyR = 40,
    s3eKeyS = 41,
    s3eKeyT = 42,
    s3eKeyU = 43,
    s3eKeyV = 44,
    s3eKeyW = 45,
    s3eKeyX = 46,
    s3eKeyY = 47,
    s3eKeyZ = 48,
    s3eKeyF1 = 49,
    s3eKeyF2 = 50,
    s3eKeyF3 = 51,
    s3eKeyF4 = 52,
    s3eKeyF5 = 53,
    s3eKeyF6 = 54,
    s3eKeyF7 = 55,
    s3eKeyF8 = 56,
    s3eKeyF9 = 57,
    s3eKeyF10 = 58,
    s3eKeyNumPad0 = 59,
    s3eKeyNumPad1 = 60,
    s3eKeyNumPad2 = 61,
    s3eKeyNumPad3 = 62,
    s3eKeyNumPad4 = 63,
    s3eKeyNumPad5 = 64,
    s3eKeyNumPad6 = 65,
    s3eKeyNumPad7 = 66,
    s3eKeyNumPad8 = 67,
    s3eKeyNumPad9 = 68,
    s3eKeyNumPadPlus = 69,
    s3eKeyNumPadMinus = 70,
    s3eKeyNumPadEnter = 71,
    s3eKeyRSK = 72,
    s3eKeyLSK = 73,
    s3eKeyLS = 74,
    s3eKeyRS = 75,
    s3eKeyHash = 76,
    s3eKeyStar = 77,


    s3eKeyOk = 78,
    s3eKeyCLR = 79,


    s3eKeyVolUp = 80,
    s3eKeyVolDown = 81,
# 160 "c:/marmalade/7.3/s3e/h/s3eKeyboard.h"
    s3eKeyCamera = 82,

    s3eKeyMic = 83,
    s3eKeyFn = 84,
    s3eKeySym = 85,


    s3eKeyAccept = 86,
    s3eKeyEnd = 87,
    s3eKeyHomePage = 88,

    s3eKeyButton1 = 89,
    s3eKeyButton2 = 90,
    s3eKeyButton3 = 91,
    s3eKeyButton4 = 92,
    s3eKeyButton5 = 93,
    s3eKeyButton6 = 94,
    s3eKeyButton7 = 95,
    s3eKeyButton8 = 96,

    s3eKeyF11 = 97,
    s3eKeyF12 = 98,
    s3eKeyLeftAlt = 99,

    s3eKeyRightControl = 100,
    s3eKeyRightAlt = 101,
    s3eKeyRightShift = 102,
    s3eKeyBacktick = 103,
    s3eKeyComma = 104,
    s3eKeyPeriod = 105,
    s3eKeySlash = 106,
    s3eKeyBackSlash = 107,
    s3eKeySemicolon = 108,
    s3eKeyApostrophe = 109,
    s3eKeyLeftBracket = 110,
    s3eKeyRightBracket = 111,
    s3eKeyEquals = 112,
    s3eKeyMinus = 113,
    s3eKeyCapsLock = 114,

    s3eKeyNumPadPeriod = 115,
    s3eKeyNumPadSlash = 116,
    s3eKeyNumLock = 117,
    s3eKeyInsert = 118,
    s3eKeyHome = 119,
    s3eKeyPageUp = 120,
    s3eKeyPageDown = 121,
    s3eKeyKbEnd = 122,
    s3eKeyDelete = 123,
    s3eKeyPause = 124,
    s3eKeyAt = 125,
    s3eKeyBack = 126,
    s3eKeyMenu = 127,
    s3eKeySearch = 128,
    s3eKey3DMode = 129,
    s3eKeyMyApps = 130,
    s3eKeyPrintScreen = 131,
    s3eKeyScrollLock = 132,

    s3eKeyAbsGameA = 200,
    s3eKeyAbsGameB = 201,
    s3eKeyAbsGameC = 202,
    s3eKeyAbsGameD = 203,
    s3eKeyAbsUp = 204,
    s3eKeyAbsDown = 205,
    s3eKeyAbsLeft = 206,
    s3eKeyAbsRight = 207,
    s3eKeyAbsOk = 208,
    s3eKeyAbsASK = 209,
    s3eKeyAbsBSK = 210,

    s3eKeyLeftWindows = 211,
    s3eKeyRightWindows = 212,
    s3eKeyLeftBackSlash = 213,

    s3eKeyCount = 214
} s3eKey;
# 274 "c:/marmalade/7.3/s3e/h/s3eKeyboard.h"
typedef enum s3eKeyboardNumpadOrientation
{
    S3E_NUMPAD_ORIENT_NORMAL = 0,
    S3E_NUMPAD_ORIENT_ROT90 = 1,
    S3E_NUMPAD_ORIENT_ROT180 = 2,
    S3E_NUMPAD_ORIENT_ROT270 = 3
} s3eKeyboardNumpadOrientation;






typedef enum s3eKeyboardProperty
{
# 305 "c:/marmalade/7.3/s3e/h/s3eKeyboard.h"
    S3E_KEYBOARD_HAS_NUMPAD = 0,
# 320 "c:/marmalade/7.3/s3e/h/s3eKeyboard.h"
    S3E_KEYBOARD_HAS_ALPHA = 1,
# 335 "c:/marmalade/7.3/s3e/h/s3eKeyboard.h"
    S3E_KEYBOARD_HAS_DIRECTION = 2,






    S3E_KEYBOARD_NUMPAD_ORIENTATION = 3,
# 393 "c:/marmalade/7.3/s3e/h/s3eKeyboard.h"
    S3E_KEYBOARD_GET_CHAR = 4
} s3eKeyboardProperty;







typedef enum s3eKeyboardError
{
    S3E_KEYBOARD_ERR_NONE = 0,
    S3E_KEYBOARD_ERR_PARAM = 1,
    S3E_KEYBOARD_ERR_TOO_MANY = 2,
    S3E_KEYBOARD_ERR_ALREADY_REG = 3,
    S3E_KEYBOARD_ERR_NOT_FOUND = 4,
    S3E_KEYBOARD_ERR_UNAVAIL = 5,

    S3E_KEYBOARD_ERR_DEVICE = 6
} s3eKeyboardError;






typedef enum s3eKeyboardCallback
{
# 436 "c:/marmalade/7.3/s3e/h/s3eKeyboard.h"
    S3E_KEYBOARD_KEY_EVENT = 0,
# 451 "c:/marmalade/7.3/s3e/h/s3eKeyboard.h"
    S3E_KEYBOARD_CHAR_EVENT = 1,

    S3E_KEYBOARD_CALLBACK_MAX
} s3eKeyboardCallback;






typedef struct s3eKeyboardEvent
{

    s3eKey m_Key;

    uint32 m_Pressed;
} s3eKeyboardEvent;






typedef struct s3eKeyboardCharEvent
{

    s3eWChar m_Char;
} s3eKeyboardCharEvent;
# 501 "c:/marmalade/7.3/s3e/h/s3eKeyboard.h"
extern "C" int32 s3eKeyboardGetInt(s3eKeyboardProperty property);
# 521 "c:/marmalade/7.3/s3e/h/s3eKeyboard.h"
extern "C" s3eResult s3eKeyboardSetInt(s3eKeyboardProperty property, int32 value);
# 549 "c:/marmalade/7.3/s3e/h/s3eKeyboard.h"
extern "C" s3eResult s3eKeyboardRegister(s3eKeyboardCallback cbid, s3eCallback fn, void* userdata);
# 568 "c:/marmalade/7.3/s3e/h/s3eKeyboard.h"
extern "C" s3eResult s3eKeyboardUnRegister(s3eKeyboardCallback cbid, s3eCallback fn);
# 580 "c:/marmalade/7.3/s3e/h/s3eKeyboard.h"
extern "C" s3eKeyboardError s3eKeyboardGetError();
# 594 "c:/marmalade/7.3/s3e/h/s3eKeyboard.h"
extern "C" const char* s3eKeyboardGetErrorString();







extern "C" void s3eKeyboardClearState();







extern "C" s3eResult s3eKeyboardUpdate();
# 626 "c:/marmalade/7.3/s3e/h/s3eKeyboard.h"
extern "C" int32 s3eKeyboardGetState(s3eKey key);






extern "C" s3eWChar s3eKeyboardGetChar();
# 644 "c:/marmalade/7.3/s3e/h/s3eKeyboard.h"
extern "C" s3eKey s3eKeyboardAnyKey();
# 666 "c:/marmalade/7.3/s3e/h/s3eKeyboard.h"
extern "C" s3eResult s3eKeyboardGetDisplayName(char* dst, s3eKey key, s3eBool terminateString =(1));





# 1 "c:/marmalade/7.3/s3e/h/legacy/s3eKeyboard_legacy.h" 1
# 673 "c:/marmalade/7.3/s3e/h/s3eKeyboard.h" 2
# 29 "c:/marmalade/7.3/s3e/h/s3e.h" 2
# 1 "c:/marmalade/7.3/s3e/h/s3eLicense.h" 1
# 52 "c:/marmalade/7.3/s3e/h/s3eLicense.h"
typedef enum s3eLicenseStatus
{
    S3E_LICENSE_EXPIRED = 0,
    S3E_LICENSE_DEMO = 0x10,
    S3E_LICENSE_USECOUNT = 0x20,
    S3E_LICENSE_EXPIRYDATE = 0x21,
    S3E_LICENSE_EXPIRYMINSUSE = 0x22,
    S3E_LICENSE_PURCHASE = 0x100,
    S3E_LICENSE_SUBSCRIPTION = 0x200,
    S3E_LICENSE_UPGRADE = 0x300,
    S3E_LICENSE_NONCOMMERCIAL = 0x1000
} s3eLicenseStatus;






typedef enum s3eLicenseError
{
    S3E_LICENSE_ERR_NONE = 0,
    S3E_LICENSE_ERR_PARAM = 1
} s3eLicenseError;






typedef enum s3eLicenseProperty
{
    S3E_LICENSE_USES_LEFT,
    S3E_LICENSE_EXPIRY_DATE,
    S3E_LICENSE_MINS_LEFT,
    S3E_LICENSE_STATUS
} s3eLicenseProperty;




extern "C" int32 s3eLicenseGetInt(s3eLicenseProperty property);
# 104 "c:/marmalade/7.3/s3e/h/s3eLicense.h"
extern "C" s3eLicenseError s3eLicenseGetError();
# 118 "c:/marmalade/7.3/s3e/h/s3eLicense.h"
extern "C" const char* s3eLicenseGetErrorString();
# 127 "c:/marmalade/7.3/s3e/h/s3eLicense.h"
extern "C" s3eResult s3eLicenseBuy();
# 30 "c:/marmalade/7.3/s3e/h/s3e.h" 2
# 1 "c:/marmalade/7.3/s3e/h/s3eMemory.h" 1
# 54 "c:/marmalade/7.3/s3e/h/s3eMemory.h"
typedef enum s3eMemoryProperty
{
# 71 "c:/marmalade/7.3/s3e/h/s3eMemory.h"
    S3E_MEMORY_HEAP = 0,





    S3E_MEMORY_SIZE = 1,





    S3E_MEMORY_FREE = 2,





    S3E_MEMORY_USED = 3,






    S3E_MEMORY_LFB = 4,






    S3E_MEMORY_FLAGS = 5
} s3eMemoryProperty;







typedef enum s3eMemoryFlags
{



    S3E_MEMORY_NO_MSG_ON_FAIL = (1 << 0),
# 128 "c:/marmalade/7.3/s3e/h/s3eMemory.h"
    S3E_MEMORY_USE_STACK_ALLOCATOR = (1 << 1),
# 137 "c:/marmalade/7.3/s3e/h/s3eMemory.h"
    S3E_MEMORY_INACTIVE = (1 << 2)
} s3eMemoryFlags;
# 160 "c:/marmalade/7.3/s3e/h/s3eMemory.h"
extern "C" int32 s3eMemoryGetInt(s3eMemoryProperty property);
# 179 "c:/marmalade/7.3/s3e/h/s3eMemory.h"
extern "C" s3eResult s3eMemorySetInt(s3eMemoryProperty property, int32 value);
# 188 "c:/marmalade/7.3/s3e/h/s3eMemory.h"
typedef enum s3eMemoryError
{
    S3E_MEMORY_ERR_NONE = 0,
    S3E_MEMORY_ERR_PARAM = 1,
    S3E_MEMORY_ERR_UNAVAIL = 5,

    S3E_MEMORY_ERR_INVALID_PTR = 1000,
    S3E_MEMORY_ERR_NO_MEM = 1001,
    S3E_MEMORY_ERR_INVALID_STATE = 1002
} s3eMemoryError;
# 210 "c:/marmalade/7.3/s3e/h/s3eMemory.h"
extern "C" s3eMemoryError s3eMemoryGetError();
# 224 "c:/marmalade/7.3/s3e/h/s3eMemory.h"
extern "C" const char* s3eMemoryGetErrorString();
# 245 "c:/marmalade/7.3/s3e/h/s3eMemory.h"
extern "C" void* s3eMalloc(int size);
# 269 "c:/marmalade/7.3/s3e/h/s3eMemory.h"
extern "C" void* s3eRealloc(void* item, int newSize);
# 283 "c:/marmalade/7.3/s3e/h/s3eMemory.h"
extern "C" void s3eFree(void* item);
# 302 "c:/marmalade/7.3/s3e/h/s3eMemory.h"
extern "C" void* s3eMallocBase(int size);
# 328 "c:/marmalade/7.3/s3e/h/s3eMemory.h"
extern "C" void* s3eReallocBase(void* item, int newSize);
# 340 "c:/marmalade/7.3/s3e/h/s3eMemory.h"
extern "C" void s3eFreeBase(void* item);
# 361 "c:/marmalade/7.3/s3e/h/s3eMemory.h"
extern "C" s3eResult s3eMemoryHeapDestroy(int32 heapID, s3eBool failIfNotEmpty);
# 376 "c:/marmalade/7.3/s3e/h/s3eMemory.h"
extern "C" s3eResult s3eMemoryHeapCreate(int32 heapID);
# 385 "c:/marmalade/7.3/s3e/h/s3eMemory.h"
extern "C" void* s3eMemoryHeapAddress(int32 heapID);



typedef void*(*s3eMallocFn)(int size);
typedef void*(*s3eReallocFn)(void* item, int size);
typedef void (*s3eFreeFn)(void* item);




typedef struct s3eMemoryUsrMgr
{
    s3eMallocFn m_Malloc;
    s3eReallocFn m_Realloc;
    s3eFreeFn m_Free;
} s3eMemoryUsrMgr;
# 423 "c:/marmalade/7.3/s3e/h/s3eMemory.h"
extern "C" s3eResult s3eMemorySetUserMemMgr(s3eMemoryUsrMgr* callbacks);
# 445 "c:/marmalade/7.3/s3e/h/s3eMemory.h"
extern "C" s3eResult s3eMemoryGetUserMemMgr(s3eMemoryUsrMgr* callbacks);
# 31 "c:/marmalade/7.3/s3e/h/s3e.h" 2
# 1 "c:/marmalade/7.3/s3e/h/s3ePointer.h" 1
# 54 "c:/marmalade/7.3/s3e/h/s3ePointer.h"
typedef enum s3ePointerType
{
    S3E_POINTER_TYPE_INVALID = 0,
    S3E_POINTER_TYPE_MOUSE = 1,
    S3E_POINTER_TYPE_STYLUS = 2
} s3ePointerType;







typedef enum s3eStylusType
{
    S3E_STYLUS_TYPE_INVALID = 0,
    S3E_STYLUS_TYPE_STYLUS = 1,
    S3E_STYLUS_TYPE_FINGER = 2
} s3eStylusType;
# 85 "c:/marmalade/7.3/s3e/h/s3ePointer.h"
typedef enum s3ePointerProperty
{



    S3E_POINTER_AVAILABLE = 0,






    S3E_POINTER_HIDE_CURSOR = 1,




    S3E_POINTER_TYPE = 2,




    S3E_POINTER_STYLUS_TYPE = 3,




    S3E_POINTER_MULTI_TOUCH_AVAILABLE = 4

} s3ePointerProperty;
# 128 "c:/marmalade/7.3/s3e/h/s3ePointer.h"
extern "C" int32 s3ePointerGetInt(s3ePointerProperty property);
# 145 "c:/marmalade/7.3/s3e/h/s3ePointer.h"
extern "C" s3eResult s3ePointerSetInt(s3ePointerProperty property, int32 value);
# 154 "c:/marmalade/7.3/s3e/h/s3ePointer.h"
typedef enum s3ePointerCallback
{
# 167 "c:/marmalade/7.3/s3e/h/s3ePointer.h"
    S3E_POINTER_BUTTON_EVENT,
# 180 "c:/marmalade/7.3/s3e/h/s3ePointer.h"
    S3E_POINTER_MOTION_EVENT,
# 191 "c:/marmalade/7.3/s3e/h/s3ePointer.h"
    S3E_POINTER_TOUCH_EVENT,
# 202 "c:/marmalade/7.3/s3e/h/s3ePointer.h"
    S3E_POINTER_TOUCH_MOTION_EVENT,
# 217 "c:/marmalade/7.3/s3e/h/s3ePointer.h"
    S3E_POINTER_WHEEL_CHANGED_EVENT,

    S3E_POINTER_CALLBACK_MAX
} s3ePointerCallback;
# 242 "c:/marmalade/7.3/s3e/h/s3ePointer.h"
extern "C" s3eResult s3ePointerRegister(s3ePointerCallback cbid, s3eCallback fn, void* userData);
# 259 "c:/marmalade/7.3/s3e/h/s3ePointer.h"
extern "C" s3eResult s3ePointerUnRegister(s3ePointerCallback cbid, s3eCallback fn);
# 268 "c:/marmalade/7.3/s3e/h/s3ePointer.h"
typedef enum s3ePointerError
{
    S3E_POINTER_ERR_NONE = 0,
    S3E_POINTER_ERR_PARAM = 1,
    S3E_POINTER_ERR_TOO_MANY = 2,
    S3E_POINTER_ERR_ALREADY_REG = 3,
    S3E_POINTER_ERR_NOT_FOUND = 4,
    S3E_POINTER_ERR_UNAVAIL = 5
} s3ePointerError;







extern "C" s3ePointerError s3ePointerGetError();







extern "C" const char* s3ePointerGetErrorString();






typedef enum s3ePointerState
{
    S3E_POINTER_STATE_UP = 0,
    S3E_POINTER_STATE_DOWN = 1,
    S3E_POINTER_STATE_PRESSED = 2,
    S3E_POINTER_STATE_RELEASED = 4,
    S3E_POINTER_STATE_UNKNOWN
} s3ePointerState;






typedef enum s3ePointerButton
{

    S3E_POINTER_BUTTON_SELECT = 0,


    S3E_POINTER_BUTTON_LEFTMOUSE = 0,


    S3E_POINTER_BUTTON_RIGHTMOUSE = 1,


    S3E_POINTER_BUTTON_MIDDLEMOUSE = 2,


    S3E_POINTER_BUTTON_MOUSEWHEELUP = 3,


    S3E_POINTER_BUTTON_MOUSEWHEELDOWN = 4,


    S3E_POINTER_BUTTON_MAX
} s3ePointerButton;




typedef struct s3ePointerEvent
{

    s3ePointerButton m_Button;

    uint32 m_Pressed;

    int32 m_x;

    int32 m_y;
} s3ePointerEvent;




typedef struct s3ePointerMotionEvent
{

    int32 m_x;

    int32 m_y;
} s3ePointerMotionEvent;




typedef struct s3ePointerTouchEvent
{





    uint32 m_TouchID;

    uint32 m_Pressed;

    int32 m_x;

    int32 m_y;
} s3ePointerTouchEvent;




typedef struct s3ePointerTouchMotionEvent
{





    uint32 m_TouchID;

    int32 m_x;

    int32 m_y;
} s3ePointerTouchMotionEvent;
# 406 "c:/marmalade/7.3/s3e/h/s3ePointer.h"
typedef struct s3ePointerWheelChangedEvent
{

    int32 m_WheelDelta;
} s3ePointerWheelChangedEvent;






extern "C" s3ePointerState s3ePointerGetState(s3ePointerButton button);






extern "C" int32 s3ePointerGetX();






extern "C" int32 s3ePointerGetY();
# 442 "c:/marmalade/7.3/s3e/h/s3ePointer.h"
extern "C" s3ePointerState s3ePointerGetTouchState(uint32 touchID);
# 454 "c:/marmalade/7.3/s3e/h/s3ePointer.h"
extern "C" int32 s3ePointerGetTouchX(uint32 touchID);
# 466 "c:/marmalade/7.3/s3e/h/s3ePointer.h"
extern "C" int32 s3ePointerGetTouchY(uint32 touchID);







extern "C" s3eResult s3ePointerUpdate();
# 32 "c:/marmalade/7.3/s3e/h/s3e.h" 2
# 1 "c:/marmalade/7.3/s3e/h/s3eSecureStorage.h" 1
# 55 "c:/marmalade/7.3/s3e/h/s3eSecureStorage.h"
typedef enum s3eSecureStorageError
{
    S3E_SECURESTORAGE_ERR_NONE = 0,
    S3E_SECURESTORAGE_ERR_PARAM = 1,
    S3E_SECURESTORAGE_ERR_NOT_FOUND = 4,
    S3E_SECURESTORAGE_ERR_DEVICE = 6,
    S3E_SECURESTORAGE_ERR_INSUFF = 1000,
    S3E_SECURESTORAGE_ERR_CORRUPT = 1001
} s3eSecureStorageError;
# 76 "c:/marmalade/7.3/s3e/h/s3eSecureStorage.h"
extern "C" s3eSecureStorageError s3eSecureStorageGetError();
# 89 "c:/marmalade/7.3/s3e/h/s3eSecureStorage.h"
extern "C" const char* s3eSecureStorageGetErrorString();
# 113 "c:/marmalade/7.3/s3e/h/s3eSecureStorage.h"
extern "C" s3eResult s3eSecureStoragePut(void* data, uint16 size);
# 136 "c:/marmalade/7.3/s3e/h/s3eSecureStorage.h"
extern "C" s3eResult s3eSecureStorageGet(void* data, uint16 size);
# 33 "c:/marmalade/7.3/s3e/h/s3e.h" 2
# 1 "c:/marmalade/7.3/s3e/h/s3eSound.h" 1
# 63 "c:/marmalade/7.3/s3e/h/s3eSound.h"
typedef enum s3eSoundProperty
{





    S3E_SOUND_VOLUME = 0,
# 83 "c:/marmalade/7.3/s3e/h/s3eSound.h"
    S3E_SOUND_OUTPUT_FREQ = 1,







    S3E_SOUND_DEFAULT_FREQ = 2,




    S3E_SOUND_NUM_CHANNELS = 3,





    S3E_SOUND_USED_CHANNELS = 4,




    S3E_SOUND_AVAILABLE = 5,
# 120 "c:/marmalade/7.3/s3e/h/s3eSound.h"
    S3E_SOUND_VOLUME_DEFAULT = 6,
# 129 "c:/marmalade/7.3/s3e/h/s3eSound.h"
    S3E_SOUND_STEREO_ENABLED = 7
} s3eSoundProperty;
# 157 "c:/marmalade/7.3/s3e/h/s3eSound.h"
extern "C" int32 s3eSoundGetInt(s3eSoundProperty property);
# 179 "c:/marmalade/7.3/s3e/h/s3eSound.h"
extern "C" s3eResult s3eSoundSetInt(s3eSoundProperty property, int32 value);
# 188 "c:/marmalade/7.3/s3e/h/s3eSound.h"
typedef enum s3eSoundError
{
    S3E_SOUND_ERR_NONE = 0,
    S3E_SOUND_ERR_PARAM = 1,
    S3E_SOUND_ERR_TOO_MANY = 2,
    S3E_SOUND_ERR_ALREADY_REG = 3,
    S3E_SOUND_ERR_NOT_FOUND = 4,
    S3E_SOUND_ERR_UNAVAIL = 5
} s3eSoundError;
# 209 "c:/marmalade/7.3/s3e/h/s3eSound.h"
extern "C" s3eSoundError s3eSoundGetError();
# 222 "c:/marmalade/7.3/s3e/h/s3eSound.h"
extern "C" const char* s3eSoundGetErrorString();
# 236 "c:/marmalade/7.3/s3e/h/s3eSound.h"
extern "C" int s3eSoundGetFreeChannel();
# 251 "c:/marmalade/7.3/s3e/h/s3eSound.h"
extern "C" void s3eSoundPauseAllChannels();
# 265 "c:/marmalade/7.3/s3e/h/s3eSound.h"
extern "C" void s3eSoundResumeAllChannels();
# 280 "c:/marmalade/7.3/s3e/h/s3eSound.h"
extern "C" void s3eSoundStopAllChannels();






typedef enum s3eSoundChannelProperty
{
# 299 "c:/marmalade/7.3/s3e/h/s3eSound.h"
    S3E_CHANNEL_PITCH = 0,
# 308 "c:/marmalade/7.3/s3e/h/s3eSound.h"
    S3E_CHANNEL_RATE = 1,







    S3E_CHANNEL_USERVAR = 2,
# 325 "c:/marmalade/7.3/s3e/h/s3eSound.h"
    S3E_CHANNEL_VOLUME = 3,





    S3E_CHANNEL_STATUS = 4,





    S3E_CHANNEL_PAUSED = 5
} s3eSoundChannelProperty;
# 359 "c:/marmalade/7.3/s3e/h/s3eSound.h"
typedef enum s3eSoundChannelCallback
{
# 376 "c:/marmalade/7.3/s3e/h/s3eSound.h"
    S3E_CHANNEL_END_SAMPLE = 0,
# 422 "c:/marmalade/7.3/s3e/h/s3eSound.h"
    S3E_CHANNEL_GEN_AUDIO = 1,
# 436 "c:/marmalade/7.3/s3e/h/s3eSound.h"
    S3E_CHANNEL_STOP_AUDIO = 2,
# 460 "c:/marmalade/7.3/s3e/h/s3eSound.h"
    S3E_CHANNEL_GEN_AUDIO_STEREO = 3
} s3eSoundChannelCallback;
# 501 "c:/marmalade/7.3/s3e/h/s3eSound.h"
typedef struct s3eSoundEndSampleInfo
{



    int32 m_Channel;





    int32 m_RepsRemaining;






    int16* m_NewData;





    uint32 m_NumSamples;
} s3eSoundEndSampleInfo;
# 584 "c:/marmalade/7.3/s3e/h/s3eSound.h"
typedef struct s3eSoundGenAudioInfo
{
    int32 m_Channel;

    int16* m_Target;
    uint32 m_NumSamples;
    int32 m_Mix;

    int16* m_OrigStart;
    uint32 m_OrigNumSamples;
    uint32 m_OrigRepeat;

    s3eBool m_EndSample;
    s3eBool m_Stereo;
} s3eSoundGenAudioInfo;
# 626 "c:/marmalade/7.3/s3e/h/s3eSound.h"
extern "C" s3eResult s3eSoundChannelSetInt(int channel, s3eSoundChannelProperty property, int32 value);
# 645 "c:/marmalade/7.3/s3e/h/s3eSound.h"
extern "C" int32 s3eSoundChannelGetInt(int channel, s3eSoundChannelProperty property);
# 678 "c:/marmalade/7.3/s3e/h/s3eSound.h"
extern "C" s3eResult s3eSoundChannelPlay(int channel, int16* start, uint32 numSamples, int32 repeat, int32 loopfrom);
# 700 "c:/marmalade/7.3/s3e/h/s3eSound.h"
extern "C" s3eResult s3eSoundChannelStop(int channel);
# 721 "c:/marmalade/7.3/s3e/h/s3eSound.h"
extern "C" s3eResult s3eSoundChannelPause(int channel);
# 742 "c:/marmalade/7.3/s3e/h/s3eSound.h"
extern "C" s3eResult s3eSoundChannelResume(int channel);
# 771 "c:/marmalade/7.3/s3e/h/s3eSound.h"
extern "C" s3eResult s3eSoundChannelRegister(int channel, s3eSoundChannelCallback cbid, s3eCallback func, void* userData);
# 796 "c:/marmalade/7.3/s3e/h/s3eSound.h"
extern "C" s3eResult s3eSoundChannelUnRegister(int channel, s3eSoundChannelCallback cbid);
# 34 "c:/marmalade/7.3/s3e/h/s3e.h" 2
# 1 "c:/marmalade/7.3/s3e/h/s3eSocket.h" 1
# 53 "c:/marmalade/7.3/s3e/h/s3eSocket.h"
typedef enum s3eSocketType
{
    S3E_SOCKET_TCP,
    S3E_SOCKET_UDP
} s3eSocketType;

typedef enum s3eNetworkType
{
    S3E_NETWORK_TYPE_NONE = 0,
    S3E_NETWORK_TYPE_UNKNOWN = 1,
    S3E_NETWORK_TYPE_LAN = 2,
    S3E_NETWORK_TYPE_WLAN = 3,
    S3E_NETWORK_TYPE_GPRS = 4,
    S3E_NETWORK_TYPE_UMTS = 5,
    S3E_NETWORK_TYPE_EVDO = 6,
    S3E_NETWORK_TYPE_CDMA2000 = 7,
    S3E_NETWORK_TYPE_HSDPA = 8,
    S3E_NETWORK_TYPE_WIMAX = 9,
    S3E_NETWORK_TYPE_BLUETOOTH = 10,
    S3E_NETWORK_TYPE_EDGE = 11,
    S3E_NETWORK_TYPE_CDMA = 12,
    S3E_NETWORK_TYPE_IDEN = 13,
    S3E_NETWORK_TYPE_LTE = 14,
    S3E_NETWORK_TYPE_EHRPD = 15,
    S3E_NETWORK_TYPE_HSPAPLUS = 16,
    S3E_NETWORK_TYPE_EVDV = 17,
} s3eNetworkType;
# 106 "c:/marmalade/7.3/s3e/h/s3eSocket.h"
typedef struct s3eSocket s3eSocket;
# 119 "c:/marmalade/7.3/s3e/h/s3eSocket.h"
typedef uint32 s3eInetIPAddress;
# 132 "c:/marmalade/7.3/s3e/h/s3eSocket.h"
typedef struct s3eInetAddress
{

    char m_Local;

    char m_LocalAddress[128];

    char m_Abstract;

    s3eInetIPAddress m_IPAddress;

    uint16 m_Port;

    char m_String[128];
} s3eInetAddress;
# 155 "c:/marmalade/7.3/s3e/h/s3eSocket.h"
typedef enum s3eSocketProperty
{



    S3E_SOCKET_MAX_SOCKETS,



    S3E_SOCKET_NETWORK_AVAILABLE,



    S3E_SOCKET_NETWORK_TYPE,



    S3E_SOCKET_DOMAINNAME,



    S3E_SOCKET_HOSTNAME,



    S3E_SOCKET_HTTP_PROXY,



    S3E_SOCKET_UDP_AVAILABLE
} s3eSocketProperty;


typedef enum s3eSocketOption
{





    S3E_SOCKET_NODELAY = 1,







    S3E_SOCKET_KEEPALIVE = 2,







    S3E_SOCKET_BROADCAST = 3,
# 222 "c:/marmalade/7.3/s3e/h/s3eSocket.h"
    S3E_SOCKET_ADD_MEMBERSHIP = 4,
# 235 "c:/marmalade/7.3/s3e/h/s3eSocket.h"
    S3E_SOCKET_DROP_MEMBERSHIP = 5,
# 252 "c:/marmalade/7.3/s3e/h/s3eSocket.h"
    S3E_SOCKET_NOSIGPIPE = 6

} s3eSocketOption;
# 269 "c:/marmalade/7.3/s3e/h/s3eSocket.h"
extern "C" int32 s3eSocketGetInt(s3eSocketProperty socketProperty);
# 284 "c:/marmalade/7.3/s3e/h/s3eSocket.h"
extern "C" s3eResult s3eSocketSetOpt(s3eSocket* s, s3eSocketOption opt, void* value, int valueLen);
# 299 "c:/marmalade/7.3/s3e/h/s3eSocket.h"
extern "C" s3eResult s3eSocketGetOpt(s3eSocket* s, s3eSocketOption opt, void* out, int* outLen);
# 310 "c:/marmalade/7.3/s3e/h/s3eSocket.h"
extern "C" const char* s3eSocketGetString(s3eSocketProperty socketProperty);
# 319 "c:/marmalade/7.3/s3e/h/s3eSocket.h"
typedef int32 (*s3eSocketCallbackFn)(s3eSocket* s, void* systemData, void* userData);
# 329 "c:/marmalade/7.3/s3e/h/s3eSocket.h"
typedef enum s3eSocketError
{
    S3E_SOCKET_ERR_NONE = 0,
    S3E_SOCKET_ERR_PARAM = 1,
    S3E_SOCKET_ERR_TOO_MANY = 2,
    S3E_SOCKET_ERR_ALREADY_REG = 3,
    S3E_SOCKET_ERR_NOT_FOUND = 4,
    S3E_SOCKET_ERR_UNAVAIL = 5,
    S3E_SOCKET_ERR_UNSUPPORTED = 7,

    S3E_SOCKET_ERR_WOULDBLOCK = 1000,
    S3E_SOCKET_ERR_INPROGRESS = 1001,
    S3E_SOCKET_ERR_ALREADY = 1002,
    S3E_SOCKET_ERR_NOTSOCK = 1003,
    S3E_SOCKET_ERR_MSGSIZE = 1004,
    S3E_SOCKET_ERR_ADDRINUSE = 1005,
    S3E_SOCKET_ERR_NETDOWN = 1006,
    S3E_SOCKET_ERR_CONNRESET = 1007,
    S3E_SOCKET_ERR_ISCONN = 1008,
    S3E_SOCKET_ERR_NOTCONN = 1009,
    S3E_SOCKET_ERR_SHUTDOWN = 1010,
    S3E_SOCKET_ERR_TIMEDOUT = 1011,
    S3E_SOCKET_ERR_CONNREFUSED = 1012,
    S3E_SOCKET_ERR_UNKNOWN_HOST = 1013
} s3eSocketErrors;
# 368 "c:/marmalade/7.3/s3e/h/s3eSocket.h"
extern "C" s3eSocketErrors s3eSocketGetError();
# 382 "c:/marmalade/7.3/s3e/h/s3eSocket.h"
extern "C" const char* s3eSocketGetErrorString();
# 395 "c:/marmalade/7.3/s3e/h/s3eSocket.h"
extern "C" s3eResult s3eInetAton(s3eInetIPAddress* result, const char* addr);
# 405 "c:/marmalade/7.3/s3e/h/s3eSocket.h"
extern "C" uint32 s3eInetNtohl(uint32 addr);
# 415 "c:/marmalade/7.3/s3e/h/s3eSocket.h"
extern "C" uint32 s3eInetHtonl(uint32 addr);
# 425 "c:/marmalade/7.3/s3e/h/s3eSocket.h"
extern "C" uint16 s3eInetNtohs(uint16 addr);
# 435 "c:/marmalade/7.3/s3e/h/s3eSocket.h"
extern "C" uint16 s3eInetHtons(uint16 addr);
# 448 "c:/marmalade/7.3/s3e/h/s3eSocket.h"
extern "C" char* s3eInetNtoa(s3eInetIPAddress addr, char* buf, int len);
# 458 "c:/marmalade/7.3/s3e/h/s3eSocket.h"
extern "C" const char* s3eInetToString(const s3eInetAddress* s);
# 482 "c:/marmalade/7.3/s3e/h/s3eSocket.h"
extern "C" s3eResult s3eInetLookup(const char* hostname, s3eInetAddress* addr, s3eCallback func, void* userData);




extern "C" void s3eInetLookupCancel();
# 504 "c:/marmalade/7.3/s3e/h/s3eSocket.h"
extern "C" s3eSocket* s3eSocketCreate(s3eSocketType type, uint32 flags =0);
# 518 "c:/marmalade/7.3/s3e/h/s3eSocket.h"
extern "C" s3eResult s3eSocketClose(s3eSocket* socket);
# 549 "c:/marmalade/7.3/s3e/h/s3eSocket.h"
extern "C" s3eResult s3eSocketBind(s3eSocket* sock, const s3eInetAddress* addr, uint8 reuseAddress);
# 564 "c:/marmalade/7.3/s3e/h/s3eSocket.h"
extern "C" s3eResult s3eSocketGetLocalName(s3eSocket* sock, s3eInetAddress* addr);
# 577 "c:/marmalade/7.3/s3e/h/s3eSocket.h"
extern "C" s3eResult s3eSocketGetPeerName(s3eSocket* sock, s3eInetAddress* addr);
# 625 "c:/marmalade/7.3/s3e/h/s3eSocket.h"
extern "C" s3eResult s3eSocketConnect(s3eSocket* sock, const s3eInetAddress* addr, s3eSocketCallbackFn func, void* userdata);
# 646 "c:/marmalade/7.3/s3e/h/s3eSocket.h"
extern "C" int32 s3eSocketSend(s3eSocket* sock, const char* buf, uint32 len, int flags);
# 666 "c:/marmalade/7.3/s3e/h/s3eSocket.h"
extern "C" int32 s3eSocketRecv(s3eSocket* sock, char* buf, uint32 len, int flags);
# 687 "c:/marmalade/7.3/s3e/h/s3eSocket.h"
extern "C" int32 s3eSocketRecvFrom(s3eSocket* s, char* buf, uint32 len, int flags, s3eInetAddress* from);
# 712 "c:/marmalade/7.3/s3e/h/s3eSocket.h"
extern "C" int32 s3eSocketSendTo(s3eSocket* s, const char* buf, uint32 len, int flags, const s3eInetAddress* to);
# 748 "c:/marmalade/7.3/s3e/h/s3eSocket.h"
extern "C" s3eResult s3eSocketListen(s3eSocket* s, uint16 backlog);
# 769 "c:/marmalade/7.3/s3e/h/s3eSocket.h"
extern "C" s3eSocket* s3eSocketAccept(s3eSocket* s, s3eInetAddress* addr, s3eSocketCallbackFn callback, void* userdata);
# 783 "c:/marmalade/7.3/s3e/h/s3eSocket.h"
extern "C" s3eResult s3eSocketReadable(s3eSocket* s, s3eSocketCallbackFn readable, void* userData);
# 796 "c:/marmalade/7.3/s3e/h/s3eSocket.h"
extern "C" s3eResult s3eSocketWritable(s3eSocket* s, s3eSocketCallbackFn writable, void* data);
# 35 "c:/marmalade/7.3/s3e/h/s3e.h" 2
# 1 "c:/marmalade/7.3/s3e/h/s3eSurface.h" 1
# 110 "c:/marmalade/7.3/s3e/h/s3eSurface.h"
typedef enum s3eSurfacePixelType
{
    S3E_SURFACE_PIXEL_TYPE_RGB444 = 0x20 | 0x400 | 0x1,
    S3E_SURFACE_PIXEL_TYPE_RGB555 = 0x20 | 0x400 | 0x3,
    S3E_SURFACE_PIXEL_TYPE_RGB5551 = 0x20 | 0x400 | 0x6,
    S3E_SURFACE_PIXEL_TYPE_RGB565 = 0x20 | 0x400 | 0x2,
    S3E_SURFACE_PIXEL_TYPE_RGB666 = 0x40 | 0x400 | 0x4,
    S3E_SURFACE_PIXEL_TYPE_RGB888 = 0x40 | 0x400 | 0x5,
    S3E_SURFACE_PIXEL_TYPE_RGB888_3B = 0x30 | 0x400 | 0x5,
    S3E_SURFACE_PIXEL_TYPE_XRGB888 = 0x40 | 0x400 | 0x7,

    S3E_SURFACE_PIXEL_TYPE_BGR444 = 0x20 | 0x800 | 0x1,
    S3E_SURFACE_PIXEL_TYPE_BGR555 = 0x20 | 0x800 | 0x3,
    S3E_SURFACE_PIXEL_TYPE_BGR5551 = 0x20 | 0x800 | 0x6,
    S3E_SURFACE_PIXEL_TYPE_BGR565 = 0x20 | 0x800 | 0x2,
    S3E_SURFACE_PIXEL_TYPE_BGR666 = 0x40 | 0x800 | 0x4,
    S3E_SURFACE_PIXEL_TYPE_BGR888 = 0x40 | 0x800 | 0x5,
    S3E_SURFACE_PIXEL_TYPE_BGR888_3B = 0x30 | 0x800 | 0x5,
    S3E_SURFACE_PIXEL_TYPE_XBGR888 = 0x40 | 0x800 | 0x7
} s3eSurfacePixelType;






typedef enum s3eSurfaceBlitDirection
{

    S3E_SURFACE_BLIT_DIR_NORMAL = 0,


    S3E_SURFACE_BLIT_DIR_ROT90 = 1,


    S3E_SURFACE_BLIT_DIR_ROT180 = 2,


    S3E_SURFACE_BLIT_DIR_ROT270 = 3,





    S3E_SURFACE_BLIT_DIR_NATIVE = 4
} s3eSurfaceBlitDirection;






typedef struct s3eSurfaceInfo
{

    uint32 m_Width;

    uint32 m_Height;

    uint32 m_Pitch;

    s3eSurfacePixelType m_PixelType;

    void* m_Data;
} s3eSurfaceInfo;




extern "C" void s3eSurfaceClear(uint8 r, uint8 g, uint8 b);






extern "C" void s3eSurfaceBlank(uint8 bitpattern);







typedef enum s3eSurfaceProperty
{






    S3E_SURFACE_WIDTH = 0,







    S3E_SURFACE_HEIGHT = 1,






    S3E_SURFACE_PITCH = 2,





    S3E_SURFACE_PIXEL_TYPE = 3,


    S3E_SURFACE_DEVICE_WIDTH = 4,


    S3E_SURFACE_DEVICE_HEIGHT = 5,


    S3E_SURFACE_DEVICE_PIXEL_TYPE = 6,





    S3E_SURFACE_DEVICE_PITCH = 7,







    S3E_SURFACE_BLIT_DIRECTION = 8,


    S3E_SURFACE_DISPLAY = 9,





    S3E_SURFACE_NUM_DISPLAYS = 10,
# 267 "c:/marmalade/7.3/s3e/h/s3eSurface.h"
    S3E_SURFACE_DEVICE_BLIT_DIRECTION = 11,
# 280 "c:/marmalade/7.3/s3e/h/s3eSurface.h"
    S3E_SURFACE_DEVICE_WIDTH_QUANTISED = 12,
# 293 "c:/marmalade/7.3/s3e/h/s3eSurface.h"
    S3E_SURFACE_DEVICE_HEIGHT_QUANTISED = 13,
# 309 "c:/marmalade/7.3/s3e/h/s3eSurface.h"
    S3E_SURFACE_DEVICE_ORIENTATION_LOCK = 14,




    S3E_SURFACE_GL_MODE = 15,
} s3eSurfaceProperty;
# 329 "c:/marmalade/7.3/s3e/h/s3eSurface.h"
extern "C" int32 s3eSurfaceGetInt(s3eSurfaceProperty property);
# 344 "c:/marmalade/7.3/s3e/h/s3eSurface.h"
 extern "C" s3eResult s3eSurfaceSetInt(s3eSurfaceProperty property, int32 val);
# 355 "c:/marmalade/7.3/s3e/h/s3eSurface.h"
typedef struct s3eSurfaceOrientation
{
    s3eBool m_OrientationChanged;
    uint32 m_Width;
    uint32 m_Height;
    s3eSurfaceBlitDirection m_DeviceBlitDirection;
    uint32 m_Pitch;
} s3eSurfaceOrientation;
# 372 "c:/marmalade/7.3/s3e/h/s3eSurface.h"
typedef enum s3eSurfaceCallback
{
# 385 "c:/marmalade/7.3/s3e/h/s3eSurface.h"
    S3E_SURFACE_COPYUP = 0,
# 398 "c:/marmalade/7.3/s3e/h/s3eSurface.h"
    S3E_SURFACE_SCREENSIZE = 1,

    S3E_SURFACE_SCREEN_ROTATE = 2,

    S3E_SURFACE_CALLBACK_MAX = 3
} s3eSurfaceCallback;
# 428 "c:/marmalade/7.3/s3e/h/s3eSurface.h"
typedef struct s3eSurfaceCopyupInfo
{

    s3eSurfaceInfo m_SrcSurface;

    s3eSurfaceInfo m_DestSurface;

    uint32 m_X;

    uint32 m_Y;

    uint32 m_Width;

    uint32 m_Height;

    s3eSurfaceBlitDirection m_BlitDirection;
} s3eSurfaceCopyupInfo;
# 472 "c:/marmalade/7.3/s3e/h/s3eSurface.h"
extern "C" s3eResult s3eSurfaceRegister(s3eSurfaceCallback cbid, s3eCallback fn, void* userData);
# 491 "c:/marmalade/7.3/s3e/h/s3eSurface.h"
extern "C" s3eResult s3eSurfaceUnRegister(s3eSurfaceCallback cbid, s3eCallback fn);
# 500 "c:/marmalade/7.3/s3e/h/s3eSurface.h"
typedef enum s3eSurfaceError
{
    S3E_SURFACE_ERR_NONE = 0,
    S3E_SURFACE_ERR_PARAM = 1,
    S3E_SURFACE_ERR_TOO_MANY = 2,
    S3E_SURFACE_ERR_ALREADY_REG = 3,
    S3E_SURFACE_ERR_NOT_FOUND = 4,
    S3E_SURFACE_ERR_DEVICE = 6,
    S3E_SURFACE_ERR_MEM = 8
} s3eSurfaceError;
# 522 "c:/marmalade/7.3/s3e/h/s3eSurface.h"
extern "C" s3eSurfaceError s3eSurfaceGetError();
# 536 "c:/marmalade/7.3/s3e/h/s3eSurface.h"
extern "C" const char* s3eSurfaceGetErrorString();
# 558 "c:/marmalade/7.3/s3e/h/s3eSurface.h"
extern "C" void* s3eSurfacePtr();
# 593 "c:/marmalade/7.3/s3e/h/s3eSurface.h"
extern "C" s3eResult s3eSurfaceShow();
# 683 "c:/marmalade/7.3/s3e/h/s3eSurface.h"
extern "C" s3eResult s3eSurfaceSetup(s3eSurfacePixelType pixelType, uint32 pitch =0, void* ptr =__null, s3eSurfaceBlitDirection blitDirection =S3E_SURFACE_BLIT_DIR_NORMAL);
# 711 "c:/marmalade/7.3/s3e/h/s3eSurface.h"
extern "C" void s3eSurfaceInvalidate(int32 x, int32 y, int32 dx, int32 dy);
# 725 "c:/marmalade/7.3/s3e/h/s3eSurface.h"
extern "C" uint32 s3eSurfaceConvertRGB(uint8 r, uint8 g, uint8 b);
# 744 "c:/marmalade/7.3/s3e/h/s3eSurface.h"
extern "C" s3eResult s3eSurfaceSetDisplayID(uint32 id);
# 760 "c:/marmalade/7.3/s3e/h/s3eSurface.h"
typedef enum
{
    S3E_SURFACE_ORIENTATION_LOCK_MIN = 0,




    S3E_SURFACE_ORIENTATION_FREE = 0,






    S3E_SURFACE_PORTRAIT = 1,






    S3E_SURFACE_LANDSCAPE = 2,





    S3E_SURFACE_PORTRAIT_FIXED = 3,





    S3E_SURFACE_LANDSCAPE_FIXED = 4,

    S3E_SURFACE_ORIENTATION_LOCK_MAX = 4
} s3eSurfaceOrientationLock;
# 36 "c:/marmalade/7.3/s3e/h/s3e.h" 2



# 1 "c:/marmalade/7.3/s3e/h/s3eTimer.h" 1
# 53 "c:/marmalade/7.3/s3e/h/s3eTimer.h"
typedef enum s3eTimerProperty
{
    S3E_TIMER_RESOLUTION
} s3eTimerProperty;
# 65 "c:/marmalade/7.3/s3e/h/s3eTimer.h"
typedef enum s3eTimerError
{
    S3E_TIMER_ERR_NONE = 0,
    S3E_TIMER_ERR_PARAM = 1,
    S3E_TIMER_ERR_TOO_MANY = 2,
    S3E_TIMER_ERR_ALREADY_REG = 3,
    S3E_TIMER_ERR_NOT_FOUND = 4,
    S3E_TIMER_ERR_UNAVAIL = 5
} s3eTimerError;
# 86 "c:/marmalade/7.3/s3e/h/s3eTimer.h"
extern "C" s3eTimerError s3eTimerGetError();
# 99 "c:/marmalade/7.3/s3e/h/s3eTimer.h"
extern "C" const char* s3eTimerGetErrorString();
# 115 "c:/marmalade/7.3/s3e/h/s3eTimer.h"
extern "C" int32 s3eTimerGetInt(s3eTimerProperty property);
# 129 "c:/marmalade/7.3/s3e/h/s3eTimer.h"
extern "C" int64 s3eTimerGetUST();
# 140 "c:/marmalade/7.3/s3e/h/s3eTimer.h"
extern "C" int64 s3eTimerGetUSTNanoseconds();




extern "C" uint64 s3eTimerGetMs();





extern "C" int64 s3eTimerGetUTC();
# 160 "c:/marmalade/7.3/s3e/h/s3eTimer.h"
extern "C" int64 s3eTimerGetLocaltimeOffset(int64* when =__null);
# 192 "c:/marmalade/7.3/s3e/h/s3eTimer.h"
extern "C" s3eResult s3eTimerSetTimer(uint32 ms, s3eCallback fn, void* userData);
# 213 "c:/marmalade/7.3/s3e/h/s3eTimer.h"
extern "C" s3eResult s3eTimerCancelTimer(s3eCallback fn, void* userData);
# 40 "c:/marmalade/7.3/s3e/h/s3e.h" 2

# 1 "c:/marmalade/7.3/s3e/h/s3eVersion.h" 1
# 42 "c:/marmalade/7.3/s3e/h/s3e.h" 2
# 1 "c:/marmalade/7.3/s3e/h/s3eVibra.h" 1
# 53 "c:/marmalade/7.3/s3e/h/s3eVibra.h"
typedef enum s3eVibraProperty
{





    S3E_VIBRA_AVAILABLE = 0,







    S3E_VIBRA_ENABLED = 1,





    S3E_VIBRA_THRESHOLD = 2
} s3eVibraProperty;
# 84 "c:/marmalade/7.3/s3e/h/s3eVibra.h"
typedef enum s3eVibraError
{
    S3E_VIBRA_ERR_NONE = 0,
    S3E_VIBRA_ERR_PARAM = 1,
    S3E_VIBRA_ERR_UNAVAIL = 5,
    S3E_VIBRA_ERR_DEVICE = 6,
    S3E_VIBRA_ERR_DISABLED = 1000
} s3eVibraError;
# 106 "c:/marmalade/7.3/s3e/h/s3eVibra.h"
extern "C" int32 s3eVibraGetInt(s3eVibraProperty property);
# 124 "c:/marmalade/7.3/s3e/h/s3eVibra.h"
extern "C" s3eResult s3eVibraSetInt(s3eVibraProperty property, int32 value);
# 137 "c:/marmalade/7.3/s3e/h/s3eVibra.h"
extern "C" s3eVibraError s3eVibraGetError();
# 150 "c:/marmalade/7.3/s3e/h/s3eVibra.h"
extern "C" const char* s3eVibraGetErrorString();
# 166 "c:/marmalade/7.3/s3e/h/s3eVibra.h"
extern "C" s3eResult s3eVibraVibrate(uint8 level, uint32 ms);
# 178 "c:/marmalade/7.3/s3e/h/s3eVibra.h"
extern "C" void s3eVibraStop();
# 43 "c:/marmalade/7.3/s3e/h/s3e.h" 2
# 1 "c:/marmalade/7.3/s3e/h/s3eVideo.h" 1
# 140 "c:/marmalade/7.3/s3e/h/s3eVideo.h"
typedef enum s3eVideoCodec
{







    S3E_VIDEO_CODEC_MPEG4 = 1,
# 158 "c:/marmalade/7.3/s3e/h/s3eVideo.h"
    S3E_VIDEO_CODEC_3GPP = 2,





    S3E_VIDEO_CODEC_JPEG = 3,
# 173 "c:/marmalade/7.3/s3e/h/s3eVideo.h"
    S3E_VIDEO_CODEC_3GPP_VIDEO_H263 = 4,
# 182 "c:/marmalade/7.3/s3e/h/s3eVideo.h"
    S3E_VIDEO_CODEC_3GPP_VIDEO_H264 = 5,
# 191 "c:/marmalade/7.3/s3e/h/s3eVideo.h"
    S3E_VIDEO_CODEC_3GPP_AUDIO_AMR = 6,







    S3E_VIDEO_CODEC_3GPP_AUDIO_AAC = 7,
# 208 "c:/marmalade/7.3/s3e/h/s3eVideo.h"
    S3E_VIDEO_CODEC_MPEG4_VIDEO_MPEG4 = 8,
# 217 "c:/marmalade/7.3/s3e/h/s3eVideo.h"
    S3E_VIDEO_CODEC_MPEG4_VIDEO_H264 = 9,







    S3E_VIDEO_CODEC_MPEG4_AUDIO_AAC = 10,






    S3E_VIDEO_CODEC_SWF = 11
} s3eVideoCodec;






typedef enum s3eVideoStatus
{




    S3E_VIDEO_STOPPED = 0,




    S3E_VIDEO_PLAYING = 1,




    S3E_VIDEO_PAUSED = 2,
# 265 "c:/marmalade/7.3/s3e/h/s3eVideo.h"
    S3E_VIDEO_FAILED = 3
} s3eVideoStatus;
# 275 "c:/marmalade/7.3/s3e/h/s3eVideo.h"
typedef enum s3eVideoProperty
{





    S3E_VIDEO_VOLUME = 0,





    S3E_VIDEO_STATUS = 1,





    S3E_VIDEO_POSITION = 2,
# 307 "c:/marmalade/7.3/s3e/h/s3eVideo.h"
    S3E_VIDEO_VOLUME_DEFAULT = 3,


    S3E_VIDEO_AVAILABLE = 5

} s3eVideoProperty;
# 327 "c:/marmalade/7.3/s3e/h/s3eVideo.h"
extern "C" int32 s3eVideoGetInt(s3eVideoProperty property);
# 346 "c:/marmalade/7.3/s3e/h/s3eVideo.h"
extern "C" s3eResult s3eVideoSetInt(s3eVideoProperty property, int32 value);
# 356 "c:/marmalade/7.3/s3e/h/s3eVideo.h"
typedef enum s3eVideoCallback
{
# 374 "c:/marmalade/7.3/s3e/h/s3eVideo.h"
    S3E_VIDEO_STOP = 2,

    S3E_VIDEO_CALLBACK_MAX
} s3eVideoCallback;
# 399 "c:/marmalade/7.3/s3e/h/s3eVideo.h"
extern "C" s3eResult s3eVideoRegister(s3eVideoCallback cbid, s3eCallback fn, void* userData);
# 417 "c:/marmalade/7.3/s3e/h/s3eVideo.h"
extern "C" s3eResult s3eVideoUnRegister(s3eVideoCallback cbid, s3eCallback fn);
# 426 "c:/marmalade/7.3/s3e/h/s3eVideo.h"
typedef enum s3eVideoError
{
    S3E_VIDEO_ERR_NONE = 0,
    S3E_VIDEO_ERR_PARAM = 1,
    S3E_VIDEO_ERR_TOO_MANY = 2,
    S3E_VIDEO_ERR_ALREADY_REG = 3,
    S3E_VIDEO_ERR_NOT_FOUND = 4,
    S3E_VIDEO_ERR_UNAVAIL = 5,
    S3E_VIDEO_ERR_DEVICE = 6,
    S3E_VIDEO_ERR_UNSUPPORTED = 7,
    S3E_VIDEO_ERR_MEM = 8,
    S3E_VIDEO_ERR_INVALID_DRIVE = 10,
    S3E_VIDEO_ERR_INVALID_PATH = 11,
    S3E_VIDEO_ERR_FILEFORMAT = 1000,
    S3E_VIDEO_ERR_WRONG_STATE = 1001
} s3eVideoError;
# 454 "c:/marmalade/7.3/s3e/h/s3eVideo.h"
extern "C" s3eVideoError s3eVideoGetError();
# 468 "c:/marmalade/7.3/s3e/h/s3eVideo.h"
extern "C" const char* s3eVideoGetErrorString();
# 558 "c:/marmalade/7.3/s3e/h/s3eVideo.h"
extern "C" s3eResult s3eVideoPlay(const char* filename, uint32 repeatCount =1, int32 x =0, int32 y =0, int32 width =0, int32 height =0);
# 632 "c:/marmalade/7.3/s3e/h/s3eVideo.h"
extern "C" s3eResult s3eVideoPlayFromBuffer(void* data, uint32 len, uint32 repeatCount =1, int32 x =0, int32 y =0, int32 width =0, int32 height =0);
# 658 "c:/marmalade/7.3/s3e/h/s3eVideo.h"
extern "C" s3eResult s3eVideoPause();
# 679 "c:/marmalade/7.3/s3e/h/s3eVideo.h"
extern "C" s3eResult s3eVideoResume();
# 696 "c:/marmalade/7.3/s3e/h/s3eVideo.h"
extern "C" void s3eVideoStop();
# 708 "c:/marmalade/7.3/s3e/h/s3eVideo.h"
extern "C" s3eBool s3eVideoIsPlaying();
# 745 "c:/marmalade/7.3/s3e/h/s3eVideo.h"
extern "C" s3eBool s3eVideoIsCodecSupported(s3eVideoCodec codec);
# 44 "c:/marmalade/7.3/s3e/h/s3e.h" 2
# 1 "c:/marmalade/7.3/s3e/h/s3eGL.h" 1
# 55 "c:/marmalade/7.3/s3e/h/s3eGL.h"
typedef enum s3eGLError
{
    S3E_GL_ERR_NONE = 0,
    S3E_GL_ERR_PARAM = 1,
    S3E_GL_ERR_TOO_MANY = 2,
    S3E_GL_ERR_ALREADY_REG = 3,
    S3E_GL_ERR_NOT_FOUND = 4,
    S3E_GL_ERR_UNAVAIL = 5,
} s3eGLError;






typedef enum s3eGLProperty
{





    S3E_GL_VERSION = 0,





    S3E_EGL_VERSION = 1,






    S3E_GL_MUST_SUSPEND = 2,

} s3eGLProperty;
# 104 "c:/marmalade/7.3/s3e/h/s3eGL.h"
extern "C" int32 s3eGLGetInt(s3eGLProperty property);
# 114 "c:/marmalade/7.3/s3e/h/s3eGL.h"
typedef enum s3eGLCallback
{
# 127 "c:/marmalade/7.3/s3e/h/s3eGL.h"
    S3E_GL_SUSPEND = 0,
# 139 "c:/marmalade/7.3/s3e/h/s3eGL.h"
    S3E_GL_RESUME = 1,

    S3E_GL_CALLBACK_MAX
} s3eGLCallback;
# 165 "c:/marmalade/7.3/s3e/h/s3eGL.h"
extern "C" s3eResult s3eGLRegister(s3eGLCallback cbid, s3eCallback fn, void* userdata);
# 185 "c:/marmalade/7.3/s3e/h/s3eGL.h"
extern "C" s3eResult s3eGLUnRegister(s3eGLCallback cbid, s3eCallback fn);
# 199 "c:/marmalade/7.3/s3e/h/s3eGL.h"
extern "C" s3eGLError s3eGLGetError();
# 213 "c:/marmalade/7.3/s3e/h/s3eGL.h"
extern "C" const char* s3eGLGetErrorString();
# 225 "c:/marmalade/7.3/s3e/h/s3eGL.h"
extern "C" void* s3eGLGetNativeWindow();
# 45 "c:/marmalade/7.3/s3e/h/s3e.h" 2
# 2 "C:\\Users\\David\\git\\RadioApp\\UCCSRadio\\streamerExtension\\source\\generic\\audioStreamer.cpp" 2
# 1 "c:/marmalade/7.3/modules/iwutil/h/IwUtil.h" 1
       
# 16 "c:/marmalade/7.3/modules/iwutil/h/IwUtil.h"
# 1 "c:/marmalade/7.3/modules/iwutil/h/IwClassFactory.h" 1
       
# 21 "c:/marmalade/7.3/modules/iwutil/h/IwClassFactory.h"
# 1 "c:/marmalade/7.3/s3e/h/s3eTypes.h" 1
# 22 "c:/marmalade/7.3/modules/iwutil/h/IwClassFactory.h" 2
# 1 "c:/marmalade/7.3/modules/iwutil/h/IwRuntime.h" 1
       
# 30 "c:/marmalade/7.3/modules/iwutil/h/IwRuntime.h"
# 1 "c:/marmalade/7.3/s3e/h/s3eTimer.h" 1
# 31 "c:/marmalade/7.3/modules/iwutil/h/IwRuntime.h" 2

extern "C" {
# 41 "c:/marmalade/7.3/modules/iwutil/h/IwRuntime.h"
typedef struct _IwCallStack
{
    const char** m_Stack;
    const char** m_StackPtr;

} IwCallStack;

void IwCallStackLeave(void* pObj);
void IwCallStackSetStackSizeLimit(uint32 limit);
void IwCallStackSetStackAddress(uint32 addr);
void IwCallStackPrintStack(char* pBuffer);
IwCallStack* IwCallStackGet();







void IwCallStackInit();
void IwCallStackTerm();
# 75 "c:/marmalade/7.3/modules/iwutil/h/IwRuntime.h"
    void IwCallStackSetCallStackTracing(bool bOnOrOff);



void IwProfileStartProfile(const char* name);
void IwProfileStopProfile();
void IwProfileIncrementFrameCounter();
void IwProfileReset();

}
# 214 "c:/marmalade/7.3/modules/iwutil/h/IwRuntime.h"
class CIwProfileNode
{
public:
    CIwProfileNode(const char* name, CIwProfileNode* parent);
    ~CIwProfileNode();

    CIwProfileNode* GetSubNode(const char* name);

    CIwProfileNode* GetParent() {return m_Parent;}
    CIwProfileNode* GetSibling() {return m_Sibling;}
    CIwProfileNode* GetChild() {return m_Child;}

    void Reset();
    void Call();
    bool Return();
    void NewFrame();

    const char* GetName() {return m_Name;}
    long GetTotalCalls() {return m_TotalCalls;}
    float GetTotalTime() {return m_TotalTime;}
    float GetLastTime() {return m_LastTime;}

    long GetLastFrameCalls(){ return m_LastFrameCalls; }
    float GetLastFrameTime() { return m_LastFrameTime; }
    float GetFrameTimeAvg() { return m_FrameWeightedAvg; }

    bool IsRemainingTimeNode() { return m_IsOtherTimeNode; }

protected:
    const char* m_Name;
    long m_TotalCalls;
    float m_TotalTime;
    float m_LastTime;
    float m_WeightedAvg;

    long m_FrameCalls;
    float m_FrameTime;
    float m_FrameWeightedAvg;

    long m_LastFrameCalls;
    float m_LastFrameTime;

    int32 m_StartTime;
    long m_RecursionCounter;

    bool m_IsOtherTimeNode;

    CIwProfileNode* m_Parent;
    CIwProfileNode* m_Child;
    CIwProfileNode* m_Sibling;
};




class CIwProfileIterator
{
public:

    void First();
    void Next();
    bool IsDone();

    void EnterChild(long index);
    void EnterParent();


    const char* GetCurrentName() {return m_CurrentChild->GetName();}
    long GetCurrentTotalCalls() {return m_CurrentChild->GetTotalCalls();}
    float GetCurrentTotalTime() {return m_CurrentChild->GetTotalTime();}
    float GetCurrentLastTime() {return m_CurrentChild->GetLastTime();}
    float GetCurrentLastFrameTime() {return m_CurrentChild->GetLastFrameTime();}
    long GetCurrentLastFrameCalls() {return m_CurrentChild->GetLastFrameCalls();}
    float GetCurrentFrameTimeAvg() {return m_CurrentChild->GetFrameTimeAvg();}
    bool IsCurrentRemainingTimeNode() {return m_CurrentChild->IsRemainingTimeNode();}




    const char* GetCurrentParentName() {return m_CurrentParent->GetName();}
    long GetCurrentParentTotalCalls() {return m_CurrentParent->GetTotalCalls();}
    float GetCurrentParentTotalTime() {return m_CurrentParent->GetTotalTime();}


protected:
    CIwProfileNode* m_CurrentParent;
    CIwProfileNode* m_CurrentChild;

    CIwProfileIterator(CIwProfileNode* start);
    friend class CIwProfileManager;
};




class CIwProfileManager
{
public:
    CIwProfileManager(uint32 maxNodes=200);
    ~CIwProfileManager();

    inline void SetActive(bool active) {m_Active = active;}
    void StartProfile(const char* name);
    void StopProfile();

    void Reset();
    void IncrementFrameCounter();
    inline long GetFrameCountSinceReset() {return m_FrameCounter;}
    float GetTimeSinceReset();

    inline CIwProfileIterator* GetIterator() {return new CIwProfileIterator(&m_Root);}
    inline void ReleaseIterator(CIwProfileIterator* iterator ) {delete iterator;}


    static CIwProfileManager& Get();

    static CIwProfileManager* g_Singleton;

    CIwProfileNode* AllocNode(const char* name, CIwProfileNode* parent);

private:
    bool m_Active;
    CIwProfileNode m_Root;
    CIwProfileNode* m_CurrentNode;
    long m_FrameCounter;
    int64 m_ResetTime;
    uint32* m_Memory;
    uint32* m_MemoryCursor;
    int32 m_FreeNodes;
};




class CIwProfileSample
{
public:
    CIwProfileSample(const char* name) {IwProfileStartProfile(name);}
    ~CIwProfileSample() {IwProfileStopProfile();}
};
# 23 "c:/marmalade/7.3/modules/iwutil/h/IwClassFactory.h" 2
# 42 "c:/marmalade/7.3/modules/iwutil/h/IwClassFactory.h"
typedef void*(*IwClassFactoryFn)();
typedef void*(*IwClassSizeFactoryFn)();
# 146 "c:/marmalade/7.3/modules/iwutil/h/IwClassFactory.h"
void IwClassFactoryReserve(int number);
# 156 "c:/marmalade/7.3/modules/iwutil/h/IwClassFactory.h"
void* IwClassFactoryCreate(uint32 hash);
# 165 "c:/marmalade/7.3/modules/iwutil/h/IwClassFactory.h"
bool IwClassFactoryExists(uint32 hash);
# 174 "c:/marmalade/7.3/modules/iwutil/h/IwClassFactory.h"
void* IwClassFactoryCreate(const char* name);
# 184 "c:/marmalade/7.3/modules/iwutil/h/IwClassFactory.h"
void IwClassFactoryAdd(uint32 hash, IwClassFactoryFn fn, uint32 size = 0);
# 193 "c:/marmalade/7.3/modules/iwutil/h/IwClassFactory.h"
void IwClassFactoryAdd(const char* name, IwClassFactoryFn fn, uint32 size = 0);
# 202 "c:/marmalade/7.3/modules/iwutil/h/IwClassFactory.h"
void IwClassFactoryRemove(uint32 hash);
# 211 "c:/marmalade/7.3/modules/iwutil/h/IwClassFactory.h"
IwClassFactoryFn IwClassFactoryGet(uint32 hash);

uint32 IwClassFactoryGetSize(uint32 hash);
# 223 "c:/marmalade/7.3/modules/iwutil/h/IwClassFactory.h"
void IwClassFactoryModify(uint32 hash, IwClassFactoryFn fn, uint32 size);
# 17 "c:/marmalade/7.3/modules/iwutil/h/IwUtil.h" 2
# 1 "c:/marmalade/7.3/modules/iwutil/h/IwCopyingPtr.h" 1
       
# 29 "c:/marmalade/7.3/modules/iwutil/h/IwCopyingPtr.h"
# 1 "c:/marmalade/7.3/modules/iwutil/h/IwAllocator.h" 1
# 19 "c:/marmalade/7.3/modules/iwutil/h/IwAllocator.h"
# 1 "c:/marmalade/7.3/s3e/h/s3eMemory.h" 1
# 20 "c:/marmalade/7.3/modules/iwutil/h/IwAllocator.h" 2
# 44 "c:/marmalade/7.3/modules/iwutil/h/IwAllocator.h"
# 1 "c:/marmalade/7.3/s3e/edk/h/s3eEdk.h" 1
# 16 "c:/marmalade/7.3/s3e/edk/h/s3eEdk.h"
# 1 "c:\\program files (x86)\\android\\android-ndk-r8e\\toolchains\\arm-linux-androideabi-4.7\\prebuilt\\windows-x86_64\\bin\\../lib/gcc/arm-linux-androideabi/4.7/include/stdarg.h" 1 3 4
# 40 "c:\\program files (x86)\\android\\android-ndk-r8e\\toolchains\\arm-linux-androideabi-4.7\\prebuilt\\windows-x86_64\\bin\\../lib/gcc/arm-linux-androideabi/4.7/include/stdarg.h" 3 4
typedef __builtin_va_list __gnuc_va_list;
# 102 "c:\\program files (x86)\\android\\android-ndk-r8e\\toolchains\\arm-linux-androideabi-4.7\\prebuilt\\windows-x86_64\\bin\\../lib/gcc/arm-linux-androideabi/4.7/include/stdarg.h" 3 4
typedef __gnuc_va_list va_list;
# 17 "c:/marmalade/7.3/s3e/edk/h/s3eEdk.h" 2

extern "C" {
# 68 "c:/marmalade/7.3/s3e/edk/h/s3eEdk.h"
typedef void (*s3eEdkCallbackCompleteFn)(uint32 extID, int32 notification, void* systemData, void* instance, int32 returnCode, void* completeData);
# 80 "c:/marmalade/7.3/s3e/edk/h/s3eEdk.h"
typedef int32 (*s3eEdkCallbackSpecific) (void* instance, void* systemData, void* userData);
# 95 "c:/marmalade/7.3/s3e/edk/h/s3eEdk.h"
enum s3eEdkCallback
{
# 105 "c:/marmalade/7.3/s3e/edk/h/s3eEdk.h"
    S3E_EDK_IPHONE_OSROTATION = 100,





    S3E_EDK_IPHONE_APPLICATIONDIDBECOMEACTIVE,





    S3E_EDK_IPHONE_APPLICATIONWILLRESIGNACTIVE,





    S3E_EDK_IPHONE_APPLICATIONDIDENTERBACKGROUND,





    S3E_EDK_IPHONE_APPLICATIONWILLENTERFOREGROUND,
# 141 "c:/marmalade/7.3/s3e/edk/h/s3eEdk.h"
    S3E_EDK_IPHONE_DID_RECEIVE_LOCAL_NOTIFICATION,
# 153 "c:/marmalade/7.3/s3e/edk/h/s3eEdk.h"
    S3E_EDK_IPHONE_DID_RECEIVE_REMOTE_NOTIFICATION,





    S3E_EDK_IPHONE_HANDLEOPENURL,

    S3E_EDK_CALLBACK_MAX
};
# 213 "c:/marmalade/7.3/s3e/edk/h/s3eEdk.h"
extern "C" s3eResult s3eEdkCallbacksEnqueue(uint32 extID,
                                 int notification,
                                 void* systemData =__null,
                                 int sysDataSize =0,
                                 void* instance =__null,
                                 s3eBool oneShot =(0),
                                 s3eEdkCallbackCompleteFn =__null,
                                 void* completeData =__null);
# 287 "c:/marmalade/7.3/s3e/edk/h/s3eEdk.h"
extern "C" s3eResult s3eEdkCallbacksRegister(uint32 extID,
                                  int maxNotification,
                                  int notification,
                                  s3eCallback callback,
                                  void* userData,
                                  s3eBool requireUnique);
# 341 "c:/marmalade/7.3/s3e/edk/h/s3eEdk.h"
extern "C" s3eResult s3eEdkCallbacksRegisterSpecific(uint32 extID,
                                          int maxNotification,
                                          int notification,
                                          s3eEdkCallbackSpecific callback,
                                          void* userData,
                                          s3eBool requireUnique,
                                          void* instance);
# 400 "c:/marmalade/7.3/s3e/edk/h/s3eEdk.h"
extern "C" s3eResult s3eEdkCallbacksRegisterInternal(uint32 extID,
                                                     int32 maxNotification,
                                                     int notification,
                                                     s3eCallback callback,
                                                     void* userData,
                                                     s3eBool requireUnique);
# 429 "c:/marmalade/7.3/s3e/edk/h/s3eEdk.h"
extern "C" s3eResult s3eEdkCallbacksUnRegister(uint32 extID,
                                    int maxNotification,
                                    int notification,
                                    s3eCallback callback,
                                    void* instance =__null);
# 449 "c:/marmalade/7.3/s3e/edk/h/s3eEdk.h"
extern "C" void s3eEdkCallbacksUnRegisterDevice(uint32 extID, void* instance =__null);
# 463 "c:/marmalade/7.3/s3e/edk/h/s3eEdk.h"
extern "C" s3eBool s3eEdkCallbacksIsRegistered(uint32 extID, int32 notification, void* instance =__null);
# 505 "c:/marmalade/7.3/s3e/edk/h/s3eEdk.h"
void s3eEdkSurfaceSetSize(s3eBool synchronous =(0), int width =0, int height =0, int pitch =0);
# 524 "c:/marmalade/7.3/s3e/edk/h/s3eEdk.h"
extern "C" void* s3eEdkMallocOS(int size, s3eBool bMsgOnFail =1);
# 536 "c:/marmalade/7.3/s3e/edk/h/s3eEdk.h"
extern "C" void* s3eEdkReallocOS(void* item, int size, s3eBool bMsgOnFail =1);






extern "C" void s3eEdkFreeOS(void* item);
# 561 "c:/marmalade/7.3/s3e/edk/h/s3eEdk.h"
extern "C" s3eBool s3eEdkIsInitialised(uint32 extID);
# 573 "c:/marmalade/7.3/s3e/edk/h/s3eEdk.h"
typedef void s3eEdkDLLHandle;
# 586 "c:/marmalade/7.3/s3e/edk/h/s3eEdk.h"
extern "C" s3eEdkDLLHandle* s3eEdkLibraryOpen(const char* name);
# 606 "c:/marmalade/7.3/s3e/edk/h/s3eEdk.h"
extern "C" void* s3eEdkLibraryGetSymbol(s3eEdkDLLHandle* handle, const char* name);
# 618 "c:/marmalade/7.3/s3e/edk/h/s3eEdk.h"
extern "C" s3eResult s3eEdkLibraryClose(s3eEdkDLLHandle* handle);
# 627 "c:/marmalade/7.3/s3e/edk/h/s3eEdk.h"
extern "C" const char* s3eEdkLibraryError();
# 642 "c:/marmalade/7.3/s3e/edk/h/s3eEdk.h"
typedef void* (*s3eEdkThreadFunc)();







typedef void (*s3eEdkThreadVoidFunc)();
# 663 "c:/marmalade/7.3/s3e/edk/h/s3eEdk.h"
void* s3eEdkThreadRunOnOS(s3eEdkThreadFunc fn, int n_args, ...);





extern "C" void* s3eEdkThreadRunOnOSV(s3eEdkThreadFunc fn, int n_args, va_list args);
# 682 "c:/marmalade/7.3/s3e/edk/h/s3eEdk.h"
void s3eEdkThreadRunOnOSAsync(s3eEdkThreadVoidFunc fn, int n_args, ...);

extern "C" void s3eEdkThreadRunOnOSAsyncV(s3eEdkThreadVoidFunc fn, int n_args, va_list args);
# 697 "c:/marmalade/7.3/s3e/edk/h/s3eEdk.h"
extern "C" void s3eEdkThreadSetSuspended();
# 708 "c:/marmalade/7.3/s3e/edk/h/s3eEdk.h"
extern "C" void s3eEdkThreadSetResumed();
# 717 "c:/marmalade/7.3/s3e/edk/h/s3eEdk.h"
extern "C" s3eResult s3eEdkThreadSleep(uint32 ms);
# 747 "c:/marmalade/7.3/s3e/edk/h/s3eEdk.h"
extern "C" void* s3eEdkGlobalsGet(uint32 extID);


typedef s3eResult (*s3eEdkInitFn)();


typedef void (*s3eEdkTermFn)();




extern "C" void s3eEdkRegister(const char* name,
                    void* funcs,
                    int size,
                    int* funcAttrs,
                    s3eEdkInitFn init,
                    s3eEdkTermFn term,
                    int globalDataSize);
# 781 "c:/marmalade/7.3/s3e/edk/h/s3eEdk.h"
typedef enum s3eEdkErrorPriority
{




    S3E_EXT_ERROR_PRI_MINOR = 0,





    S3E_EXT_ERROR_PRI_NORMAL = 1,





    S3E_EXT_ERROR_PRI_MAJOR = 2,
    S3E_EXT_ERROR_PRI_MAX = 3
} s3eEdkErrorPriority;
# 815 "c:/marmalade/7.3/s3e/edk/h/s3eEdk.h"
extern "C" const char* s3eEdkErrorGetString(uint32 extID);
# 830 "c:/marmalade/7.3/s3e/edk/h/s3eEdk.h"
extern "C" int s3eEdkErrorGet(uint32 extID);
# 846 "c:/marmalade/7.3/s3e/edk/h/s3eEdk.h"
extern "C" s3eResult s3eEdkErrorSet(uint32 extID, int32 error, s3eEdkErrorPriority priority);
# 855 "c:/marmalade/7.3/s3e/edk/h/s3eEdk.h"
void s3eEdkErrorSetString(const char* fmt, ...);

extern "C" void s3eEdkErrorSetStringV(const char* fmt, va_list args);
# 877 "c:/marmalade/7.3/s3e/edk/h/s3eEdk.h"
extern "C" int s3eEdkGetAppVersionMajor();





extern "C" int s3eEdkGetAppVersionMinor();
# 902 "c:/marmalade/7.3/s3e/edk/h/s3eEdk.h"
}
# 45 "c:/marmalade/7.3/modules/iwutil/h/IwAllocator.h" 2

template <class T>
class CIwMallocRouter
{
public:
    static void* DoAlloc(uint32 size) { return s3eEdkMallocOS(size); };
    static void DoFree(void* buf) { s3eEdkFreeOS(buf); };
    static void* DoRealloc(void* buf, uint32 size) { return s3eEdkReallocOS(buf, size); };
};
# 112 "c:/marmalade/7.3/modules/iwutil/h/IwAllocator.h"
template <class T, class M = CIwMallocRouter<T> > class CIwAllocator
{
public:
    typedef uint32 size_type;
    typedef int32 difference_type;
    typedef T* pointer;
    typedef const T* const_pointer;
    typedef T& reference;
    typedef const T& const_reference;
    typedef T value_type;
# 133 "c:/marmalade/7.3/modules/iwutil/h/IwAllocator.h"
    pointer allocate(size_type s)
    {
        return (pointer)M::DoAlloc(s);
    }





    pointer reallocate(pointer p, size_type s)
    {
        return (pointer)M::DoRealloc(p, s);
    }

    void deallocate(pointer p, size_type) { M::DoFree(p); }




};
# 30 "c:/marmalade/7.3/modules/iwutil/h/IwCopyingPtr.h" 2
# 1 "c:/marmalade/7.3/modules/iwutil/h/IwMemory.h" 1
       
# 38 "c:/marmalade/7.3/modules/iwutil/h/IwMemory.h"
enum IwMemBucketID
{
    IW_MEM_BUCKET_ID_SYSTEM = 0,
    IW_MEM_BUCKET_ID_SYSTEM_DEBUG,
    IW_MEM_BUCKET_ID_USER,
};






enum IwMemBucketAllocFailBehaviour
{
    IW_MEM_BUCKET_ALLOC_FAIL_ERROR = 0,
    IW_MEM_BUCKET_ALLOC_FAIL_ASSERT,
    IW_MEM_BUCKET_ALLOC_FAIL_SILENT,

    IW_MEM_BUCKET_ALLOC_FAIL_DEFAULT = IW_MEM_BUCKET_ALLOC_FAIL_ERROR
};

class CIwMemBucket;

extern "C" {
# 74 "c:/marmalade/7.3/modules/iwutil/h/IwMemory.h"
void IwMemBucketCreate(uint32 bucketID, const char* name, uint32 size);
# 93 "c:/marmalade/7.3/modules/iwutil/h/IwMemory.h"
void IwMemBucketRegister(uint32 bucketID, const char* name, CIwMemBucket* bucket, void* data=__null);







void IwMemBucketFree(uint32 bucketID);







void IwMemBucketSet(uint32 bucketID);







uint32 IwMemBucketGetID();
# 127 "c:/marmalade/7.3/modules/iwutil/h/IwMemory.h"
int32 IwMemBucketGetFreeID(uint32 afterID = 0);







CIwMemBucket* IwMemBucketGet();







void IwMemBucketPush(uint32 bucketID);






void IwMemBucketPop();
# 172 "c:/marmalade/7.3/modules/iwutil/h/IwMemory.h"
void IwMemBucketSetAllocFailBehaviour(IwMemBucketAllocFailBehaviour behaviour);
# 182 "c:/marmalade/7.3/modules/iwutil/h/IwMemory.h"
IwMemBucketAllocFailBehaviour IwMemBucketGetAllocFailBehaviour();
# 199 "c:/marmalade/7.3/modules/iwutil/h/IwMemory.h"
uint32 IwMemBucketCheckpoint();







uint32 IwMemBucketDebugGetID(void* item);
# 219 "c:/marmalade/7.3/modules/iwutil/h/IwMemory.h"
uint32 IwMemBucketDebugCheck(uint32 bucketID, uint32 checkpoint, const char* filename);







void IwMemBucketVisualDump(const char* filename, int32 bucketID = -1);






typedef enum IwMemBucketDebugFlag
{
    IW_MEM_BUCKET_LOCK_FREE = 1 << 0,
    IW_MEM_BUCKET_LOCK_ALLOC = 1 << 1,
    IW_MEM_BUCKET_LOCK_SELECT = 1 << 2,
    IW_MEM_BUCKET_TRACE = 1 << 3,
    IW_MEM_BUCKET_LOCK_REALLOC = 1 << 4,
    IW_MEM_BUCKET_REUSE_IDS_FOR_REALLOC = 1 << 5,
} IwMemBucketDebugFlag;
# 251 "c:/marmalade/7.3/modules/iwutil/h/IwMemory.h"
void IwMemBucketDebugSetFlags(uint32 bucketID, uint32 flags);
# 260 "c:/marmalade/7.3/modules/iwutil/h/IwMemory.h"
void IwMemBucketDebugClearFlags(uint32 bucketID, uint32 flags);
# 270 "c:/marmalade/7.3/modules/iwutil/h/IwMemory.h"
void IwMemBucketDebugSetBreakpoint(uint32 allocationID);
# 289 "c:/marmalade/7.3/modules/iwutil/h/IwMemory.h"
uint32 IwMemBucketGetFree(uint32 bucketID);
# 298 "c:/marmalade/7.3/modules/iwutil/h/IwMemory.h"
uint32 IwMemBucketGetLargestFreeBlock(uint32 bucketID);
# 308 "c:/marmalade/7.3/modules/iwutil/h/IwMemory.h"
uint32 IwMemBucketGetUsed(uint32 bucketID);

}







class CIwAutoBucketSwitch
{
public:
    CIwAutoBucketSwitch(int bucket) : m_RestoreBucket(IwMemBucketGetID())
    {
        IwMemBucketSet(bucket);
    }
    ~CIwAutoBucketSwitch()
    {
        IwMemBucketSet(m_RestoreBucket);
    }

private:
    int m_RestoreBucket;
};
# 31 "c:/marmalade/7.3/modules/iwutil/h/IwCopyingPtr.h" 2
# 1 "c:/Program Files (x86)/Android/android-ndk-r8e/sources/cxx-stl/gnu-libstdc++/4.4.3/include/new" 1
# 39 "c:/Program Files (x86)/Android/android-ndk-r8e/sources/cxx-stl/gnu-libstdc++/4.4.3/include/new"
# 1 "c:/Program Files (x86)/Android/android-ndk-r8e/sources/cxx-stl/gnu-libstdc++/4.4.3/include/cstddef" 1
# 41 "c:/Program Files (x86)/Android/android-ndk-r8e/sources/cxx-stl/gnu-libstdc++/4.4.3/include/cstddef"
       
# 42 "c:/Program Files (x86)/Android/android-ndk-r8e/sources/cxx-stl/gnu-libstdc++/4.4.3/include/cstddef" 3

# 1 "c:/Program Files (x86)/Android/android-ndk-r8e/sources/cxx-stl/gnu-libstdc++/4.4.3/libs/armeabi/include/bits/c++config.h" 1 3
# 243 "c:/Program Files (x86)/Android/android-ndk-r8e/sources/cxx-stl/gnu-libstdc++/4.4.3/libs/armeabi/include/bits/c++config.h" 3
# 1 "c:/Program Files (x86)/Android/android-ndk-r8e/sources/cxx-stl/gnu-libstdc++/4.4.3/libs/armeabi/include/bits/os_defines.h" 1 3
# 244 "c:/Program Files (x86)/Android/android-ndk-r8e/sources/cxx-stl/gnu-libstdc++/4.4.3/libs/armeabi/include/bits/c++config.h" 2 3


# 1 "c:/Program Files (x86)/Android/android-ndk-r8e/sources/cxx-stl/gnu-libstdc++/4.4.3/libs/armeabi/include/bits/cpu_defines.h" 1 3
# 247 "c:/Program Files (x86)/Android/android-ndk-r8e/sources/cxx-stl/gnu-libstdc++/4.4.3/libs/armeabi/include/bits/c++config.h" 2 3
# 44 "c:/Program Files (x86)/Android/android-ndk-r8e/sources/cxx-stl/gnu-libstdc++/4.4.3/include/cstddef" 2 3
# 1 "c:\\program files (x86)\\android\\android-ndk-r8e\\toolchains\\arm-linux-androideabi-4.7\\prebuilt\\windows-x86_64\\bin\\../lib/gcc/arm-linux-androideabi/4.7/include/stddef.h" 1 3 4
# 150 "c:\\program files (x86)\\android\\android-ndk-r8e\\toolchains\\arm-linux-androideabi-4.7\\prebuilt\\windows-x86_64\\bin\\../lib/gcc/arm-linux-androideabi/4.7/include/stddef.h" 3 4
typedef int ptrdiff_t;
# 213 "c:\\program files (x86)\\android\\android-ndk-r8e\\toolchains\\arm-linux-androideabi-4.7\\prebuilt\\windows-x86_64\\bin\\../lib/gcc/arm-linux-androideabi/4.7/include/stddef.h" 3 4
typedef unsigned int size_t;
# 45 "c:/Program Files (x86)/Android/android-ndk-r8e/sources/cxx-stl/gnu-libstdc++/4.4.3/include/cstddef" 2 3




namespace std __attribute__ ((__visibility__ ("default"))) {

  using ::ptrdiff_t;
  using ::size_t;

}
# 40 "c:/Program Files (x86)/Android/android-ndk-r8e/sources/cxx-stl/gnu-libstdc++/4.4.3/include/new" 2
# 1 "c:/Program Files (x86)/Android/android-ndk-r8e/sources/cxx-stl/gnu-libstdc++/4.4.3/include/exception" 1
# 35 "c:/Program Files (x86)/Android/android-ndk-r8e/sources/cxx-stl/gnu-libstdc++/4.4.3/include/exception"
#pragma GCC visibility push(default)



extern "C++" {

namespace std
{
# 59 "c:/Program Files (x86)/Android/android-ndk-r8e/sources/cxx-stl/gnu-libstdc++/4.4.3/include/exception"
  class exception
  {
  public:
    exception() throw() { }
    virtual ~exception() throw();



    virtual const char* what() const throw();
  };



  class bad_exception : public exception
  {
  public:
    bad_exception() throw() { }



    virtual ~bad_exception() throw();


    virtual const char* what() const throw();
  };


  typedef void (*terminate_handler) ();


  typedef void (*unexpected_handler) ();


  terminate_handler set_terminate(terminate_handler) throw();



  void terminate() __attribute__ ((__noreturn__));


  unexpected_handler set_unexpected(unexpected_handler) throw();



  void unexpected() __attribute__ ((__noreturn__));
# 115 "c:/Program Files (x86)/Android/android-ndk-r8e/sources/cxx-stl/gnu-libstdc++/4.4.3/include/exception"
  bool uncaught_exception() throw();


}

namespace __gnu_cxx __attribute__ ((__visibility__ ("default"))) {
# 138 "c:/Program Files (x86)/Android/android-ndk-r8e/sources/cxx-stl/gnu-libstdc++/4.4.3/include/exception"
  void __verbose_terminate_handler();

}

}

#pragma GCC visibility pop
# 41 "c:/Program Files (x86)/Android/android-ndk-r8e/sources/cxx-stl/gnu-libstdc++/4.4.3/include/new" 2

#pragma GCC visibility push(default)

extern "C++" {

namespace std
{






  class bad_alloc : public exception
  {
  public:
    bad_alloc() throw() { }



    virtual ~bad_alloc() throw();


    virtual const char* what() const throw();
  };

  struct nothrow_t { };

  extern const nothrow_t nothrow;



  typedef void (*new_handler)();



  new_handler set_new_handler(new_handler) throw();
}
# 91 "c:/Program Files (x86)/Android/android-ndk-r8e/sources/cxx-stl/gnu-libstdc++/4.4.3/include/new"
void* operator new(std::size_t) throw (std::bad_alloc);
void* operator new[](std::size_t) throw (std::bad_alloc);
void operator delete(void*) throw();
void operator delete[](void*) throw();
void* operator new(std::size_t, const std::nothrow_t&) throw();
void* operator new[](std::size_t, const std::nothrow_t&) throw();
void operator delete(void*, const std::nothrow_t&) throw();
void operator delete[](void*, const std::nothrow_t&) throw();


inline void* operator new(std::size_t, void* __p) throw() { return __p; }
inline void* operator new[](std::size_t, void* __p) throw() { return __p; }


inline void operator delete (void*, void*) throw() { }
inline void operator delete[](void*, void*) throw() { }

}

#pragma GCC visibility pop
# 32 "c:/marmalade/7.3/modules/iwutil/h/IwCopyingPtr.h" 2


template<class T>
class CIwStandardAllocator
{
public:
    static T* allocate(uint32 size)
    {
        return (T*)s3eMalloc(size);
    }

    static T* reallocate(T* p, uint32 size)
    {
        return (T*)s3eRealloc(p, size);
    }

    static void deallocate(T* p, uint32) { s3eFree(p); }
};


template <class Type, class Allocator = CIwStandardAllocator<Type> >
class CIwCopyingPtr
{
public:
    CIwCopyingPtr() : m_Ptr(__null) {}
    ~CIwCopyingPtr()
    {
        if( m_Ptr )
        {
            m_Ptr->~Type();
            Allocator::deallocate(m_Ptr, 1);
        }
        m_Ptr = __null;
    }




    CIwCopyingPtr(const CIwCopyingPtr& rhs)
    {
        if (rhs.m_Ptr)
        {
            m_Ptr = new (Allocator::allocate(sizeof(Type))) Type;
            *m_Ptr = *rhs.m_Ptr;
        }
        else
        {
            m_Ptr = __null;
        }
    }

    CIwCopyingPtr& operator=(const CIwCopyingPtr& rhs)
    {
        if( m_Ptr )
        {
            m_Ptr->~Type();
            Allocator::deallocate(m_Ptr, 1);
        }

        if (rhs.m_Ptr)
        {
            m_Ptr = new (Allocator::allocate(sizeof(Type))) Type;
            *m_Ptr = *rhs.m_Ptr;
        }
        else
        {
            m_Ptr = __null;
        }
        return *this;
    }




    CIwCopyingPtr& operator= (Type* pPtr)
    {
        if( m_Ptr )
        {
            m_Ptr->~Type();
            Allocator::deallocate(m_Ptr, 1);
        }
        m_Ptr = pPtr;
        return *this;
    }

    Type* operator->() const
    {
        return m_Ptr;
    }

    Type& operator*() const
    {
        return *m_Ptr;
    }

    bool operator!= (Type* pPtr) const
    {
        return m_Ptr != pPtr;
    }


    void Release()
    {
        m_Ptr = __null;
    }

private:



    Type* m_Ptr;
};

template<class T>
class CIwDebugAllocator
{
public:
    static T* allocate(uint32 size)
    {




        T* alloc = (T*)s3eMalloc(size);




        return alloc;
    }

    static T* reallocate(T* p, uint32 size)
    {




        T* alloc = (T*)s3eRealloc(p, size);




        return alloc;
    }


    static void deallocate(T* p, uint32) { s3eFree(p); }
};
# 18 "c:/marmalade/7.3/modules/iwutil/h/IwUtil.h" 2
# 1 "c:/marmalade/7.3/modules/iwutil/h/IwDivTable.h" 1
       
# 130 "c:/marmalade/7.3/modules/iwutil/h/IwDivTable.h"
# 1 "c:/marmalade/7.3/modules/iwutil/h/IwDivide.h" 1
# 78 "c:/marmalade/7.3/modules/iwutil/h/IwDivide.h"
static inline uint64 i3d_uldiv_split(uint32 toplo, uint32 tophi, uint32 bottom)
{
    unsigned accumhi = 0;
    unsigned accumlo = 0;


    int i=31;




    if(tophi & 0xffff0000)
        i -= 16;
    if(tophi==0)
        i=0;

    for (; i>=0; i--)
    {
        accumhi = accumhi << 1;

        if ((tophi>>(i)) >= (bottom))
        {
            accumhi++;


            tophi = tophi - (bottom<<i);
        }
    }
# 125 "c:/marmalade/7.3/modules/iwutil/h/IwDivide.h"
    if (tophi==0) goto fast_bit32;

    accumlo = accumlo << 1; if ((toplo>>31)+(tophi<<(32-31)) >= (bottom) || (tophi>>31)!=0) { accumlo++; if ((bottom<<31) > toplo) tophi--; toplo = toplo - (bottom<<31); tophi = tophi - (bottom>>(32-31)); if (!tophi) goto fast_bit31; }
    accumlo = accumlo << 1; if ((toplo>>30)+(tophi<<(32-30)) >= (bottom) || (tophi>>30)!=0) { accumlo++; if ((bottom<<30) > toplo) tophi--; toplo = toplo - (bottom<<30); tophi = tophi - (bottom>>(32-30)); if (!tophi) goto fast_bit30; }
    accumlo = accumlo << 1; if ((toplo>>29)+(tophi<<(32-29)) >= (bottom) || (tophi>>29)!=0) { accumlo++; if ((bottom<<29) > toplo) tophi--; toplo = toplo - (bottom<<29); tophi = tophi - (bottom>>(32-29)); if (!tophi) goto fast_bit29; }
    accumlo = accumlo << 1; if ((toplo>>28)+(tophi<<(32-28)) >= (bottom) || (tophi>>28)!=0) { accumlo++; if ((bottom<<28) > toplo) tophi--; toplo = toplo - (bottom<<28); tophi = tophi - (bottom>>(32-28)); if (!tophi) goto fast_bit28; }
    accumlo = accumlo << 1; if ((toplo>>27)+(tophi<<(32-27)) >= (bottom) || (tophi>>27)!=0) { accumlo++; if ((bottom<<27) > toplo) tophi--; toplo = toplo - (bottom<<27); tophi = tophi - (bottom>>(32-27)); if (!tophi) goto fast_bit27; }
    accumlo = accumlo << 1; if ((toplo>>26)+(tophi<<(32-26)) >= (bottom) || (tophi>>26)!=0) { accumlo++; if ((bottom<<26) > toplo) tophi--; toplo = toplo - (bottom<<26); tophi = tophi - (bottom>>(32-26)); if (!tophi) goto fast_bit26; }
    accumlo = accumlo << 1; if ((toplo>>25)+(tophi<<(32-25)) >= (bottom) || (tophi>>25)!=0) { accumlo++; if ((bottom<<25) > toplo) tophi--; toplo = toplo - (bottom<<25); tophi = tophi - (bottom>>(32-25)); if (!tophi) goto fast_bit25; }
    accumlo = accumlo << 1; if ((toplo>>24)+(tophi<<(32-24)) >= (bottom) || (tophi>>24)!=0) { accumlo++; if ((bottom<<24) > toplo) tophi--; toplo = toplo - (bottom<<24); tophi = tophi - (bottom>>(32-24)); if (!tophi) goto fast_bit24; }
    accumlo = accumlo << 1; if ((toplo>>23)+(tophi<<(32-23)) >= (bottom) || (tophi>>23)!=0) { accumlo++; if ((bottom<<23) > toplo) tophi--; toplo = toplo - (bottom<<23); tophi = tophi - (bottom>>(32-23)); if (!tophi) goto fast_bit23; }
    accumlo = accumlo << 1; if ((toplo>>22)+(tophi<<(32-22)) >= (bottom) || (tophi>>22)!=0) { accumlo++; if ((bottom<<22) > toplo) tophi--; toplo = toplo - (bottom<<22); tophi = tophi - (bottom>>(32-22)); if (!tophi) goto fast_bit22; }
    accumlo = accumlo << 1; if ((toplo>>21)+(tophi<<(32-21)) >= (bottom) || (tophi>>21)!=0) { accumlo++; if ((bottom<<21) > toplo) tophi--; toplo = toplo - (bottom<<21); tophi = tophi - (bottom>>(32-21)); if (!tophi) goto fast_bit21; }
    accumlo = accumlo << 1; if ((toplo>>20)+(tophi<<(32-20)) >= (bottom) || (tophi>>20)!=0) { accumlo++; if ((bottom<<20) > toplo) tophi--; toplo = toplo - (bottom<<20); tophi = tophi - (bottom>>(32-20)); if (!tophi) goto fast_bit20; }
    accumlo = accumlo << 1; if ((toplo>>19)+(tophi<<(32-19)) >= (bottom) || (tophi>>19)!=0) { accumlo++; if ((bottom<<19) > toplo) tophi--; toplo = toplo - (bottom<<19); tophi = tophi - (bottom>>(32-19)); if (!tophi) goto fast_bit19; }
    accumlo = accumlo << 1; if ((toplo>>18)+(tophi<<(32-18)) >= (bottom) || (tophi>>18)!=0) { accumlo++; if ((bottom<<18) > toplo) tophi--; toplo = toplo - (bottom<<18); tophi = tophi - (bottom>>(32-18)); if (!tophi) goto fast_bit18; }
    accumlo = accumlo << 1; if ((toplo>>17)+(tophi<<(32-17)) >= (bottom) || (tophi>>17)!=0) { accumlo++; if ((bottom<<17) > toplo) tophi--; toplo = toplo - (bottom<<17); tophi = tophi - (bottom>>(32-17)); if (!tophi) goto fast_bit17; }
    accumlo = accumlo << 1; if ((toplo>>16)+(tophi<<(32-16)) >= (bottom) || (tophi>>16)!=0) { accumlo++; if ((bottom<<16) > toplo) tophi--; toplo = toplo - (bottom<<16); tophi = tophi - (bottom>>(32-16)); if (!tophi) goto fast_bit16; }
    accumlo = accumlo << 1; if ((toplo>>15)+(tophi<<(32-15)) >= (bottom) || (tophi>>15)!=0) { accumlo++; if ((bottom<<15) > toplo) tophi--; toplo = toplo - (bottom<<15); tophi = tophi - (bottom>>(32-15)); if (!tophi) goto fast_bit15; }
    accumlo = accumlo << 1; if ((toplo>>14)+(tophi<<(32-14)) >= (bottom) || (tophi>>14)!=0) { accumlo++; if ((bottom<<14) > toplo) tophi--; toplo = toplo - (bottom<<14); tophi = tophi - (bottom>>(32-14)); if (!tophi) goto fast_bit14; }
    accumlo = accumlo << 1; if ((toplo>>13)+(tophi<<(32-13)) >= (bottom) || (tophi>>13)!=0) { accumlo++; if ((bottom<<13) > toplo) tophi--; toplo = toplo - (bottom<<13); tophi = tophi - (bottom>>(32-13)); if (!tophi) goto fast_bit13; }
    accumlo = accumlo << 1; if ((toplo>>12)+(tophi<<(32-12)) >= (bottom) || (tophi>>12)!=0) { accumlo++; if ((bottom<<12) > toplo) tophi--; toplo = toplo - (bottom<<12); tophi = tophi - (bottom>>(32-12)); if (!tophi) goto fast_bit12; }
    accumlo = accumlo << 1; if ((toplo>>11)+(tophi<<(32-11)) >= (bottom) || (tophi>>11)!=0) { accumlo++; if ((bottom<<11) > toplo) tophi--; toplo = toplo - (bottom<<11); tophi = tophi - (bottom>>(32-11)); if (!tophi) goto fast_bit11; }
    accumlo = accumlo << 1; if ((toplo>>10)+(tophi<<(32-10)) >= (bottom) || (tophi>>10)!=0) { accumlo++; if ((bottom<<10) > toplo) tophi--; toplo = toplo - (bottom<<10); tophi = tophi - (bottom>>(32-10)); if (!tophi) goto fast_bit10; }
    accumlo = accumlo << 1; if ((toplo>>9)+(tophi<<(32-9)) >= (bottom) || (tophi>>9)!=0) { accumlo++; if ((bottom<<9) > toplo) tophi--; toplo = toplo - (bottom<<9); tophi = tophi - (bottom>>(32-9)); if (!tophi) goto fast_bit9; }
    accumlo = accumlo << 1; if ((toplo>>8)+(tophi<<(32-8)) >= (bottom) || (tophi>>8)!=0) { accumlo++; if ((bottom<<8) > toplo) tophi--; toplo = toplo - (bottom<<8); tophi = tophi - (bottom>>(32-8)); if (!tophi) goto fast_bit8; }
    accumlo = accumlo << 1; if ((toplo>>7)+(tophi<<(32-7)) >= (bottom) || (tophi>>7)!=0) { accumlo++; if ((bottom<<7) > toplo) tophi--; toplo = toplo - (bottom<<7); tophi = tophi - (bottom>>(32-7)); if (!tophi) goto fast_bit7; }
    accumlo = accumlo << 1; if ((toplo>>6)+(tophi<<(32-6)) >= (bottom) || (tophi>>6)!=0) { accumlo++; if ((bottom<<6) > toplo) tophi--; toplo = toplo - (bottom<<6); tophi = tophi - (bottom>>(32-6)); if (!tophi) goto fast_bit6; }
    accumlo = accumlo << 1; if ((toplo>>5)+(tophi<<(32-5)) >= (bottom) || (tophi>>5)!=0) { accumlo++; if ((bottom<<5) > toplo) tophi--; toplo = toplo - (bottom<<5); tophi = tophi - (bottom>>(32-5)); if (!tophi) goto fast_bit5; }
    accumlo = accumlo << 1; if ((toplo>>4)+(tophi<<(32-4)) >= (bottom) || (tophi>>4)!=0) { accumlo++; if ((bottom<<4) > toplo) tophi--; toplo = toplo - (bottom<<4); tophi = tophi - (bottom>>(32-4)); if (!tophi) goto fast_bit4; }
    accumlo = accumlo << 1; if ((toplo>>3)+(tophi<<(32-3)) >= (bottom) || (tophi>>3)!=0) { accumlo++; if ((bottom<<3) > toplo) tophi--; toplo = toplo - (bottom<<3); tophi = tophi - (bottom>>(32-3)); if (!tophi) goto fast_bit3; }
    accumlo = accumlo << 1; if ((toplo>>2)+(tophi<<(32-2)) >= (bottom) || (tophi>>2)!=0) { accumlo++; if ((bottom<<2) > toplo) tophi--; toplo = toplo - (bottom<<2); tophi = tophi - (bottom>>(32-2)); if (!tophi) goto fast_bit2; }
    accumlo = accumlo << 1; if ((toplo>>1)+(tophi<<(32-1)) >= (bottom) || (tophi>>1)!=0) { accumlo++; if ((bottom<<1) > toplo) tophi--; toplo = toplo - (bottom<<1); tophi = tophi - (bottom>>(32-1)); if (!tophi) goto fast_bit1; }
    accumlo = accumlo << 1; if ((toplo>>0) >= (bottom)) { accumlo++; toplo = toplo - (bottom<<0); }

    return (uint64)accumlo | ((uint64)accumhi)<<32;

fast_bit32:
    accumlo = accumlo << 1; if ((toplo>>31) >= (bottom)) { accumlo++; toplo = toplo - (bottom<<31); } fast_bit31:
    accumlo = accumlo << 1; if ((toplo>>30) >= (bottom)) { accumlo++; toplo = toplo - (bottom<<30); } fast_bit30:
    accumlo = accumlo << 1; if ((toplo>>29) >= (bottom)) { accumlo++; toplo = toplo - (bottom<<29); } fast_bit29:
    accumlo = accumlo << 1; if ((toplo>>28) >= (bottom)) { accumlo++; toplo = toplo - (bottom<<28); } fast_bit28:
    accumlo = accumlo << 1; if ((toplo>>27) >= (bottom)) { accumlo++; toplo = toplo - (bottom<<27); } fast_bit27:
    accumlo = accumlo << 1; if ((toplo>>26) >= (bottom)) { accumlo++; toplo = toplo - (bottom<<26); } fast_bit26:
    accumlo = accumlo << 1; if ((toplo>>25) >= (bottom)) { accumlo++; toplo = toplo - (bottom<<25); } fast_bit25:
    accumlo = accumlo << 1; if ((toplo>>24) >= (bottom)) { accumlo++; toplo = toplo - (bottom<<24); } fast_bit24:
    accumlo = accumlo << 1; if ((toplo>>23) >= (bottom)) { accumlo++; toplo = toplo - (bottom<<23); } fast_bit23:
    accumlo = accumlo << 1; if ((toplo>>22) >= (bottom)) { accumlo++; toplo = toplo - (bottom<<22); } fast_bit22:
    accumlo = accumlo << 1; if ((toplo>>21) >= (bottom)) { accumlo++; toplo = toplo - (bottom<<21); } fast_bit21:
    accumlo = accumlo << 1; if ((toplo>>20) >= (bottom)) { accumlo++; toplo = toplo - (bottom<<20); } fast_bit20:
    accumlo = accumlo << 1; if ((toplo>>19) >= (bottom)) { accumlo++; toplo = toplo - (bottom<<19); } fast_bit19:
    accumlo = accumlo << 1; if ((toplo>>18) >= (bottom)) { accumlo++; toplo = toplo - (bottom<<18); } fast_bit18:
    accumlo = accumlo << 1; if ((toplo>>17) >= (bottom)) { accumlo++; toplo = toplo - (bottom<<17); } fast_bit17:
    accumlo = accumlo << 1; if ((toplo>>16) >= (bottom)) { accumlo++; toplo = toplo - (bottom<<16); } fast_bit16:
    accumlo = accumlo << 1; if ((toplo>>15) >= (bottom)) { accumlo++; toplo = toplo - (bottom<<15); } fast_bit15:
    accumlo = accumlo << 1; if ((toplo>>14) >= (bottom)) { accumlo++; toplo = toplo - (bottom<<14); } fast_bit14:
    accumlo = accumlo << 1; if ((toplo>>13) >= (bottom)) { accumlo++; toplo = toplo - (bottom<<13); } fast_bit13:
    accumlo = accumlo << 1; if ((toplo>>12) >= (bottom)) { accumlo++; toplo = toplo - (bottom<<12); } fast_bit12:
    accumlo = accumlo << 1; if ((toplo>>11) >= (bottom)) { accumlo++; toplo = toplo - (bottom<<11); } fast_bit11:
    accumlo = accumlo << 1; if ((toplo>>10) >= (bottom)) { accumlo++; toplo = toplo - (bottom<<10); } fast_bit10:
    accumlo = accumlo << 1; if ((toplo>>9) >= (bottom)) { accumlo++; toplo = toplo - (bottom<<9); } fast_bit9:
    accumlo = accumlo << 1; if ((toplo>>8) >= (bottom)) { accumlo++; toplo = toplo - (bottom<<8); } fast_bit8:
    accumlo = accumlo << 1; if ((toplo>>7) >= (bottom)) { accumlo++; toplo = toplo - (bottom<<7); } fast_bit7:
    accumlo = accumlo << 1; if ((toplo>>6) >= (bottom)) { accumlo++; toplo = toplo - (bottom<<6); } fast_bit6:
    accumlo = accumlo << 1; if ((toplo>>5) >= (bottom)) { accumlo++; toplo = toplo - (bottom<<5); } fast_bit5:
    accumlo = accumlo << 1; if ((toplo>>4) >= (bottom)) { accumlo++; toplo = toplo - (bottom<<4); } fast_bit4:
    accumlo = accumlo << 1; if ((toplo>>3) >= (bottom)) { accumlo++; toplo = toplo - (bottom<<3); } fast_bit3:
    accumlo = accumlo << 1; if ((toplo>>2) >= (bottom)) { accumlo++; toplo = toplo - (bottom<<2); } fast_bit2:
    accumlo = accumlo << 1; if ((toplo>>1) >= (bottom)) { accumlo++; toplo = toplo - (bottom<<1); } fast_bit1:
    accumlo = accumlo << 1; if ((toplo>>0) >= (bottom)) { accumlo++; toplo = toplo - (bottom<<0); }
# 224 "c:/marmalade/7.3/modules/iwutil/h/IwDivide.h"
    return (uint64)accumlo | ((uint64)accumhi)<<32;
}

static inline uint64 i3d_ldiv_split(uint32 toplo, int32 tophi, int32 bottom)
{
    if(tophi<0) {
        if(bottom>0)
            return -(int64)i3d_uldiv_split(toplo, -tophi, bottom);
        else
            return i3d_uldiv_split(toplo, -tophi, -bottom);
    }
    else {
        if(bottom<0)
            return i3d_uldiv_split(toplo, tophi, -bottom);
        else
            return i3d_uldiv_split(toplo, tophi, bottom);
    }
}

static inline uint64 i3d_uldiv(uint64 udividend, uint32 udivisor)
{
    return i3d_uldiv_split((uint32)(udividend&0xffffffff), (uint32)(udividend>>32), udivisor);
}





static inline int64 i3d_ldiv(int64 dividend,
                    int32 divisor)
{
    if(dividend<0) {
        if(divisor>0)
            return -(int64)i3d_uldiv(-dividend,divisor);
        else
            return i3d_uldiv(-dividend,-divisor);
    }
    else {
        if(divisor<0)
            return -(int64)i3d_uldiv(dividend,-divisor);
        else
            return i3d_uldiv(dividend,divisor);
    }
}
# 293 "c:/marmalade/7.3/modules/iwutil/h/IwDivide.h"
static inline int32 i3d_lmod(int64 dividend, int32 divisor)
{
        return (int32)(dividend - (((int64)(((int64)(dividend))/((int32)(divisor)))) * divisor));
}
# 131 "c:/marmalade/7.3/modules/iwutil/h/IwDivTable.h" 2
# 19 "c:/marmalade/7.3/modules/iwutil/h/IwUtil.h" 2
# 1 "c:/marmalade/7.3/modules/iwutil/h/IwEvent.h" 1
       
# 26 "c:/marmalade/7.3/modules/iwutil/h/IwEvent.h"
# 1 "c:/marmalade/7.3/modules/iwutil/h/IwManaged.h" 1
       
# 17 "c:/marmalade/7.3/modules/iwutil/h/IwManaged.h"
# 1 "c:/marmalade/7.3/modules/iwutil/h/IwArray.h" 1
# 36 "c:/marmalade/7.3/modules/iwutil/h/IwArray.h"
# 1 "c:/marmalade/7.3/modules/iwutil/h/IwDebug.h" 1
# 16 "c:/marmalade/7.3/modules/iwutil/h/IwDebug.h"
# 1 "c:/marmalade/7.3/s3e/h/s3eDebug.h" 1
# 17 "c:/marmalade/7.3/modules/iwutil/h/IwDebug.h" 2
# 1 "c:/marmalade/7.3/s3e/h/s3eDevice.h" 1
# 18 "c:/marmalade/7.3/modules/iwutil/h/IwDebug.h" 2
# 1 "c:/marmalade/7.3/modules/iwutil/h/IwCore.h" 1
# 19 "c:/marmalade/7.3/modules/iwutil/h/IwDebug.h" 2



# 1 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/stdio.h" 1
# 41 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/stdio.h"
# 1 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/sys/cdefs.h" 1
# 59 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/sys/cdefs.h"
# 1 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/sys/cdefs_elf.h" 1
# 60 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/sys/cdefs.h" 2
# 500 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/sys/cdefs.h"
# 1 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/android/api-level.h" 1
# 501 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/sys/cdefs.h" 2
# 42 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/stdio.h" 2
# 1 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/sys/types.h" 1
# 33 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/sys/types.h"
# 1 "c:\\program files (x86)\\android\\android-ndk-r8e\\toolchains\\arm-linux-androideabi-4.7\\prebuilt\\windows-x86_64\\bin\\../lib/gcc/arm-linux-androideabi/4.7/include/stddef.h" 1 3 4
# 34 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/sys/types.h" 2
# 1 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/stdint.h" 1
# 31 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/stdint.h"
# 1 "c:\\program files (x86)\\android\\android-ndk-r8e\\toolchains\\arm-linux-androideabi-4.7\\prebuilt\\windows-x86_64\\bin\\../lib/gcc/arm-linux-androideabi/4.7/include/stddef.h" 1 3 4
# 32 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/stdint.h" 2
# 1 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/sys/_types.h" 1
# 40 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/sys/_types.h"
# 1 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/machine/_types.h" 1
# 39 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/machine/_types.h"
typedef signed char __int8_t;
typedef unsigned char __uint8_t;
typedef short __int16_t;
typedef unsigned short __uint16_t;
typedef int __int32_t;
typedef unsigned int __uint32_t;

typedef long long __int64_t;

typedef unsigned long long __uint64_t;


typedef __int8_t __int_least8_t;
typedef __uint8_t __uint_least8_t;
typedef __int16_t __int_least16_t;
typedef __uint16_t __uint_least16_t;
typedef __int32_t __int_least32_t;
typedef __uint32_t __uint_least32_t;
typedef __int64_t __int_least64_t;
typedef __uint64_t __uint_least64_t;


typedef __int32_t __int_fast8_t;
typedef __uint32_t __uint_fast8_t;
typedef __int32_t __int_fast16_t;
typedef __uint32_t __uint_fast16_t;
typedef __int32_t __int_fast32_t;
typedef __uint32_t __uint_fast32_t;
typedef __int64_t __int_fast64_t;
typedef __uint64_t __uint_fast64_t;


typedef int __intptr_t;
typedef unsigned int __uintptr_t;


typedef __int64_t __intmax_t;
typedef __uint64_t __uintmax_t;


typedef __int32_t __register_t;


typedef unsigned long __vaddr_t;
typedef unsigned long __paddr_t;
typedef unsigned long __vsize_t;
typedef unsigned long __psize_t;


typedef int __clock_t;
typedef int __clockid_t;
typedef long __ptrdiff_t;
typedef int __time_t;
typedef int __timer_t;

typedef __builtin_va_list __va_list;
# 103 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/machine/_types.h"
typedef int __wint_t;
typedef int __rune_t;
typedef void * __wctrans_t;
typedef void * __wctype_t;
# 41 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/sys/_types.h" 2

typedef unsigned long __cpuid_t;
typedef __int32_t __dev_t;
typedef __uint32_t __fixpt_t;
typedef __uint32_t __gid_t;
typedef __uint32_t __id_t;
typedef __uint32_t __in_addr_t;
typedef __uint16_t __in_port_t;
typedef __uint32_t __ino_t;
typedef long __key_t;
typedef __uint32_t __mode_t;
typedef __uint32_t __nlink_t;
typedef __int32_t __pid_t;
typedef __uint64_t __rlim_t;
typedef __uint16_t __sa_family_t;
typedef __int32_t __segsz_t;
typedef __uint32_t __socklen_t;
typedef __int32_t __swblk_t;
typedef __uint32_t __uid_t;
typedef __uint32_t __useconds_t;
typedef __int32_t __suseconds_t;





typedef union {
 char __mbstate8[128];
 __int64_t __mbstateL;
} __mbstate_t;
# 33 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/stdint.h" 2
# 42 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/stdint.h"
typedef __int8_t int8_t;
typedef __uint8_t uint8_t;
typedef __int16_t int16_t;
typedef __uint16_t uint16_t;
typedef __int32_t int32_t;
typedef __uint32_t uint32_t;
typedef __int64_t int64_t;
typedef __uint64_t uint64_t;





typedef int8_t int_least8_t;
typedef int8_t int_fast8_t;

typedef uint8_t uint_least8_t;
typedef uint8_t uint_fast8_t;
# 88 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/stdint.h"
typedef int16_t int_least16_t;
typedef int32_t int_fast16_t;

typedef uint16_t uint_least16_t;
typedef uint32_t uint_fast16_t;
# 121 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/stdint.h"
typedef int32_t int_least32_t;
typedef int32_t int_fast32_t;

typedef uint32_t uint_least32_t;
typedef uint32_t uint_fast32_t;
# 154 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/stdint.h"
typedef int64_t int_least64_t;
typedef int64_t int_fast64_t;

typedef uint64_t uint_least64_t;
typedef uint64_t uint_fast64_t;
# 194 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/stdint.h"
typedef int intptr_t;
typedef unsigned int uintptr_t;
# 215 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/stdint.h"
typedef uint64_t uintmax_t;
typedef int64_t intmax_t;
# 35 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/sys/types.h" 2


# 1 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/linux/posix_types.h" 1
# 15 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/linux/posix_types.h"
# 1 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/linux/stddef.h" 1
# 21 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/linux/stddef.h"
# 1 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/linux/compiler.h" 1
# 22 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/linux/stddef.h" 2
# 16 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/linux/posix_types.h" 2
# 32 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/linux/posix_types.h"
typedef struct {
 unsigned long fds_bits [(1024/(8 * sizeof(unsigned long)))];
} __kernel_fd_set;

typedef void (*__kernel_sighandler_t)(int);

typedef int __kernel_key_t;
typedef int __kernel_mqd_t;

# 1 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/asm/posix_types.h" 1
# 15 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/asm/posix_types.h"
typedef unsigned long __kernel_ino_t;
typedef unsigned short __kernel_mode_t;
typedef unsigned short __kernel_nlink_t;
typedef long __kernel_off_t;
typedef int __kernel_pid_t;
typedef unsigned short __kernel_ipc_pid_t;
typedef unsigned short __kernel_uid_t;
typedef unsigned short __kernel_gid_t;
typedef unsigned int __kernel_size_t;
typedef int __kernel_ssize_t;
typedef int __kernel_ptrdiff_t;
typedef long __kernel_time_t;
typedef long __kernel_suseconds_t;
typedef long __kernel_clock_t;
typedef int __kernel_timer_t;
typedef int __kernel_clockid_t;
typedef int __kernel_daddr_t;
typedef char * __kernel_caddr_t;
typedef unsigned short __kernel_uid16_t;
typedef unsigned short __kernel_gid16_t;
typedef unsigned int __kernel_uid32_t;
typedef unsigned int __kernel_gid32_t;

typedef unsigned short __kernel_old_uid_t;
typedef unsigned short __kernel_old_gid_t;
typedef unsigned short __kernel_old_dev_t;


typedef long long __kernel_loff_t;


typedef struct {



 int __val[2];

} __kernel_fsid_t;
# 42 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/linux/posix_types.h" 2
# 38 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/sys/types.h" 2
# 1 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/asm/types.h" 1
# 17 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/asm/types.h"
typedef unsigned short umode_t;

typedef __signed__ char __s8;
typedef unsigned char __u8;

typedef __signed__ short __s16;
typedef unsigned short __u16;

typedef __signed__ int __s32;
typedef unsigned int __u32;


typedef __signed__ long long __s64;
typedef unsigned long long __u64;
# 39 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/sys/types.h" 2
# 1 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/linux/types.h" 1
# 21 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/linux/types.h"
typedef __u16 __le16;
typedef __u16 __be16;
typedef __u32 __le32;
typedef __u32 __be32;

typedef __u64 __le64;
typedef __u64 __be64;


struct ustat {
 __kernel_daddr_t f_tfree;
 __kernel_ino_t f_tinode;
 char f_fname[6];
 char f_fpack[6];
};
# 40 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/sys/types.h" 2
# 1 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/machine/kernel.h" 1
# 34 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/machine/kernel.h"
typedef unsigned long __kernel_blkcnt_t;
typedef unsigned long __kernel_blksize_t;


typedef unsigned long __kernel_fsblkcnt_t;
typedef unsigned long __kernel_fsfilcnt_t;
typedef unsigned int __kernel_id_t;
# 41 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/sys/types.h" 2

typedef __u32 __kernel_dev_t;
# 52 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/sys/types.h"
typedef __kernel_blkcnt_t blkcnt_t;
typedef __kernel_blksize_t blksize_t;
typedef __kernel_clock_t clock_t;
typedef __kernel_clockid_t clockid_t;
typedef __kernel_dev_t dev_t;
typedef __kernel_fsblkcnt_t fsblkcnt_t;
typedef __kernel_fsfilcnt_t fsfilcnt_t;
typedef __kernel_gid32_t gid_t;
typedef __kernel_id_t id_t;
typedef __kernel_ino_t ino_t;
typedef __kernel_key_t key_t;
typedef __kernel_mode_t mode_t;
typedef __kernel_nlink_t nlink_t;


typedef __kernel_off_t off_t;

typedef __kernel_loff_t loff_t;
typedef loff_t off64_t;

typedef __kernel_pid_t pid_t;
# 90 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/sys/types.h"
typedef long int ssize_t;


typedef __kernel_suseconds_t suseconds_t;
typedef __kernel_time_t time_t;
typedef __kernel_uid32_t uid_t;
typedef signed long useconds_t;

typedef __kernel_daddr_t daddr_t;
typedef __kernel_timer_t timer_t;
typedef __kernel_mqd_t mqd_t;

typedef __kernel_caddr_t caddr_t;
typedef unsigned int uint_t;
typedef unsigned int uint;


# 1 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/sys/sysmacros.h" 1
# 36 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/sys/sysmacros.h"
static __inline__ int major(dev_t _dev)
{
  return (_dev >> 8) & 0xfff;
}

static __inline__ int minor(dev_t _dev)
{
  return (_dev & 0xff) | ((_dev >> 12) & 0xfff00);
}

static __inline__ dev_t makedev(int __ma, int __mi)
{
  return ((__ma & 0xfff) << 8) | (__mi & 0xff) | ((__mi & 0xfff00) << 12);
}
# 108 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/sys/types.h" 2


typedef unsigned char u_char;
typedef unsigned short u_short;
typedef unsigned int u_int;
typedef unsigned long u_long;

typedef uint32_t u_int32_t;
typedef uint16_t u_int16_t;
typedef uint8_t u_int8_t;
typedef uint64_t u_int64_t;
# 43 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/stdio.h" 2







# 1 "c:\\program files (x86)\\android\\android-ndk-r8e\\toolchains\\arm-linux-androideabi-4.7\\prebuilt\\windows-x86_64\\bin\\../lib/gcc/arm-linux-androideabi/4.7/include/stddef.h" 1 3 4
# 51 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/stdio.h" 2


# 1 "c:\\program files (x86)\\android\\android-ndk-r8e\\toolchains\\arm-linux-androideabi-4.7\\prebuilt\\windows-x86_64\\bin\\../lib/gcc/arm-linux-androideabi/4.7/include/stddef.h" 1 3 4
# 54 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/stdio.h" 2



typedef off_t fpos_t;
# 66 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/stdio.h"
struct __sbuf {
 unsigned char *_base;
 int _size;
};
# 98 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/stdio.h"
typedef struct __sFILE {
 unsigned char *_p;
 int _r;
 int _w;
 short _flags;
 short _file;
 struct __sbuf _bf;
 int _lbfsize;


 void *_cookie;
 int (*_close)(void *);
 int (*_read)(void *, char *, int);
 fpos_t (*_seek)(void *, fpos_t, int);
 int (*_write)(void *, const char *, int);


 struct __sbuf _ext;

 unsigned char *_up;
 int _ur;


 unsigned char _ubuf[3];
 unsigned char _nbuf[1];


 struct __sbuf _lb;


 int _blksize;
 fpos_t _offset;
} FILE;

extern "C" {
extern FILE __sF[];
}
# 202 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/stdio.h"
extern "C" {
void clearerr(FILE *);
int fclose(FILE *);
int feof(FILE *);
int ferror(FILE *);
int fflush(FILE *);
int fgetc(FILE *);
int fgetpos(FILE *, fpos_t *);
char *fgets(char *, int, FILE *);
FILE *fopen(const char *, const char *);
int fprintf(FILE *, const char *, ...);
int fputc(int, FILE *);
int fputs(const char *, FILE *);
size_t fread(void *, size_t, size_t, FILE *);
FILE *freopen(const char *, const char *, FILE *);
int fscanf(FILE *, const char *, ...);
int fseek(FILE *, long, int);
int fseeko(FILE *, off_t, int);
int fsetpos(FILE *, const fpos_t *);
long ftell(FILE *);
off_t ftello(FILE *);
size_t fwrite(const void *, size_t, size_t, FILE *);
int getc(FILE *);
int getchar(void);
char *gets(char *);



extern int sys_nerr;
extern char *sys_errlist[];

void perror(const char *);
int printf(const char *, ...);
int putc(int, FILE *);
int putchar(int);
int puts(const char *);
int remove(const char *);
int rename(const char *, const char *);
void rewind(FILE *);
int scanf(const char *, ...);
void setbuf(FILE *, char *);
int setvbuf(FILE *, char *, int, size_t);
int sprintf(char *, const char *, ...);
int sscanf(const char *, const char *, ...);
FILE *tmpfile(void);
char *tmpnam(char *);
int ungetc(int, FILE *);
int vfprintf(FILE *, const char *, __va_list);
int vprintf(const char *, __va_list);
int vsprintf(char *, const char *, __va_list);


int snprintf(char *, size_t, const char *, ...)
  __attribute__((__format__ (printf, 3, 4)))
  __attribute__((__nonnull__ (3)));
int vfscanf(FILE *, const char *, __va_list)
  __attribute__((__format__ (scanf, 2, 0)))
  __attribute__((__nonnull__ (2)));
int vscanf(const char *, __va_list)
  __attribute__((__format__ (scanf, 1, 0)))
  __attribute__((__nonnull__ (1)));
int vsnprintf(char *, size_t, const char *, __va_list)
  __attribute__((__format__ (printf, 3, 0)))
  __attribute__((__nonnull__ (3)));
int vsscanf(const char *, const char *, __va_list)
  __attribute__((__format__ (scanf, 2, 0)))
  __attribute__((__nonnull__ (2)));


}
# 281 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/stdio.h"
extern "C" {




FILE *fdopen(int, const char *);
int fileno(FILE *);


int pclose(FILE *);
FILE *popen(const char *, const char *);



void flockfile(FILE *);
int ftrylockfile(FILE *);
void funlockfile(FILE *);





int getc_unlocked(FILE *);
int getchar_unlocked(void);
int putc_unlocked(int, FILE *);
int putchar_unlocked(int);



char *tempnam(const char *, const char *);

}







extern "C" {
int asprintf(char **, const char *, ...)
  __attribute__((__format__ (printf, 2, 3)))
  __attribute__((__nonnull__ (2)));
char *fgetln(FILE *, size_t *);
int fpurge(FILE *);
int getw(FILE *);
int putw(int, FILE *);
void setbuffer(FILE *, char *, int);
int setlinebuf(FILE *);
int vasprintf(char **, const char *, __va_list)
  __attribute__((__format__ (printf, 2, 0)))
  __attribute__((__nonnull__ (2)));
}




extern "C" {
FILE *funopen(const void *,
  int (*)(void *, char *, int),
  int (*)(void *, const char *, int),
  fpos_t (*)(void *, fpos_t, int),
  int (*)(void *));
}







extern "C" {
int __srget(FILE *);
int __swbuf(int, FILE *);
}







static inline int __sputc(int _c, FILE *_p) {
 if (--_p->_w >= 0 || (_p->_w >= _p->_lbfsize && (char)_c != '\n'))
  return (*_p->_p++ = _c);
 else
  return (__swbuf(_c, _p));
}
# 428 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/stdio.h"
int fdprintf(int, const char*, ...);
int vfdprintf(int, const char*, __va_list);
# 23 "c:/marmalade/7.3/modules/iwutil/h/IwDebug.h" 2
# 1 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/stdlib.h" 1
# 37 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/stdlib.h"
# 1 "c:\\program files (x86)\\android\\android-ndk-r8e\\toolchains\\arm-linux-androideabi-4.7\\prebuilt\\windows-x86_64\\bin\\../lib/gcc/arm-linux-androideabi/4.7/include/stddef.h" 1 3 4
# 38 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/stdlib.h" 2

# 1 "c:\\program files (x86)\\android\\android-ndk-r8e\\toolchains\\arm-linux-androideabi-4.7\\prebuilt\\windows-x86_64\\bin\\../lib/gcc/arm-linux-androideabi/4.7/include/stddef.h" 1 3 4
# 40 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/stdlib.h" 2
# 1 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/string.h" 1
# 32 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/string.h"
# 1 "c:\\program files (x86)\\android\\android-ndk-r8e\\toolchains\\arm-linux-androideabi-4.7\\prebuilt\\windows-x86_64\\bin\\../lib/gcc/arm-linux-androideabi/4.7/include/stddef.h" 1 3 4
# 33 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/string.h" 2
# 1 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/malloc.h" 1
# 26 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/malloc.h"
# 1 "c:\\program files (x86)\\android\\android-ndk-r8e\\toolchains\\arm-linux-androideabi-4.7\\prebuilt\\windows-x86_64\\bin\\../lib/gcc/arm-linux-androideabi/4.7/include/stddef.h" 1 3 4
# 27 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/malloc.h" 2

extern "C" {

extern __attribute__((malloc)) void* malloc(size_t);
extern __attribute__((malloc)) void* calloc(size_t, size_t);
extern void* realloc(void *, size_t);
extern void free(void *);

extern void* memalign(size_t alignment, size_t bytesize);
extern size_t malloc_usable_size(void*);

extern void* valloc(size_t bytesize);
extern void* pvalloc(size_t bytesize);



struct mallinfo {
  size_t arena;
  size_t ordblks;
  size_t smblks;
  size_t hblks;
  size_t hblkhd;
  size_t usmblks;
  size_t fsmblks;
  size_t uordblks;
  size_t fordblks;
  size_t keepcost;
};


extern struct mallinfo mallinfo(void);

}
# 34 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/string.h" 2

extern "C" {

extern void* memccpy(void *, const void *, int, size_t);
extern void* memchr(const void *, int, size_t);
extern void* memrchr(const void *, int, size_t);
extern int memcmp(const void *, const void *, size_t);
extern void* memcpy(void *, const void *, size_t);
extern void* memmove(void *, const void *, size_t);
extern void* memset(void *, int, size_t);
extern void* memmem(const void *, size_t, const void *, size_t);
extern void memswap(void *, void *, size_t);

extern char* index(const char *, int);
extern char* rindex(const char *, int);
extern char* strchr(const char *, int);
extern char* strrchr(const char *, int);

extern size_t strlen(const char *);
extern int strcmp(const char *, const char *);
extern char* strcpy(char *, const char *);
extern char* strcat(char *, const char *);

extern int strcasecmp(const char *, const char *);
extern int strncasecmp(const char *, const char *, size_t);
extern char* strdup(const char *);

extern char* strstr(const char *, const char *);
extern char* strcasestr(const char *haystack, const char *needle);
extern char* strtok(char *, const char *);
extern char* strtok_r(char *, const char *, char**);

extern char* strerror(int);
extern int strerror_r(int errnum, char *buf, size_t n);

extern size_t strnlen(const char *, size_t);
extern char* strncat(char *, const char *, size_t);
extern char* strndup(const char *, size_t);
extern int strncmp(const char *, const char *, size_t);
extern char* strncpy(char *, const char *, size_t);

extern size_t strlcat(char *, const char *, size_t);
extern size_t strlcpy(char *, const char *, size_t);

extern size_t strcspn(const char *, const char *);
extern char* strpbrk(const char *, const char *);
extern char* strsep(char **, const char *);
extern size_t strspn(const char *, const char *);

extern char* strsignal(int sig);

extern int strcoll(const char *, const char *);
extern size_t strxfrm(char *, const char *, size_t);

}
# 41 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/stdlib.h" 2
# 1 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/alloca.h" 1
# 42 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/stdlib.h" 2
# 1 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/strings.h" 1
# 45 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/strings.h"
extern "C" {
int bcmp(const void *, const void *, size_t);
void bcopy(const void *, void *, size_t);
void bzero(void *, size_t);
int ffs(int);
char *index(const char *, int);
char *rindex(const char *, int);
int strcasecmp(const char *, const char *);
int strncasecmp(const char *, const char *, size_t);
}
# 43 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/stdlib.h" 2
# 1 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/memory.h" 1
# 44 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/stdlib.h" 2

extern "C" {




extern __attribute__((__noreturn__)) void exit(int);
extern __attribute__((__noreturn__)) void abort(void);
extern int atexit(void (*)(void));

extern char *getenv(const char *);
extern int putenv(const char *);
extern int setenv(const char *, const char *, int);
extern int unsetenv(const char *);
extern int clearenv(void);

extern char *mktemp (char *);
extern int mkstemp (char *);

extern long strtol(const char *, char **, int);
extern long long strtoll(const char *, char **, int);
extern unsigned long strtoul(const char *, char **, int);
extern unsigned long long strtoull(const char *, char **, int);
extern double strtod(const char *nptr, char **endptr);

static __inline__ float strtof(const char *nptr, char **endptr)
{
    return (float)strtod(nptr, endptr);
}

extern int atoi(const char *);
extern long atol(const char *);
extern long long atoll(const char *);

static __inline__ double atof(const char *nptr)
{
    return (strtod(nptr, __null));
}

static __inline__ int abs(int __n) {
    return (__n < 0) ? -__n : __n;
}

static __inline__ long labs(long __n) {
    return (__n < 0L) ? -__n : __n;
}

static __inline__ long long llabs(long long __n) {
    return (__n < 0LL) ? -__n : __n;
}

extern char * realpath(const char *path, char *resolved);
extern int system(const char * string);

extern void * bsearch(const void *key, const void *base0,
 size_t nmemb, size_t size,
 int (*compar)(const void *, const void *));

extern void qsort(void *, size_t, size_t, int (*)(const void *, const void *));

extern long jrand48(unsigned short *);
extern long mrand48(void);
extern long nrand48(unsigned short *);
extern long lrand48(void);
extern unsigned short *seed48(unsigned short*);
extern double erand48(unsigned short xsubi[3]);
extern double drand48(void);
extern void srand48(long);
extern unsigned int arc4random(void);
extern void arc4random_stir(void);
extern void arc4random_addrandom(unsigned char *, int);


static __inline__ int rand(void) {
    return (int)lrand48();
}
static __inline__ void srand(unsigned int __s) {
    srand48(__s);
}
static __inline__ long random(void)
{
    return lrand48();
}
static __inline__ void srandom(unsigned int __s)
{
    srand48(__s);
}



extern int unlockpt(int);
extern char* ptsname(int);
extern int ptsname_r(int, char*, size_t);
extern int getpt(void);

static __inline__ int grantpt(int __fd __attribute((unused)))
{
  (void)__fd;
  return 0;
}

typedef struct {
    int quot;
    int rem;
} div_t;

extern div_t div(int, int);

typedef struct {
    long int quot;
    long int rem;
} ldiv_t;

extern ldiv_t ldiv(long, long);

typedef struct {
    long long int quot;
    long long int rem;
} lldiv_t;

extern lldiv_t lldiv(long long, long long);



extern int mblen(const char *, size_t);
extern size_t mbstowcs(wchar_t *, const char *, size_t);
extern int mbtowc(wchar_t *, const char *, size_t);


extern int wctomb(char *, wchar_t);
extern size_t wcstombs(char *, const wchar_t *, size_t);
# 183 "c:/Program Files (x86)/Android/android-ndk-r8e/platforms/android-9/arch-arm/usr/include/stdlib.h"
}
# 24 "c:/marmalade/7.3/modules/iwutil/h/IwDebug.h" 2
# 51 "c:/marmalade/7.3/modules/iwutil/h/IwDebug.h"
typedef void(*IwAssertTextCallback)(char* pBuffer);

extern "C" {

typedef s3eErrorShowResult(*IwAssertCallback)(const char* channel, const char* pExpr, const char* pFilename, int32 line, const char* message);
typedef s3eErrorShowResult(*IwErrorCallback)(const char* message);
# 65 "c:/marmalade/7.3/modules/iwutil/h/IwDebug.h"
 s3eBool IwDebugTraceIsChannelOn(const char* channel, s3eBool default_on);
# 91 "c:/marmalade/7.3/modules/iwutil/h/IwDebug.h"
 s3eBool IwDebugTraceChannelSwitch(const char* channel, s3eBool new_state);
# 101 "c:/marmalade/7.3/modules/iwutil/h/IwDebug.h"
 void IwDebugTraceLinePrintf(const char* fmt, ...)

__attribute__((format(printf, 1, 2)))

;






 void IwDebugTraceLineVPrintf(const char* fmt, va_list args);


 void IwDebugAssertSetUID(uint32 n);







 s3eBool IwDebugAssertIsChannelOn(const char* channel);







 void IwDebugClearConfigCache();
# 141 "c:/marmalade/7.3/modules/iwutil/h/IwDebug.h"
 void IwDebugAssertSetMessage(const char* fmt, ...)

__attribute__((format(printf, 1, 2)))

;
# 168 "c:/marmalade/7.3/modules/iwutil/h/IwDebug.h"
 s3eErrorShowResult IwDebugAssertShow(const char* pExpr, const char* pFilename, int32 line, uint8 ignorable);






 IwAssertTextCallback IwAssertRegisterTextCallback(IwAssertTextCallback fn);






 IwAssertCallback IwAssertRegisterCallback(IwAssertCallback fn);
# 192 "c:/marmalade/7.3/modules/iwutil/h/IwDebug.h"
 s3eErrorShowResult IwDebugErrorShow(const char* Args, ...)

__attribute__((format(printf, 1, 2)))

;






 IwErrorCallback IwDebugErrorRegisterCallback(IwErrorCallback fn);

}
# 584 "c:/marmalade/7.3/modules/iwutil/h/IwDebug.h"
template <class _To, class _From>
_To IwSafeCast(_From from)
{
# 597 "c:/marmalade/7.3/modules/iwutil/h/IwDebug.h"
    return static_cast <_To> (from);
}
# 37 "c:/marmalade/7.3/modules/iwutil/h/IwArray.h" 2
# 1 "c:/marmalade/7.3/modules/iwutil/h/IwMath.h" 1
# 87 "c:/marmalade/7.3/modules/iwutil/h/IwMath.h"
static inline int32 IwRoundFraction(double aValue)
{
    double lPositive = (aValue < 0.0f) ? -aValue : aValue;
    double lDecimal = lPositive - (double) ((int32) lPositive);
    int32 lRetVal;

    if (aValue < 0.0f)
    {
        if (lDecimal >= 0.5f)
        {
            lRetVal = ((int32) aValue) - 1;
        }
        else
        {
            lRetVal = (int32) aValue;
        }
    }
    else
    {
        if (lDecimal >= 0.5f)
        {
            lRetVal = ((int32) aValue) + 1;
        }
        else
        {
            lRetVal = (int32) aValue;
        }
    }
    return lRetVal;
}







static inline uint8 iwlzc(uint32 a)
{
    uint8 r=0;
    if ((a >> 16) == 0) {r+=16; a<<=16;}
    if ((a >> 24) == 0) {r+=8; a<<=8;}
    if ((a >> 28) == 0) {r+=4; a<<=4;}
    if ((a >> 30) == 0) {r+=2; a<<=2;}
    if ((a >> 31) == 0) {r+=1;}
    return r;
}






static inline uint8 iwlog2(uint32 a)
{
    return (uint8)(31-iwlzc(a));
}
# 158 "c:/marmalade/7.3/modules/iwutil/h/IwMath.h"
static inline uint32 clz(uint32 a)
{

    int32 r=0;
    if ((a >> 16) == 0) {r+=16; a<<=16;}
    if ((a >> 24) == 0) {r+=8; a<<=8;}
    if ((a >> 28) == 0) {r+=4; a<<=4;}
    if ((a >> 30) == 0) {r+=2; a<<=2;}
    if ((a >> 31) == 0) {r+=1;}
    return r;
}
# 38 "c:/marmalade/7.3/modules/iwutil/h/IwArray.h" 2

# 1 "c:/marmalade/7.3/modules/iwutil/h/IwSerialise.h" 1
       
# 18 "c:/marmalade/7.3/modules/iwutil/h/IwSerialise.h"
# 1 "c:/marmalade/7.3/s3e/h/s3eFile.h" 1
# 19 "c:/marmalade/7.3/modules/iwutil/h/IwSerialise.h" 2

class CIwManaged;
class CIwTextParserITX;
# 39 "c:/marmalade/7.3/modules/iwutil/h/IwSerialise.h"
typedef void(*IwSerialiseUserCallback)();





struct IwSerialiseContext
{
    bool read;
    uint32 base;
    s3eFile* handle;
    char filename[160];
    uint32 bytesRead;
    uint32 callbackPeriod;
    uint8 buffer[8];
    int32 headBit;
    uint32 version;
    uint16 versionUser;
    uint16 pad;
    IwSerialiseUserCallback callback;
};
extern IwSerialiseContext g_IwSerialiseContext;
extern int g_IwSerialiseContextValid;
# 76 "c:/marmalade/7.3/modules/iwutil/h/IwSerialise.h"
enum IwSerialiseMode
{
    IW_SERIALISE_WRITE = 0,
    IW_SERIALISE_READ = 1
};
# 89 "c:/marmalade/7.3/modules/iwutil/h/IwSerialise.h"
static inline bool IwSerialiseIsReading() {return g_IwSerialiseContext.read == true;}
# 98 "c:/marmalade/7.3/modules/iwutil/h/IwSerialise.h"
static inline bool IwSerialiseIsWriting() {return g_IwSerialiseContext.read == false;}
# 109 "c:/marmalade/7.3/modules/iwutil/h/IwSerialise.h"
static inline void IwSerialiseSetUserVersion(uint16 v) {g_IwSerialiseContext.versionUser = v;}
# 118 "c:/marmalade/7.3/modules/iwutil/h/IwSerialise.h"
static inline uint16 IwSerialiseGetUserVersion() {return g_IwSerialiseContext.versionUser;}







static inline bool IwIsSerialiseOpen(){return (g_IwSerialiseContextValid > 0);}
# 135 "c:/marmalade/7.3/modules/iwutil/h/IwSerialise.h"
void IwSerialiseOpen(const char* filename, IwSerialiseMode mode, bool ram=false);
# 145 "c:/marmalade/7.3/modules/iwutil/h/IwSerialise.h"
static inline void IwSerialiseOpen(const char* filename, bool read, bool ram=false)
{
    IwSerialiseOpen(filename, read ? IW_SERIALISE_READ : IW_SERIALISE_WRITE, ram);
}






bool IwSerialiseExists(const char* filename, bool ram=false);







bool IwSerialiseEOF();
# 173 "c:/marmalade/7.3/modules/iwutil/h/IwSerialise.h"
void IwSerialiseOpenFromMemory(void* pBuffer, int size, IwSerialiseMode mode);







static inline void IwSerialiseOpenFromMemory(void* pBuffer, int size, bool read)
{
    IwSerialiseOpenFromMemory(pBuffer, size, read ? IW_SERIALISE_READ : IW_SERIALISE_WRITE);
}






void IwSerialiseClose();






void IwSerialiseResetCallbackCount();






void IwSerialiseSetCallbackPeriod(uint32 p);






void IwSerialiseSetCallback(IwSerialiseUserCallback cb);
# 221 "c:/marmalade/7.3/modules/iwutil/h/IwSerialise.h"
static inline void _SerialiseScalarType(IwSerialiseContext& c, void* var, int itemSize, int numItems)
{

    if (c.read == true)
        s3eFileRead(var, itemSize, numItems, c.handle);
    else
        s3eFileWrite(var, itemSize, numItems, c.handle);
# 249 "c:/marmalade/7.3/modules/iwutil/h/IwSerialise.h"
}
# 260 "c:/marmalade/7.3/modules/iwutil/h/IwSerialise.h"
void IwSerialiseDouble(double& var, int n=1, int numBits=sizeof(double)*8, int stride=sizeof(double));
# 271 "c:/marmalade/7.3/modules/iwutil/h/IwSerialise.h"
void IwSerialiseFloat(float& var, int n=1, int numBits=sizeof(float)*8, int stride=sizeof(float));
# 282 "c:/marmalade/7.3/modules/iwutil/h/IwSerialise.h"
void IwSerialiseUInt64(uint64& var, int n=1, int numBits=sizeof(uint64)*8, int stride=sizeof(uint64));
# 293 "c:/marmalade/7.3/modules/iwutil/h/IwSerialise.h"
void IwSerialiseInt64(int64& var, int n=1, int numBits=sizeof(int64)*8-1, int stride=sizeof(int64));
# 305 "c:/marmalade/7.3/modules/iwutil/h/IwSerialise.h"
void IwSerialiseUInt32(uint32& var, int n=1, int numBits=sizeof(uint32)*8, int stride=sizeof(uint32));
# 316 "c:/marmalade/7.3/modules/iwutil/h/IwSerialise.h"
void IwSerialiseInt32(int32& var, int n=1, int numBits=sizeof(int32)*8-1, int stride=sizeof(int32));
# 327 "c:/marmalade/7.3/modules/iwutil/h/IwSerialise.h"
void IwSerialiseUInt16(uint16& var, int n=1, int numBits=sizeof(uint16)*8, int stride=sizeof(uint16));
# 338 "c:/marmalade/7.3/modules/iwutil/h/IwSerialise.h"
void IwSerialiseInt16(int16& var, int n=1, int numBits=sizeof(int16)*8-1, int stride=sizeof(int16));
# 349 "c:/marmalade/7.3/modules/iwutil/h/IwSerialise.h"
void IwSerialiseUInt8(uint8& var, int n=1, int numBits=sizeof(uint8)*8, int stride=sizeof(uint8));
# 360 "c:/marmalade/7.3/modules/iwutil/h/IwSerialise.h"
void IwSerialiseInt8(int8& var, int n=1, int numBits=sizeof(int8)*8-1, int stride=sizeof(int8));
# 371 "c:/marmalade/7.3/modules/iwutil/h/IwSerialise.h"
void IwSerialiseChar(char& var, int n=1, int numBits=sizeof(int8)*8-1, int stride=sizeof(char));
# 382 "c:/marmalade/7.3/modules/iwutil/h/IwSerialise.h"
void IwSerialiseBool(bool& var, int n=1, int numBits=1, int stride=sizeof(bool));
# 392 "c:/marmalade/7.3/modules/iwutil/h/IwSerialise.h"
void IwSerialiseEnum(void* pVar);





template <class T, bool SGN>
void _IwSerialiseBitDepthRequired(T& var, int n, int stride, void(*CB1)(T&, int, int, int))
{

    uint32 mb;
    if (g_IwSerialiseContext.read == false)
    {
        T* pVal = &var;
        uint32 t = n;
        mb = 1;
        while(t-- && (mb < sizeof(T)*8))
        {
            T v = *pVal;
            pVal += stride / sizeof(T);
            if (SGN)
            {
                if (v & (1ul << ((sizeof(T)*8) - 1)))
                    v = ~v;
            }
            while((v >= ((T)1 << mb)) && (mb < sizeof(T)*8))
                mb++;
        }
    }

    IwSerialiseUInt32(mb, 1, 6);
    (CB1)(var, n, mb, stride);



}
# 440 "c:/marmalade/7.3/modules/iwutil/h/IwSerialise.h"
static inline void IwSerialiseCharBitDepthRequired(char& var, int n=1, int stride=sizeof(char))
{
    _IwSerialiseBitDepthRequired<char, true>(var, n, stride, IwSerialiseChar);
}
# 456 "c:/marmalade/7.3/modules/iwutil/h/IwSerialise.h"
static inline void IwSerialiseInt8BitDepthRequired(int8& var, int n=1, int stride=sizeof(int8))
{
    _IwSerialiseBitDepthRequired<int8, true>(var, n, stride, IwSerialiseInt8);
}
# 472 "c:/marmalade/7.3/modules/iwutil/h/IwSerialise.h"
static inline void IwSerialiseUInt8BitDepthRequired(uint8& var, int n=1, int stride=sizeof(uint8))
{
    _IwSerialiseBitDepthRequired<uint8, false>(var, n, stride, IwSerialiseUInt8);
}
# 488 "c:/marmalade/7.3/modules/iwutil/h/IwSerialise.h"
static inline void IwSerialiseInt16BitDepthRequired(int16& var, int n=1, int stride=sizeof(int16))
{
    _IwSerialiseBitDepthRequired<int16, true>(var, n, stride, IwSerialiseInt16);
}
# 504 "c:/marmalade/7.3/modules/iwutil/h/IwSerialise.h"
static inline void IwSerialiseUInt16BitDepthRequired(uint16& var, int n=1, int stride=sizeof(uint16))
{
    _IwSerialiseBitDepthRequired<uint16, false>(var, n, stride, IwSerialiseUInt16);
}
# 520 "c:/marmalade/7.3/modules/iwutil/h/IwSerialise.h"
static inline void IwSerialiseInt32BitDepthRequired(int32& var, int n=1, int stride=sizeof(int32))
{
    _IwSerialiseBitDepthRequired<int32, true>(var, n, stride, IwSerialiseInt32);
}
# 536 "c:/marmalade/7.3/modules/iwutil/h/IwSerialise.h"
static inline void IwSerialiseUInt32BitDepthRequired(uint32& var, int n=1, int stride=sizeof(uint32))
{
    _IwSerialiseBitDepthRequired<uint32, false>(var, n, stride, IwSerialiseUInt32);
}
# 591 "c:/marmalade/7.3/modules/iwutil/h/IwSerialise.h"
void IwSerialiseMappedData(const uint16* pMap, void* _pData, int numStructs, int stride);
# 602 "c:/marmalade/7.3/modules/iwutil/h/IwSerialise.h"
void IwSerialiseString(char* text, int maxLen=0);
# 615 "c:/marmalade/7.3/modules/iwutil/h/IwSerialise.h"
void IwSerialiseManagedHash(void* pptr);






void IwSerialiseManagedObject(CIwManaged*& pObj);
# 633 "c:/marmalade/7.3/modules/iwutil/h/IwSerialise.h"
void IwSerialiseFile(CIwTextParserITX* pParser, char const* filename, void* pptr, IwSerialiseMode mode);
# 642 "c:/marmalade/7.3/modules/iwutil/h/IwSerialise.h"
static inline void IwSerialiseFile(CIwTextParserITX* pParser, char const* filename, void* pptr, bool read)
{
    IwSerialiseFile(pParser, filename, pptr, read ? IW_SERIALISE_READ : IW_SERIALISE_WRITE);
}
# 40 "c:/marmalade/7.3/modules/iwutil/h/IwArray.h" 2
# 48 "c:/marmalade/7.3/modules/iwutil/h/IwArray.h"
template <class X, class A>
class ReallocateDefault
{
public:
    static X* Reallocate(uint32 q, uint32 num_p, uint32 max_p, X* p, A& a)
    {
        return a.reallocate(p, q*sizeof(X));
    }
};

template <class X, class A>
class ReallocateStandard
{
public:
    static X* Reallocate(uint32 q, uint32 num_p, uint32 max_p, X* p, A& a)
    {
        X* new_p = a.allocate(q*sizeof(X));
        for (uint32 i = 0; i < num_p; i++)
        {
            new (&new_p[i]) X(p[i]);
            p[i].~X();
        }
        a.deallocate(p, max_p);
        return new_p;
    }
};






template <class X, class A=CIwAllocator<X>, class REALLOCATE = ReallocateDefault<X, A > >
class CIwArray
{
protected:
    X * p;
    uint32 num_p;
    uint32 max_p;
    bool block_delete : 1;
    bool no_grow : 1;
public:
    typedef X * iterator;
    typedef const X * const_iterator;





    iterator begin() const { return p; }





    iterator end() const { return p+num_p; }




    bool empty() const { return num_p==0; }




    uint32 size() const { return num_p; }





    uint32 capacity() const { return max_p; }





    X* data() { return p; }





    explicit CIwArray(uint32 sz=0) : p(0), num_p(0), max_p(0), block_delete(false), no_grow(false)
    {
        resize(sz);
        clear();
    }

    ~CIwArray()
    {
        for (uint32 i=0; i<num_p; i++)
            p[i].~X();
        if (!block_delete)
        {
            a.deallocate(p, num_p);
            p = 0;
        }
    }






    CIwArray(CIwArray const & v) : p(0), num_p(0), max_p(0), block_delete(false), no_grow(false)
    {
        (*this) = v;
    }







    void SerialiseHeader()
    {

        if (g_IwSerialiseContext.read)
        {
            uint32 s;
            IwSerialiseUInt32(s);
            resize_optimised(s);
        }
        else
        {
            uint32 s = size();
            IwSerialiseUInt32(s);
        }

    }






    void operator=(CIwArray const & v)
    {
        clear();
        if (v.size() < max_p/2 || v.size() > max_p)
            set_capacity(v.size());
        for (uint32 i=0; i<v.size(); i++)
            push_back( v.p[i] );
    }





    void clear()
    {
        truncate(0);
    }






    void clear_optimised()
    {
        truncate(0);
        set_capacity(0);
    }




    int MemoryUsage() const
    {
        return sizeof(X)*max_p + sizeof(*this);
    }







    void resize_optimised(uint32 s)
    {
        if (s > num_p)
            set_capacity(s);
        resize(s);
        set_capacity(num_p);
    }






    void optimise_capacity()
    {
        if (!block_delete)
            set_capacity(num_p);
    }






    void reserve(uint32 q)
    {
        if (q > max_p)
        {
            set_capacity( q+(max_p<16 ? 2 : max_p/8) );
        }
    }






    void reserve_optimised(int q)
    {
        ((void)0);
        if (q > (int)max_p)
        {
            set_capacity( q );
        }
    }







    void resize_quick(const uint32 q)
    {
        ((void)0);
        num_p = q;
    }






    void resize(const uint32 q)
    {
        if (q <= num_p)
            truncate(q);
        else
            push_back_qty(q-num_p);
    }
# 308 "c:/marmalade/7.3/modules/iwutil/h/IwArray.h"
    int find(X const & value) const
    {
        for (uint32 i=0; i<num_p; i++)
            if (p[i]==value)
            {
                return i;
            }
        return -1;
    }






    bool contains(X const & value) const
    {
        for (uint32 i=0; i<num_p; i++)
            if (p[i]==value)
            {
                return true;
            }
        return false;
    }
# 344 "c:/marmalade/7.3/modules/iwutil/h/IwArray.h"
    bool find_and_remove(X const & value)
    {
        for (uint32 i=0; i<num_p; i++)
            if (p[i]==value)
            {
                erase(i, i+1);
                return true;
            }
        return false;
    }
# 366 "c:/marmalade/7.3/modules/iwutil/h/IwArray.h"
    bool find_and_remove_fast(X const & value)
    {
        for (uint32 i=0; i<num_p; i++)
            if (p[i]==value)
            {
                erase_fast(i, i+1);
                return true;
            }
        return false;
    }







    void pop_back()
    {
        truncate(num_p-1);
    }







    X pop_back_get()
    {
        ((void)0);

        X temp = p[num_p-1];
        pop_back();
        return temp;
    }
# 412 "c:/marmalade/7.3/modules/iwutil/h/IwArray.h"
    int erase_fast(const int i)
    {
        return erase_fast(i,i+1);
    }
# 428 "c:/marmalade/7.3/modules/iwutil/h/IwArray.h"
    int erase_fast(const int i, const int j)
    {
        ((void)0);

        const uint32 w = j-i;
        const uint32 w_copy = (((w) < (num_p-j)) ? (w) : (num_p-j));

        for (uint32 k=0; k<w_copy; k++)
            p[i+k] = p[num_p-w_copy+k];

        truncate(num_p-w);
        return i;
    }





    iterator erase_fast(iterator i)
    {
        return p + erase_fast(i-p,i-p+1);
    }






    iterator erase_fast(iterator i, iterator j)
    {
        return p + erase_fast(i-p,j-p);
    }
# 470 "c:/marmalade/7.3/modules/iwutil/h/IwArray.h"
    int erase(const int i)
    {
        return erase(i, i+1);
    }
# 484 "c:/marmalade/7.3/modules/iwutil/h/IwArray.h"
    int erase(const uint32 i, const uint32 j)
    {
        ((void)0);
        const int w = j-i;
        for (uint32 k=i; k<num_p-w; k++)
            p[k] = p[k+w];
        truncate(num_p-w);
        return i;
    }





    iterator erase(iterator i)
    {
        return p + erase(i-p,i-p+1);
    }






    iterator erase(iterator i, iterator j)
    {
        return p + erase(i-p,j-p);
    }







    void insert_slow(X const & x, uint32 pos)
    {
        ((void)0);
        if (pos==size())
            push_back(x);
        else
        {
            reserve(num_p+1);
            ((void)0);


            new (&p[num_p]) X(p[num_p-1]);
            for (int k=num_p-pos-2; k>=0; k--)
            {
                p[pos+k+1] = p[pos+k];
            }
            num_p++;
            p[pos] = x;
        }
    }







    void insert_slow(CIwArray &a, uint32 pos)
    {
        ((void)0);
        if (pos==size())
            append(a);
        else
        {
            int s = a.size();
            reserve(num_p+s);


            for (int k=num_p-pos-1; k>=0; k--)
            {
                if (pos+k+s>=num_p)
                    new (&p[pos+k+s]) X(p[pos+k]);
                else
                    p[pos+k+s] = p[pos+k];
            }
            for (int i=0;i<s;i++)
            {
                if (pos+i>=num_p)
                    new (&p[pos+i]) X(a.p[i]);
                else
                    p[pos+i] = a.p[i];
            }
            num_p+=s;
        }
    }






    X const & back() const
    {
        ((void)0);
        return p[size()-1];
    }
    X & back()
    {
        ((void)0);
        return p[size()-1];
    }






    X const & front() const
    {
        ((void)0);
        return p[0];
    }

    X & front()
    {
        ((void)0);
        return p[0];
    }





    int append(X const & x) { return push_back(x); }
# 621 "c:/marmalade/7.3/modules/iwutil/h/IwArray.h"
    int append(CIwArray & a)
    {
        int c = num_p;
        resize(num_p+a.num_p);
        for (uint32 d=0;d<a.num_p;d++)
            p[c+d] = a.p[d];
        return num_p-1;
    }







    int push_back(X const & x)
    {
# 650 "c:/marmalade/7.3/modules/iwutil/h/IwArray.h"
        ((void)0);

        reserve(num_p+1);
        ((void)0);
        new (p+num_p) X(x);
        return num_p++;
    }






    int push_back()
    {
        reserve(num_p+1);
        new (p+num_p) X;
        return num_p++;
    }







    void push_back_qty(X const & x, int qty)
    {
        if (!qty) return;
        ((void)0);
        ((void)0);
        reserve(num_p+qty);
        for (int i=0; i<qty; i++)
        {
            new (p+num_p+i) X(x);



        }
        num_p+=qty;
    }






    void push_back_qty(int qty)
    {
        ((void)0);
        reserve(num_p+qty);
        for (int i=0; i<qty; i++)
            new (p+num_p+i) X;
        num_p+=qty;
    }







    X & operator [] (int const i) const
    {
        uint32 index = (uint32)i;
        ((void)0);
        return p[index];
    }






    void Share(CIwArray<X,A> const & other)
    {
        if (!block_delete)
            clear_optimised();
        p=other.p;
        num_p=other.num_p;
        max_p=other.max_p;
        block_delete = true;
    }
# 741 "c:/marmalade/7.3/modules/iwutil/h/IwArray.h"
    void Share(X* buffer, int current, int max)
    {
        if (!block_delete)
            clear_optimised();
        p=buffer;
        num_p=current;
        max_p=max;
        block_delete = true;
    }





    bool CanResize()
    {
        return !block_delete;
    }
# 767 "c:/marmalade/7.3/modules/iwutil/h/IwArray.h"
    void LockSize(bool lock)
    {
        no_grow = lock;
    }





    void set_capacity(uint32 q);






    void truncate(const uint32 q)
    {
        ((void)0);

        for (uint32 i=q; i<num_p; i++)
            p[i].~X();
        num_p = q;
    }





    void swap(CIwArray<X,A>& v)
    {
        X* tmp_p = p;
        uint32 tmp_num_p = num_p;
        uint32 tmp_max_p = max_p;
        bool tmp_block_delete = block_delete;
        bool tmp_no_grow = no_grow;

        p = v.p;
        num_p = v.num_p;
        max_p = v.max_p;
        block_delete = v.block_delete;
        no_grow = v.no_grow;

        v.p = tmp_p;
        v.num_p = tmp_num_p;
        v.max_p = tmp_max_p;
        v.block_delete = tmp_block_delete;
        v.no_grow = tmp_no_grow;
    }

private:
    A a;
};

template <class X, class A, class REALLOCATE>
void CIwArray<X,A,REALLOCATE>::set_capacity(uint32 q)
{
    ((void)0);
    ((void)0);
    ((void)0);
    if (max_p==q) return;
    max_p = q;
    if (q==0)
    {
        a.deallocate(p, max_p);
        p = 0;
    }
    else
    {
        p = REALLOCATE::Reallocate(q, num_p, max_p, p, a);
    }
}



template<>
class CIwArray<bool, CIwAllocator<bool> >
{
    CIwArray<uint32, CIwAllocator<uint32> > b;
    int l;
    void fit()
    {
        ((void)0);
        b.resize((l+31) >> 5);
    }
public:
    CIwArray<bool, CIwAllocator<bool> >(int sz=0) : l(sz) { fit(); }
    void resize(int s)
    {
        l = s;
        fit();
    }
    void resize(int s, bool set_value)
    {
        resize(s);
        set_all(set_value);
    }
    void clear()
    {
        resize(0);
    }
    void clear_optimised()
    {
        b.clear_optimised();
    }
    uint32 size() const
    {
        return l;
    }
    void push_back(bool i)
    {
        l++;
        fit();
        set(l-1, i);
    }
    bool pop_back()
    {
        ((void)0);
        bool r = (*this)[l-1];
        l--;
        fit();
        return r;
    }
    void set_all(bool v)
    {
        for (uint32 i=0; i<b.size(); i++)
            b[i] = v ? 0xffffffff : 0;
    }
    void set(int i, bool v)
    {
        ((void)0);
        if (v)
            b[i>>5] |= (1<<(i&31));
        else
            b[i>>5] &= ~(1<<(i&31));
    }
    bool operator[] (int i) const
    {
        ((void)0);
        return (b[i>>5] & (1<<(i&31))) != 0;
    }

    void Serialise()
    {

        int32 il = l;
        IwSerialiseInt32(il);
        l = il;
        b.SerialiseHeader();
        IwSerialiseUInt32(*b.data(), b.size());

    }
};
# 18 "c:/marmalade/7.3/modules/iwutil/h/IwManaged.h" 2



# 1 "c:/marmalade/7.3/modules/iwutil/h/IwHashString.h" 1
       
# 17 "c:/marmalade/7.3/modules/iwutil/h/IwHashString.h"
# 1 "c:/marmalade/7.3/modules/iwutil/h/IwString.h" 1
